<XQuery><Module><VersionDecl><TOKEN>xquery</TOKEN> <TOKEN>version</TOKEN> <StringLiteral>"3.1"</StringLiteral><TOKEN>;</TOKEN></VersionDecl>
(:
 : Copyright (c) 2019 Quodatum Ltd
 :
 : Licensed under the Apache License, Version 2.0 (the "License");
 : you may not use this file except in compliance with the License.
 : You may obtain a copy of the License at
 :
 :     http://www.apache.org/licenses/LICENSE-2.0
 :
 : Unless required by applicable law or agreed to in writing, software
 : distributed under the License is distributed on an "AS IS" BASIS,
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 : See the License for the specific language governing permissions and
 : limitations under the License.
 :)
 
 (:~
 : &lt;h1&gt;xqdoc-htmlmod.xqm&lt;/h1&gt;
 : &lt;p&gt;Library to support html5 rendering of single xqdoc source&lt;/p&gt;
 :
 : @author Andy Bunce
 : @version 0.1
 : @see https://github.com/Quodatum/xqdoca
 :)
 
(:~
 : Generate  html for xqdoc
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>_</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum:xqdoca.generator.simple'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>



<Prolog><NamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>namespace</TOKEN> <NCName>xqdoca</NCName><TOKEN>=</TOKEN><StringLiteral>"https://github.com/Quodatum/xqdoca"</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN>
<AnnotatedDecl><TOKEN>declare</TOKEN>
<Annotation><TOKEN>%</TOKEN><QName>xqdoca:module</QName><TOKEN>(</TOKEN><StringLiteral>"xqdoc"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"xqDoc xml file from the source module"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>xqdoca:output</QName><TOKEN>(</TOKEN><StringLiteral>"xqdoc.xml"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"xml"</StringLiteral><TOKEN>)</TOKEN></Annotation> 
<FunctionDecl><TOKEN>function</TOKEN> <QName>_:xqdoc</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>file</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param><TOKEN>,</TOKEN> 
                 <Param><TOKEN>$</TOKEN><QName>model</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param><TOKEN>,</TOKEN>
                 <Param><TOKEN>$</TOKEN><QName>opts</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param></ParamList>
                 <TOKEN>)</TOKEN>
<EnclosedExpr><TOKEN>{</TOKEN>
  <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqdoc</NCName></Lookup></PostfixExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN>
<Annotation><TOKEN>%</TOKEN><QName>xqdoca:module</QName><TOKEN>(</TOKEN><StringLiteral>"xqparse"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"xqparse xml file from the source module"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>xqdoca:output</QName><TOKEN>(</TOKEN><StringLiteral>"xqparse.xml"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"xml"</StringLiteral><TOKEN>)</TOKEN></Annotation> 
<FunctionDecl><TOKEN>function</TOKEN> <QName>_:xqparse</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>file</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param><TOKEN>,</TOKEN>
                   <Param><TOKEN>$</TOKEN><QName>model</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param><TOKEN>,</TOKEN>
                   <Param><TOKEN>$</TOKEN><QName>opts</QName> <TypeDeclaration><TOKEN>as</TOKEN> <MapType><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></MapType></TypeDeclaration></Param></ParamList>
                   <TOKEN>)</TOKEN>
<EnclosedExpr><TOKEN>{</TOKEN>
  <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqparse</NCName></Lookup></PostfixExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule></Module><EOF/></XQuery>