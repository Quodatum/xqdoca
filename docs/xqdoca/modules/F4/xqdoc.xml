<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-05-15T22:50:45.479+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>xqdoc-html.xqm</xqdoc:name><xqdoc:comment><xqdoc:description><h1>xqdoc-html.xqm</h1>
<p>Library to support html5 rendering of xqdoc</p></xqdoc:description><xqdoc:author>Andy Bunce</xqdoc:author><xqdoc:version>0.1</xqdoc:version><xqdoc:custom tag="__source">lib/xqdoc-html.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";
(:
 : Copyright (c) 2019 Quodatum Ltd
 :
 : Licensed under the Apache License, Version 2.0 (the "License");
 : you may not use this file except in compliance with the License.
 : You may obtain a copy of the License at
 :
 :     http://www.apache.org/licenses/LICENSE-2.0
 :
 : Unless required by applicable law or agreed to in writing, software
 : distributed under the License is distributed on an "AS IS" BASIS,
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 : See the License for the specific language governing permissions and
 : limitations under the License.
 :)
 
 (:~
 : &lt;h1&gt;xqdoc-html.xqm&lt;/h1&gt;
 : &lt;p&gt;Library to support html5 rendering of xqdoc&lt;/p&gt;
 :
 : @author Andy Bunce
 : @version 0.1
 :)
 
(:~
 : Generate XQuery  documentation in html
 : using file:///C:/Users/andy/workspace/app-doc/src/doc/data/doc/models
 : $efolder:="file:///C:/Users/andy/workspace/app-doc/src/doc/data/doc/models"
 : $target:="file:///C:/Users/andy/workspace/app-doc/src/doc/generated/models.xqm"
 :)
module namespace xqhtml = 'quodatum:build.xqdoc-html';
import module namespace tree = 'quodatum:data.tree' at "tree.xqm";
import module namespace xqh = 'quodatum:xqdoca.mod-html' at "xqdoc-htmlmod.xqm";

declare namespace xqdoc="http://www.xqdoc.org/1.0";

declare variable $xqhtml:mod-xslt external :="html-module.xsl";


(:~ transform files to html
 : @param $params  keys: resources 
 : "ext-id": "299",
 : "src-folder": "C:/Users/andy/git/vue-poc/src/vue-poc",
 : "project": "vue-poc"
 :)
declare function xqhtml:index-html2($state as map(*),
                            $opts as map(*)
                            )
as document-node()                            
{
let $d:=&lt;div&gt;
             &lt;h1&gt;
                  &lt;span class="tag tag-success"&gt;
                      { $opts?project }
                  &lt;/span&gt;
                  &amp;#160;XQuery source Documentation 
              &lt;/h1&gt;
             
              { xqhtml:toc($opts) }
              { xqhtml:view-list($opts,"index")}
              &lt;div&gt;src: { $opts?src-folder }&lt;/div&gt;
             
              &lt;div id="ns"&gt;
                  &lt;h1&gt;Module Uris&lt;/h1&gt;
                  &lt;table class="data"&gt;
                  &lt;thead&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Type&lt;/th&gt;
                  &lt;th&gt;Uri&lt;/th&gt;
                  &lt;th&gt;refs&lt;/th&gt;
                  &lt;th&gt;Restxq&lt;/th&gt;
                  &lt;th&gt;Update&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;/thead&gt;
                  &lt;tbody&gt;
                 
                     { for $file  at $pos in $state?files
                      let $type:=if($file?xqparse/name()="ERROR") then 
                                   "ERROR"
                                  else
                                      $file?xqdoc/xqdoc:module/@type/string()
                       order by $type, $file?namespace
                      return  &lt;tr&gt;
                              &lt;td&gt;{  $type }&lt;/td&gt;
                               &lt;td&gt;{xqhtml:link-module($file) }&lt;/td&gt;
                               &lt;td&gt;{$file?xqdoc//xqdoc:invoked=&gt;count() }&lt;/td&gt;
                               &lt;td&gt;{ "R" }&lt;/td&gt;
                               &lt;td&gt;{ "U" }&lt;/td&gt;       
                            &lt;/tr&gt;
                      }
                  &lt;/tbody&gt;
                  &lt;/table&gt;
              &lt;/div&gt;
               &lt;div id="file"&gt;
                  &lt;h1&gt;Files&lt;/h1&gt;
                  &lt;ul&gt;
                      { for $file  at $pos in $state?files
                   
                      return  &lt;li&gt;
                                &lt;a href="{ $file?href }index.html"&gt;
                                   { $file?path }
                                &lt;/a&gt;      
                                { $pos }
                            &lt;/li&gt;
                      }
                  &lt;/ul&gt;
              &lt;/div&gt;

           &lt;/div&gt;
return document{ xqhtml:page($d, $opts ) }
};


(:~ 
 : build toc 
 : params: map{"project":..}
 :)
declare function xqhtml:toc($params)
as element()
{
    &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span class="tag tag-success"&gt;
                    { $params?project }
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                    &lt;a href="#ns"&gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Module uris&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                    &lt;a href="#file"&gt;
                        &lt;span class="secno"&gt;3 &lt;/span&gt;
                        &lt;span class="content"&gt;Files&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
            &lt;/ol&gt;
        &lt;/nav&gt;
};

(:~ tree to list :)
declare function xqhtml:tree-list($tree as element(*),$seq as xs:integer*){
  typeswitch ($tree )
  case element(directory) 
      return &lt;li&gt;
                 &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                 &lt;span class="content"&gt;{$tree/@name/string()}/&lt;/span&gt;
                 &lt;ol class="toc"&gt;{$tree/*!xqhtml:tree-list(.,($seq,position()))}&lt;/ol&gt;
             &lt;/li&gt;
   case element(file) 
      return &lt;li&gt;{if($tree/@target) then
                   &lt;a href="#{$tree/@target}"&gt;
                     &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                     
                      &lt;span class="content" title="{$tree/@target}"&gt;{  $tree/@name/string() }&lt;/span&gt;
                      &lt;div class="tag tag-success" 
                            title="RESTXQ: {$tree/@target}"&gt;GET
                      &lt;/div&gt;
                      &lt;div class="tag tag-danger"  style="float:right"
                            title="RESTXQ: {$tree/@target}"&gt;X
                      &lt;/div&gt;
                   &lt;/a&gt;
               else 
                &lt;span class="content"&gt;{$tree/@name/string()}&lt;/span&gt;
             }&lt;/li&gt;   
  default 
     return &lt;li&gt;unknown&lt;/li&gt;
};

(:~
 : html for page. 
 :)
declare function xqhtml:restxq($state,$annots,$opts)
{
let $tree:=$annots?uri
let $tree:=tree:build($tree)
let $body:= &lt;div&gt;
          &lt;nav id="toc"&gt;
            &lt;h2&gt;
                 &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / RestXQ
            &lt;/h2&gt;
           &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                 &lt;li  href="#main"&gt;
                    &lt;a &gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Paths.&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
      
                 &lt;ol  class="toc"&gt; { $tree/*/*!xqhtml:tree-list(.,2) } &lt;/ol&gt;
                &lt;/li&gt;
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index: &lt;/a&gt;
          
           &lt;ul&gt;{$annots!xqhtml:path-to-html(.)}&lt;/ul&gt;
           &lt;/div&gt;
return  xqhtml:page($body,$opts)
};

(:~ transform xqdoc to html 
 : map { "root": "../../", 
 :        "cache": false(), 
 :        "resources": "resources/", 
 :        "ext-id": "51", 
 :        "filename": "src\main\lib\parsepaths.xq", 
 :        "show-private": true(), 
 :        "src-folder": "C:/Users/andy/git/xqdoca", 
 :         "project": "xqdoca", 
 :         "source": () } 
 :)
declare function xqhtml:xqdoc-html($xqd as element(xqdoc:xqdoc),
                            $params as map(*)
                            )
as document-node()                            
{  
try{
     let $p:=map:remove($params,filter(map:keys($params),function($key){$params?($key) instance of map(*)}))
     return xslt:transform($xqd,$xqhtml:mod-xslt,$p) 
 } catch *{
  document {&lt;div&gt;
             &lt;div&gt;Error: { $err:code } - { $err:description }&lt;/div&gt;
              &lt;pre&gt;error { serialize($params,map{"method":"basex"}) } - { $xqhtml:mod-xslt }&lt;/pre&gt;
            &lt;/div&gt;}
}
};
(:~ transform xqdoc to html no xslt
 : map { "root": "../../", 
 :        "cache": false(), 
 :        "resources": "resources/", 
 :        "ext-id": "51", 
 :        "filename": "src\main\lib\parsepaths.xq", 
 :        "show-private": true(), 
 :        "src-folder": "C:/Users/andy/git/xqdoca", 
 :         "project": "xqdoca", 
 :         "source": () } 
 :)
declare function xqhtml:xqdoc-html2(
  $xqd as element(xqdoc:xqdoc),
        $opts as map(*)
        )
as document-node()                            
{
  let $d:= xqh:xqdoc-html2($xqd,$opts)
return document{ xqhtml:page(&lt;div&gt;{$d}&lt;/div&gt;, $opts ) }
 
};
(:~ import page :)
declare function xqhtml:imports($state,$imports,$opts)
{
  let $body:=&lt;div&gt;
   &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / Imports
            &lt;/h2&gt;
           
            &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index&lt;/a&gt;
           &lt;p&gt;Lists all modules imported.&lt;/p&gt;
           {for $import in $imports
           order by $import?uri
           return &lt;div  id="{ $import?uri }"&gt;
           &lt;h4&gt;{ $import?uri }
           &lt;div  style="float:right"&gt;&lt;a href="#{ $import?uri }"&gt;#&lt;/a&gt;&lt;/div&gt;
           &lt;/h4&gt;
           &lt;ul&gt;
           {for $f in  $import?where
           return &lt;li&gt;&lt;a href="{$f?href}index.html"&gt;{ $f?namespace }&lt;/a&gt;&lt;/li&gt;
         }
           &lt;/ul&gt;
           &lt;/div&gt;
           }
  &lt;/div&gt;
  return  xqhtml:page($body,$opts)
};

(:~ annotations page :)
declare function xqhtml:annotations($state,$annots,$opts)
{
  let $body:=&lt;div&gt;
   &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / Imports
            &lt;/h2&gt;
           
            &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index&lt;/a&gt;
           &lt;p&gt;Lists all Annotations defined.&lt;/p&gt;
       
  &lt;/div&gt;
  return  xqhtml:page($body,$opts)
};

(:~  html for a path :)          
declare function xqhtml:path-to-html($rep as map(*))
as element(li){
   &lt;li id="{ $rep?uri }"&gt;
       &lt;h4&gt;{ $rep?uri }&lt;/h4&gt;
       &lt;ul&gt;{
       let $methods as map(*) :=$rep?methods
       for $method in map:keys($methods)
       let $d:=$methods?($method)
       let $id:=head($d?function)
       return &lt;li&gt;
                    &lt;a href="{$d?uri}index.html#{$id }"&gt;{ $method }&lt;/a&gt;
                    &lt;div&gt;{$d?description}&lt;/div&gt;
              &lt;/li&gt;
       }&lt;/ul&gt;
   &lt;/li&gt;
};
(:~ 
 : generate standard page wrapper
 : uses $opts?resources
  :)
declare function xqhtml:page($body,$opts as map(*)) 
as element(html)
{
    &lt;html&gt;
      &lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
        &lt;meta http-equiv="Generator" content="xqdoca - https://github.com/quodatum/xqdoca" /&gt;

        &lt;title&gt;
          { $opts?project } - xqDocA
        &lt;/title&gt;
        &lt;link rel="shortcut icon" type="image/x-icon" href="{ $opts?resources }xqdoc.png" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }prism.css"/&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }page.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }query.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }base.css" /&gt;
       &lt;style&gt;
				.tag {{font-size: 100%;}}
				&lt;/style&gt;
      &lt;/head&gt;

      &lt;body class="home" id="top"&gt;
        &lt;div id="main"&gt;
        {$body}
        &lt;/div&gt;
        &lt;div class="footer"&gt;
            &lt;p style="text-align:right"&gt;Generated by 
            &lt;a href="https://github.com/Quodatum/xqdoca" target="_blank"&gt;xqDocA&lt;/a&gt; 
            at {current-dateTime()}&lt;/p&gt;
          &lt;/div&gt;
         &lt;script  src="{ $opts?resources }prism.js" type="text/javascript"&gt; &lt;/script&gt;
       
      &lt;/body&gt;
    &lt;/html&gt;
};



(:~ link to module :)
declare 
function xqhtml:link-module($file as map(*))                       
as element(span)
{  
   &lt;span&gt;
    &lt;a href="{ $file?href }index.html" title="{ $file?path }"&gt;{ $file?namespace }&lt;/a&gt; 
    &lt;a href="{ $file?href }index2.html" title="{ $file?path }"&gt;*&lt;/a&gt;
   &lt;/span&gt;
};

(:~ views list :)
declare 
function xqhtml:view-list($opts as map(*),$exclude as xs:string*)                       
as element(dl)
{  
&lt;dl&gt;           
 {for $name in $opts?outputs?views
  where not($name eq $exclude)
  let $def:= map:get($opts?renderers?modules,$name)
  return (&lt;dt&gt;&lt;a href="{ $def?uri }"&gt;{ $name }&lt;/a&gt;&lt;/dt&gt;
         ,&lt;dd&gt;{ $def?title }&lt;/dd&gt;)
  }    
&lt;/dl&gt;
};    </xqdoc:body></xqdoc:module><xqdoc:namespaces><xqdoc:namespace prefix="xqhtml" uri="quodatum:build.xqdoc-html"/><xqdoc:namespace prefix="tree" uri="quodatum:data.tree"/><xqdoc:namespace prefix="xqh" uri="quodatum:xqdoca.mod-html"/><xqdoc:namespace prefix="xqdoc" uri="http://www.xqdoc.org/1.0"/></xqdoc:namespaces><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum:data.tree</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum:xqdoca.mod-html</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:name>xqhtml:mod-xslt</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>transform files to html</xqdoc:description><xqdoc:param>$params  keys: resources 
"ext-id": "299",
"src-folder": "C:/Users/andy/git/vue-poc/src/vue-poc",
"project": "vue-poc"</xqdoc:param></xqdoc:comment><xqdoc:name>xqhtml:index-html2</xqdoc:name><xqdoc:signature>declare function xqhtml:index-html2($state as map(*), $opts as map(*)) as document-node()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>state</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document-node()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:index-html2($state as map(*),
                            $opts as map(*)
                            )
as document-node()                            
{
let $d:=&lt;div&gt;
             &lt;h1&gt;
                  &lt;span class="tag tag-success"&gt;
                      { $opts?project }
                  &lt;/span&gt;
                  &amp;#160;XQuery source Documentation 
              &lt;/h1&gt;
             
              { xqhtml:toc($opts) }
              { xqhtml:view-list($opts,"index")}
              &lt;div&gt;src: { $opts?src-folder }&lt;/div&gt;
             
              &lt;div id="ns"&gt;
                  &lt;h1&gt;Module Uris&lt;/h1&gt;
                  &lt;table class="data"&gt;
                  &lt;thead&gt;
                  &lt;tr&gt;
                  &lt;th&gt;Type&lt;/th&gt;
                  &lt;th&gt;Uri&lt;/th&gt;
                  &lt;th&gt;refs&lt;/th&gt;
                  &lt;th&gt;Restxq&lt;/th&gt;
                  &lt;th&gt;Update&lt;/th&gt;
                  &lt;/tr&gt;
                  &lt;/thead&gt;
                  &lt;tbody&gt;
                 
                     { for $file  at $pos in $state?files
                      let $type:=if($file?xqparse/name()="ERROR") then 
                                   "ERROR"
                                  else
                                      $file?xqdoc/xqdoc:module/@type/string()
                       order by $type, $file?namespace
                      return  &lt;tr&gt;
                              &lt;td&gt;{  $type }&lt;/td&gt;
                               &lt;td&gt;{xqhtml:link-module($file) }&lt;/td&gt;
                               &lt;td&gt;{$file?xqdoc//xqdoc:invoked=&gt;count() }&lt;/td&gt;
                               &lt;td&gt;{ "R" }&lt;/td&gt;
                               &lt;td&gt;{ "U" }&lt;/td&gt;       
                            &lt;/tr&gt;
                      }
                  &lt;/tbody&gt;
                  &lt;/table&gt;
              &lt;/div&gt;
               &lt;div id="file"&gt;
                  &lt;h1&gt;Files&lt;/h1&gt;
                  &lt;ul&gt;
                      { for $file  at $pos in $state?files
                   
                      return  &lt;li&gt;
                                &lt;a href="{ $file?href }index.html"&gt;
                                   { $file?path }
                                &lt;/a&gt;      
                                { $pos }
                            &lt;/li&gt;
                      }
                  &lt;/ul&gt;
              &lt;/div&gt;

           &lt;/div&gt;
return document{ xqhtml:page($d, $opts ) }
}</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>toc</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>view-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>name</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>link-module</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>=&gt;</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>state</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>type</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>type</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>state</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>pos</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>build toc 
params: map{"project":..}</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:toc</xqdoc:name><xqdoc:signature>declare function xqhtml:toc($params as item()*) as element()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>params</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:toc($params)
as element()
{
    &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span class="tag tag-success"&gt;
                    { $params?project }
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                    &lt;a href="#ns"&gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Module uris&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                    &lt;a href="#file"&gt;
                        &lt;span class="secno"&gt;3 &lt;/span&gt;
                        &lt;span class="content"&gt;Files&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
            &lt;/ol&gt;
        &lt;/nav&gt;
}</xqdoc:body><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>tree to list</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:tree-list</xqdoc:name><xqdoc:signature>declare function xqhtml:tree-list($tree as element(), $seq as xs:integer*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>tree</xqdoc:name><xqdoc:type>element()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq</xqdoc:name><xqdoc:type occurrence="*">xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:tree-list($tree as element(*),$seq as xs:integer*){
  typeswitch ($tree )
  case element(directory) 
      return &lt;li&gt;
                 &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                 &lt;span class="content"&gt;{$tree/@name/string()}/&lt;/span&gt;
                 &lt;ol class="toc"&gt;{$tree/*!xqhtml:tree-list(.,($seq,position()))}&lt;/ol&gt;
             &lt;/li&gt;
   case element(file) 
      return &lt;li&gt;{if($tree/@target) then
                   &lt;a href="#{$tree/@target}"&gt;
                     &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                     
                      &lt;span class="content" title="{$tree/@target}"&gt;{  $tree/@name/string() }&lt;/span&gt;
                      &lt;div class="tag tag-success" 
                            title="RESTXQ: {$tree/@target}"&gt;GET
                      &lt;/div&gt;
                      &lt;div class="tag tag-danger"  style="float:right"
                            title="RESTXQ: {$tree/@target}"&gt;X
                      &lt;/div&gt;
                   &lt;/a&gt;
               else 
                &lt;span class="content"&gt;{$tree/@name/string()}&lt;/span&gt;
             }&lt;/li&gt;   
  default 
     return &lt;li&gt;unknown&lt;/li&gt;
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>position</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>html for page.</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:restxq</xqdoc:name><xqdoc:signature>declare function xqhtml:restxq($state as item()*, $annots as item()*, $opts as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>state</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>annots</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:restxq($state,$annots,$opts)
{
let $tree:=$annots?uri
let $tree:=tree:build($tree)
let $body:= &lt;div&gt;
          &lt;nav id="toc"&gt;
            &lt;h2&gt;
                 &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / RestXQ
            &lt;/h2&gt;
           &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                 &lt;li  href="#main"&gt;
                    &lt;a &gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Paths.&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
      
                 &lt;ol  class="toc"&gt; { $tree/*/*!xqhtml:tree-list(.,2) } &lt;/ol&gt;
                &lt;/li&gt;
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index: &lt;/a&gt;
          
           &lt;ul&gt;{$annots!xqhtml:path-to-html(.)}&lt;/ul&gt;
           &lt;/div&gt;
return  xqhtml:page($body,$opts)
}</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:data.tree</xqdoc:uri><xqdoc:name>build</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>path-to-html</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annots</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>state</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annots</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>body</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>transform xqdoc to html 
map { "root": "../../", 
       "cache": false(), 
       "resources": "resources/", 
       "ext-id": "51", 
       "filename": "src\main\lib\parsepaths.xq", 
       "show-private": true(), 
       "src-folder": "C:/Users/andy/git/xqdoca", 
        "project": "xqdoca", 
        "source": () }</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:xqdoc-html</xqdoc:name><xqdoc:signature>declare function xqhtml:xqdoc-html($xqd as element(xqdoc:xqdoc), $params as map(*)) as document-node()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>xqd</xqdoc:name><xqdoc:type>element(xqdoc:xqdoc)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>params</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document-node()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:xqdoc-html($xqd as element(xqdoc:xqdoc),
                            $params as map(*)
                            )
as document-node()                            
{  
try{
     let $p:=map:remove($params,filter(map:keys($params),function($key){$params?($key) instance of map(*)}))
     return xslt:transform($xqd,$xqhtml:mod-xslt,$p) 
 } catch *{
  document {&lt;div&gt;
             &lt;div&gt;Error: { $err:code } - { $err:description }&lt;/div&gt;
              &lt;pre&gt;error { serialize($params,map{"method":"basex"}) } - { $xqhtml:mod-xslt }&lt;/pre&gt;
            &lt;/div&gt;}
}
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>remove</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>filter</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://basex.org/modules/xslt</xqdoc:uri><xqdoc:name>transform</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>serialize</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>key</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>xqd</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>mod-xslt</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>p</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xqt-errors</xqdoc:uri><xqdoc:name>code</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xqt-errors</xqdoc:uri><xqdoc:name>description</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>mod-xslt</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>transform xqdoc to html no xslt
map { "root": "../../", 
       "cache": false(), 
       "resources": "resources/", 
       "ext-id": "51", 
       "filename": "src\main\lib\parsepaths.xq", 
       "show-private": true(), 
       "src-folder": "C:/Users/andy/git/xqdoca", 
        "project": "xqdoca", 
        "source": () }</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:xqdoc-html2</xqdoc:name><xqdoc:signature>declare function xqhtml:xqdoc-html2($xqd as element(xqdoc:xqdoc), $opts as map(*)) as document-node()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>xqd</xqdoc:name><xqdoc:type>element(xqdoc:xqdoc)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document-node()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:xqdoc-html2(
  $xqd as element(xqdoc:xqdoc),
        $opts as map(*)
        )
as document-node()                            
{
  let $d:= xqh:xqdoc-html2($xqd,$opts)
return document{ xqhtml:page(&lt;div&gt;{$d}&lt;/div&gt;, $opts ) }
 
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:xqdoca.mod-html</xqdoc:uri><xqdoc:name>xqdoc-html2</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>xqd</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>import page</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:imports</xqdoc:name><xqdoc:signature>declare function xqhtml:imports($state as item()*, $imports as item()*, $opts as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>state</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>imports</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:imports($state,$imports,$opts)
{
  let $body:=&lt;div&gt;
   &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / Imports
            &lt;/h2&gt;
           
            &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index&lt;/a&gt;
           &lt;p&gt;Lists all modules imported.&lt;/p&gt;
           {for $import in $imports
           order by $import?uri
           return &lt;div  id="{ $import?uri }"&gt;
           &lt;h4&gt;{ $import?uri }
           &lt;div  style="float:right"&gt;&lt;a href="#{ $import?uri }"&gt;#&lt;/a&gt;&lt;/div&gt;
           &lt;/h4&gt;
           &lt;ul&gt;
           {for $f in  $import?where
           return &lt;li&gt;&lt;a href="{$f?href}index.html"&gt;{ $f?namespace }&lt;/a&gt;&lt;/li&gt;
         }
           &lt;/ul&gt;
           &lt;/div&gt;
           }
  &lt;/div&gt;
  return  xqhtml:page($body,$opts)
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>state</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>imports</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>body</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>annotations page</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:annotations</xqdoc:name><xqdoc:signature>declare function xqhtml:annotations($state as item()*, $annots as item()*, $opts as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>state</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>annots</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:annotations($state,$annots,$opts)
{
  let $body:=&lt;div&gt;
   &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a href="index.html" class="tag tag-success"&gt;
                    { $state?project }
                &lt;/a&gt;
                / Imports
            &lt;/h2&gt;
           
            &lt;h3&gt;
               Contents
            &lt;/h3&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index&lt;/a&gt;
           &lt;p&gt;Lists all Annotations defined.&lt;/p&gt;
       
  &lt;/div&gt;
  return  xqhtml:page($body,$opts)
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>state</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>body</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>html for a path</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:path-to-html</xqdoc:name><xqdoc:signature>declare function xqhtml:path-to-html($rep as map(*)) as element(li)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>rep</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(li)</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:path-to-html($rep as map(*))
as element(li){
   &lt;li id="{ $rep?uri }"&gt;
       &lt;h4&gt;{ $rep?uri }&lt;/h4&gt;
       &lt;ul&gt;{
       let $methods as map(*) :=$rep?methods
       for $method in map:keys($methods)
       let $d:=$methods?($method)
       let $id:=head($d?function)
       return &lt;li&gt;
                    &lt;a href="{$d?uri}index.html#{$id }"&gt;{ $method }&lt;/a&gt;
                    &lt;div&gt;{$d?description}&lt;/div&gt;
              &lt;/li&gt;
       }&lt;/ul&gt;
   &lt;/li&gt;
}</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>head</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>id</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>generate standard page wrapper
uses $opts?resources</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:page</xqdoc:name><xqdoc:signature>declare function xqhtml:page($body as item()*, $opts as map(*)) as element(html)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>body</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(html)</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:page($body,$opts as map(*)) 
as element(html)
{
    &lt;html&gt;
      &lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
        &lt;meta http-equiv="Generator" content="xqdoca - https://github.com/quodatum/xqdoca" /&gt;

        &lt;title&gt;
          { $opts?project } - xqDocA
        &lt;/title&gt;
        &lt;link rel="shortcut icon" type="image/x-icon" href="{ $opts?resources }xqdoc.png" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }prism.css"/&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }page.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }query.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }base.css" /&gt;
       &lt;style&gt;
				.tag {{font-size: 100%;}}
				&lt;/style&gt;
      &lt;/head&gt;

      &lt;body class="home" id="top"&gt;
        &lt;div id="main"&gt;
        {$body}
        &lt;/div&gt;
        &lt;div class="footer"&gt;
            &lt;p style="text-align:right"&gt;Generated by 
            &lt;a href="https://github.com/Quodatum/xqdoca" target="_blank"&gt;xqDocA&lt;/a&gt; 
            at {current-dateTime()}&lt;/p&gt;
          &lt;/div&gt;
         &lt;script  src="{ $opts?resources }prism.js" type="text/javascript"&gt; &lt;/script&gt;
       
      &lt;/body&gt;
    &lt;/html&gt;
}</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>body</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>link to module</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:link-module</xqdoc:name><xqdoc:signature>declare function xqhtml:link-module($file as map(*)) as element(span)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>file</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:link-module($file as map(*))                       
as element(span)
{  
   &lt;span&gt;
    &lt;a href="{ $file?href }index.html" title="{ $file?path }"&gt;{ $file?namespace }&lt;/a&gt; 
    &lt;a href="{ $file?href }index2.html" title="{ $file?path }"&gt;*&lt;/a&gt;
   &lt;/span&gt;
}</xqdoc:body><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>views list</xqdoc:description></xqdoc:comment><xqdoc:name>xqhtml:view-list</xqdoc:name><xqdoc:signature>declare function xqhtml:view-list($opts as map(*), $exclude as xs:string*) as element(dl)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>exclude</xqdoc:name><xqdoc:type occurrence="*">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(dl)</xqdoc:type></xqdoc:return><xqdoc:body>function xqhtml:view-list($opts as map(*),$exclude as xs:string*)                       
as element(dl)
{  
&lt;dl&gt;           
 {for $name in $opts?outputs?views
  where not($name eq $exclude)
  let $def:= map:get($opts?renderers?modules,$name)
  return (&lt;dt&gt;&lt;a href="{ $def?uri }"&gt;{ $name }&lt;/a&gt;&lt;/dt&gt;
         ,&lt;dd&gt;{ $def?title }&lt;/dd&gt;)
  }    
&lt;/dl&gt;
}</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>name</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exclude</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>name</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>name</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>