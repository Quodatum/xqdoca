<XQuery><Module><VersionDecl><TOKEN>xquery</TOKEN> <TOKEN>version</TOKEN> <StringLiteral>"3.1"</StringLiteral><TOKEN>;</TOKEN></VersionDecl>
(:~  
 : Generate documentation for for XQuery sources
 : @author Andy Bunce (Quodatum)
 :)

<MainModule><Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>cmd</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum:command:tools'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"lib/command.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>args</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration>  <TOKEN>external</TOKEN></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>
(:~ expath metadata :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>expkg</QName><TOKEN>:=</TOKEN><RelativePathExpr><FunctionCall><QName>doc</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"expath-pkg.xml"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard><PredicateList/></AxisStep></RelativePathExpr></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>local:resolve</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>path</QName></Param><TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <QName>xs:string</QName><EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>file:resolve-path</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>path</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>file:current-dir</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog>

   
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>args</QName><TOKEN>:=</TOKEN><FunctionCall><QName>cmd:parse-args</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>args</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>args</QName><TOKEN>:=</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>args</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> 
           <TOKEN>then</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>args</QName></VarRef> 
           <TOKEN>else</TOKEN> <RelativePathExpr><FunctionCall><QName>local:resolve</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>".xqdoca"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>!</TOKEN><FunctionCall><QName>util:if</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>doc-available</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><TOKEN>.</TOKEN><TOKEN>,</TOKEN><StringLiteral>"-h"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></IfExpr></LetBinding></LetClause>
<ForClause><TOKEN>for</TOKEN>  <ForBinding><TOKEN>$</TOKEN><QName>action</QName> <TOKEN>in</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>args</QName></VarRef></ForBinding></ForClause>

<ReturnClause><TOKEN>return</TOKEN>  
    <SwitchExpr><TOKEN>switch</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef><TOKEN>)</TOKEN>
    <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>"-h"</StringLiteral> <TOKEN>return</TOKEN> <FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>unparsed-text</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"xqdoca.txt"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></SwitchCaseClause>
    <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>"-v"</StringLiteral> <TOKEN>return</TOKEN> <FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>expkg</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>version</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></SwitchCaseClause>
    <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>"-install"</StringLiteral> <TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><FunctionCall><QName>cmd:install</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>expkg</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"install"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></SwitchCaseClause>
    <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>"-init"</StringLiteral> <TOKEN>return</TOKEN>
                <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>file</QName><TOKEN>:=</TOKEN><FunctionCall><QName>local:resolve</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>".xqdoca"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause> 
                <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>file:exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN>
                       <TOKEN>then</TOKEN>
                        <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>xml</QName><TOKEN>:=</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>xqdoca</QName><DirAttributeList><S> </S><QName>xmlns</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>u</QuotAttrContentChar><QuotAttrContentChar>r</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>:</QuotAttrContentChar><QuotAttrContentChar>q</QuotAttrContentChar><QuotAttrContentChar>u</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>d</QuotAttrContentChar><QuotAttrContentChar>a</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>u</QuotAttrContentChar><QuotAttrContentChar>m</QuotAttrContentChar><QuotAttrContentChar>:</QuotAttrContentChar><QuotAttrContentChar>x</QuotAttrContentChar><QuotAttrContentChar>q</QuotAttrContentChar><QuotAttrContentChar>d</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>a</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>version</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>0</QuotAttrContentChar><QuotAttrContentChar>.</QuotAttrContentChar><QuotAttrContentChar>5</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>source</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>.</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>source</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>target</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>x</ElementContentChar><ElementContentChar>q</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>/</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>target</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>xqdoca</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></LetBinding></LetClause>
                        <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><FunctionCall><QName>file:write</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>xml</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"file created"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr>     
                       <TOKEN>else</TOKEN> <FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"file already exists"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></IfExpr></ReturnClause></FLWORExpr></SwitchCaseClause>

    <TOKEN>default</TOKEN> <TOKEN>return</TOKEN> <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>src</QName><TOKEN>:=</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><FunctionCall><QName>cmd:check-dependancies</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>expkg</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
                              <ArrowExpr><FunctionCall><QName>local:resolve</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>=&gt;</TOKEN><QName>trace</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"Processing: "</StringLiteral><TOKEN>)</TOKEN></ArgumentList></ArrowExpr></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
                   <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>xquery:eval-update</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>xs:anyURI</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"xqdoca.xq"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
                                      <MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN><MapConstructorEntry><StringLiteral>"src"</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>src</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> 
                                          <MapConstructorEntry><StringLiteral>"pass"</StringLiteral><TOKEN>:</TOKEN><FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor>
                                    <TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr></SwitchExpr></ReturnClause></FLWORExpr></MainModule></Module>


<EOF/></XQuery>