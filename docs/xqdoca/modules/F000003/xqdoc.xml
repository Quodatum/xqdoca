<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:35:19.705+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:xqdoca.generator.rename</xqdoc:uri><xqdoc:name>_</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
rewrite code&#xD;
&#xD;
</xqdoc:description><xqdoc:author>Andy Bunce</xqdoc:author><xqdoc:version>0.2</xqdoc:version></xqdoc:comment><xqdoc:body>xquery version "3.1";&#xD;
(:~&#xD;
 : rewrite code  &#xD;
 :&#xD;
 : @author Andy Bunce&#xD;
 : @version 0.2&#xD;
 :)&#xD;
 &#xD;
module namespace _ = 'quodatum:xqdoca.generator.rename';&#xD;
declare namespace xqdoca="https://github.com/Quodatum/xqdoca";&#xD;
(:~ &#xD;
 : code rewritting&#xD;
 :)&#xD;
declare &#xD;
%xqdoca:module("refactor","simple code change examples.")&#xD;
%xqdoca:output("rename.xqm","text") &#xD;
function _:rename($file as map(*), &#xD;
                  $model as map(*),&#xD;
                  $opts as map(*)&#xD;
                  )                    &#xD;
{&#xD;
&#xD;
&#xD;
  let $parse:=$file?xqparse &#xD;
  &#xD;
  (: change function names that are called :)&#xD;
  let $parse := $parse transform with {&#xD;
    .//FunctionCall/QName&#xD;
    !.[contains(.,":")]&#xD;
    !( replace value of node . with . || "-XQDOCA")&#xD;
  }&#xD;
  (: add an import :)&#xD;
    let $i:=``[;&#xD;
import module namespace xqd = 'quodatum:xqdoca.model' at '../../lib/model.xqm']``&#xD;
   let $parse := $parse transform with {&#xD;
    .//ModuleImport[not(following-sibling::ModuleImport)]!(insert node &lt;ModuleImport&gt;{$i}&lt;/ModuleImport&gt; after .)&#xD;
  }&#xD;
  (: change name of function :)&#xD;
   let $parse := $parse transform with {&#xD;
    (.//FunctionDecl)[1]!(replace value of node QName[1] with concat(QName[1],"-XQDOCA"))&#xD;
  }&#xD;
  let $result:=``[(:  xqDocA added a comment :)&#xD;
]`` || $parse&#xD;
  return $result&#xD;
  };&#xD;
</xqdoc:body></xqdoc:module><xqdoc:namespaces><xqdoc:namespace prefix="_" uri="quodatum:xqdoca.generator.rename"/><xqdoc:namespace prefix="xqdoca" uri="https://github.com/Quodatum/xqdoca"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
code rewritting&#xD;
</xqdoc:description></xqdoc:comment><xqdoc:name>_:rename</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="xqdoca:module"><xqdoc:literal type="xs:string">refactor</xqdoc:literal><xqdoc:literal type="xs:string">simple code change examples.</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="xqdoca:output"><xqdoc:literal type="xs:string">rename.xqm</xqdoc:literal><xqdoc:literal type="xs:string">text</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function _:rename ( $file as map(*), $model as map(*), $opts as map(*) ) { let $parse:=$file?xqparse (: change function names that are called :) let $parse := $parse transform with { .//FunctionCall/QName !.[contains(.,":")] !( replace value of node . with . || "-XQDOCA") } (: add an import :) let $i:=``[; import module namespace xqd = 'quodatum:xqdoca.model' at '../../lib/model.xqm']`` let $parse := $parse transform with { .//ModuleImport[not(following-sibling::ModuleImport)]!(insert node &lt;ModuleImport&gt;{$i}&lt;/ModuleImport&gt; after .) } (: change name of function :) let $parse := $parse transform with { (.//FunctionDecl)[1]!(replace value of node QName[1] with concat(QName[1],"-XQDOCA")) } let $result:=``[(: xqDocA added a comment :) ]`` || $parse return $result }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>file</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>model</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:body>function _:rename($file as map(*), &#xD;
                  $model as map(*),&#xD;
                  $opts as map(*)&#xD;
                  )                    &#xD;
{&#xD;
&#xD;
&#xD;
  let $parse:=$file?xqparse &#xD;
  &#xD;
  (: change function names that are called :)&#xD;
  let $parse := $parse transform with {&#xD;
    .//FunctionCall/QName&#xD;
    !.[contains(.,":")]&#xD;
    !( replace value of node . with . || "-XQDOCA")&#xD;
  }&#xD;
  (: add an import :)&#xD;
    let $i:=``[;&#xD;
import module namespace xqd = 'quodatum:xqdoca.model' at '../../lib/model.xqm']``&#xD;
   let $parse := $parse transform with {&#xD;
    .//ModuleImport[not(following-sibling::ModuleImport)]!(insert node &lt;ModuleImport&gt;{$i}&lt;/ModuleImport&gt; after .)&#xD;
  }&#xD;
  (: change name of function :)&#xD;
   let $parse := $parse transform with {&#xD;
    (.//FunctionDecl)[1]!(replace value of node QName[1] with concat(QName[1],"-XQDOCA"))&#xD;
  }&#xD;
  let $result:=``[(:  xqDocA added a comment :)&#xD;
]`` || $parse&#xD;
  return $result&#xD;
  }</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>