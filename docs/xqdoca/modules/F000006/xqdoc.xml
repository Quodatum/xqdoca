<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:35:19.705+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:xqdoca.generator.annotations</xqdoc:uri><xqdoc:name>_</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
annotation report&#xD;
</xqdoc:description><xqdoc:author>Andy Bunce, Quodatum, License: Apache-2.0</xqdoc:author><xqdoc:custom tag="copyright">(c) 2019-2026 Quodatum Ltd</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";&#xD;
(:~ annotation report&#xD;
  @copyright (c) 2019-2026 Quodatum Ltd&#xD;
  @author Andy Bunce, Quodatum, License: Apache-2.0&#xD;
:)&#xD;
module namespace _ = 'quodatum:xqdoca.generator.annotations';&#xD;
&#xD;
import module namespace page = 'quodatum:xqdoca.page'  at "../lib/xqdoc-page.xqm";&#xD;
import module namespace xqa = 'quodatum:xqdoca.model.annotations' at "../lib/annotations.xqm";&#xD;
&#xD;
declare namespace xqdoc="http://www.xqdoc.org/1.0";&#xD;
declare namespace xqdoca="https://github.com/Quodatum/xqdoca";&#xD;
&#xD;
&#xD;
(:~ HTML for annotations report :)&#xD;
declare &#xD;
%xqdoca:global("annotations","Summary of XQuery annotation use")&#xD;
%xqdoca:output("annotations.html","xhtml") &#xD;
function _:annotations($model as map(*),$opts as map(*))&#xD;
as element(html){&#xD;
  let $ns-map:=xqa:annotations($model?files)&#xD;
  let $sections:=(&#xD;
             _:summary($model, $opts, $ns-map),&#xD;
             &lt;section id="annotations"&gt;&#xD;
                 &lt;h2&gt;Annotations&lt;/h2&gt;&#xD;
&#xD;
                 {&#xD;
                 for $ns in map:keys($ns-map)&#xD;
                 order by $ns&#xD;
                 count $c&#xD;
                 return &lt;section id="{ $ns }"&gt;&#xD;
                            &lt;h3&gt;{page:section((2,$c))} { $ns }&lt;/h3&gt;&#xD;
                            {sort(distinct-values($ns-map?($ns)?annotation?name)) &#xD;
                            !&lt;span style="margin-left:1em" &gt;&#xD;
                                &lt;a href="#{{{ $ns}}}{.}"&gt;{.}&lt;/a&gt;&#xD;
                             &lt;/span&gt;}&#xD;
                            {for $a in $ns-map?($ns)&#xD;
                            group by $name:=$a?annotation?name&#xD;
                            order by lower-case($name)&#xD;
                            (:~ let $_:=trace($a?annotation,"ANNO: ") ~:)&#xD;
                            return _:anno-calls($ns,$name,$a) &#xD;
                      } &lt;/section&gt;       &#xD;
           }&lt;/section&gt;&#xD;
  )&#xD;
    let $links:= page:related-buttons("global","annotations", $opts)&#xD;
  let $body:=&lt;div&gt;&#xD;
              &lt;h1&gt;&#xD;
                     Project &#xD;
                     &lt;span class="badge badge-info"&gt;{ $opts?project }&lt;/span&gt;&#xD;
                  &amp;#160;Annotations &#xD;
              &lt;/h1&gt;&#xD;
              &#xD;
              &lt;nav id="toc"&gt;&#xD;
                        &lt;h2&gt;&#xD;
                            &lt;a href="index.html" &gt;&#xD;
                                { $opts? project }&#xD;
                            &lt;/a&gt;&#xD;
                            / Annotations&#xD;
                        &lt;/h2&gt;&#xD;
              { $links}&#xD;
                &lt;h3&gt;&#xD;
                  Contents&#xD;
                &lt;/h3&gt;&#xD;
              { _:toc(map:keys($ns-map) =&gt; sort())}&#xD;
              &lt;/nav&gt;&#xD;
             {$sections}&#xD;
             &#xD;
      &lt;/div&gt;&#xD;
  return  page:wrap($body,$opts)&#xD;
};&#xD;
&#xD;
declare function _:anno-calls($ns as xs:string, $name as xs:string,$a)&#xD;
as element(div){&#xD;
 &lt;div class="div4"&gt;&#xD;
     &lt;h4&gt;&lt;a id="{{{ $ns }}}{ $name }"/&gt;{{{ $ns }}}{$name}&#xD;
      &lt;div style="float:right"&gt;&lt;span class="badge badge-info"&gt;{count($a)}&lt;/span&gt;&lt;/div&gt;&#xD;
     &lt;/h4&gt;&#xD;
    &#xD;
     &lt;table class="data"&gt;&#xD;
       &lt;thead&gt;&lt;tr&gt;&#xD;
         &lt;th&gt;Attached to&lt;/th&gt;&#xD;
         &lt;th&gt;Values&lt;/th&gt;&#xD;
       &lt;/tr&gt;&lt;/thead&gt;&#xD;
       &lt;tbody&gt;{&#xD;
          for $a2 in $a&#xD;
          return &lt;tr&gt;&#xD;
                    &lt;td&gt;{&#xD;
                       let $x:= xqa:name-detail($a2?xqdoc/../..,$a2?file)&#xD;
                       return if($x instance of map(*)) then &#xD;
                                page:link-function2($x?uri,$x?name,$a2?file,false()) &#xD;
                              else &#xD;
                                ()&#xD;
                     }&lt;/td&gt;&#xD;
                    &lt;td&gt;{ xqa:literals($a2?xqdoc/xqdoc:literal) }&lt;/td&gt;&#xD;
                &lt;/tr&gt;&#xD;
       }&lt;/tbody&gt;&#xD;
     &lt;/table&gt;&#xD;
&lt;/div&gt;        &#xD;
};&#xD;
&#xD;
declare function _:summary($model,&#xD;
                           $opts, &#xD;
                           $ns-map as map(*))&#xD;
as element(section)&#xD;
{&#xD;
  &lt;section id="summary"&gt;&#xD;
    &lt;h2&gt;Summary&lt;/h2&gt;&#xD;
    &lt;p&gt;This project uses { map:size($ns-map) } annotation namespaces.&lt;/p&gt;&#xD;
     { page:related-links("global","annotations", $opts) }&#xD;
 &lt;/section&gt;&#xD;
};&#xD;
&#xD;
(:~ table of contents as list from namespace list :)&#xD;
declare function _:toc($ns as xs:string*)&#xD;
as element(ol)&#xD;
{&#xD;
 let $t:=&lt;directory&gt;&#xD;
      &lt;f target="#summary" name="Summary"/&gt;&#xD;
      &lt;directory target="#annotations" name="Annotations"&gt;{&#xD;
     $ns!&lt;f target="#{.}" name="{.}" /&gt;&#xD;
      }&lt;/directory&gt;&#xD;
     &lt;/directory&gt;&#xD;
     &#xD;
 return &lt;ol class="toc"&gt;&#xD;
        {$t/*!page:tree-list(.,position(),page:toc-render#2,99)}&#xD;
        &lt;/ol&gt;    &#xD;
};&#xD;
&#xD;
&#xD;
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:at>../lib/xqdoc-page.xqm</xqdoc:at></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum:xqdoca.model.annotations</xqdoc:uri><xqdoc:at>../lib/annotations.xqm</xqdoc:at></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="_" uri="quodatum:xqdoca.generator.annotations"/><xqdoc:namespace prefix="page" uri="quodatum:xqdoca.page"/><xqdoc:namespace prefix="xqa" uri="quodatum:xqdoca.model.annotations"/><xqdoc:namespace prefix="xqdoc" uri="http://www.xqdoc.org/1.0"/><xqdoc:namespace prefix="xqdoca" uri="https://github.com/Quodatum/xqdoca"/><xqdoc:namespace prefix="map" uri="http://www.w3.org/2005/xpath-functions/map"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>&#xD;
HTML for annotations report</xqdoc:description></xqdoc:comment><xqdoc:name>_:annotations</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="xqdoca:global"><xqdoc:literal type="xs:string">annotations</xqdoc:literal><xqdoc:literal type="xs:string">Summary of XQuery annotation use</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="xqdoca:output"><xqdoc:literal type="xs:string">annotations.html</xqdoc:literal><xqdoc:literal type="xs:string">xhtml</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function _:annotations ( $model as map(*),$opts as map(*) ) as element(html) { let $ns-map:=xqa:annotations($model?files) let $sections:=( _:summary($model, $opts, $ns-map), &lt;section id="annotations"&gt; &lt;h2&gt;Annotations&lt;/h2&gt; { for $ns in map:keys($ns-map) order by $ns count $c return &lt;section id="{ $ns }"&gt; &lt;h3&gt;{page:section((2,$c))} { $ns }&lt;/h3&gt; {sort(distinct-values($ns-map?($ns)?annotation?name)) !&lt;span style="margin-left:1em" &gt; &lt;a href="#{{{ $ns}}}{.}"&gt;{.}&lt;/a&gt; &lt;/span&gt;} {for $a in $ns-map?($ns) group by $name:=$a?annotation?name order by lower-case($name) (:~ let $_:=trace($a?annotation,"ANNO: ") ~:) return _:anno-calls($ns,$name,$a) } &lt;/section&gt; }&lt;/section&gt; ) let $links:= page:related-buttons("global","annotations", $opts) let $body:=&lt;div&gt; &lt;h1&gt; Project &lt;span class="badge badge-info"&gt;{ $opts?project }&lt;/span&gt; &amp;#160;Annotations &lt;/h1&gt; &lt;nav id="toc"&gt; &lt;h2&gt; &lt;a href="index.html" &gt; { $opts? project } &lt;/a&gt; / Annotations &lt;/h2&gt; { $links} &lt;h3&gt; Contents &lt;/h3&gt; { _:toc(map:keys($ns-map) =&gt; sort())} &lt;/nav&gt; {$sections} &lt;/div&gt; return page:wrap($body,$opts) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>model</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(html)</xqdoc:type></xqdoc:return><xqdoc:body>function _:annotations($model as map(*),$opts as map(*))&#xD;
as element(html){&#xD;
  let $ns-map:=xqa:annotations($model?files)&#xD;
  let $sections:=(&#xD;
             _:summary($model, $opts, $ns-map),&#xD;
             &lt;section id="annotations"&gt;&#xD;
                 &lt;h2&gt;Annotations&lt;/h2&gt;&#xD;
&#xD;
                 {&#xD;
                 for $ns in map:keys($ns-map)&#xD;
                 order by $ns&#xD;
                 count $c&#xD;
                 return &lt;section id="{ $ns }"&gt;&#xD;
                            &lt;h3&gt;{page:section((2,$c))} { $ns }&lt;/h3&gt;&#xD;
                            {sort(distinct-values($ns-map?($ns)?annotation?name)) &#xD;
                            !&lt;span style="margin-left:1em" &gt;&#xD;
                                &lt;a href="#{{{ $ns}}}{.}"&gt;{.}&lt;/a&gt;&#xD;
                             &lt;/span&gt;}&#xD;
                            {for $a in $ns-map?($ns)&#xD;
                            group by $name:=$a?annotation?name&#xD;
                            order by lower-case($name)&#xD;
                            (:~ let $_:=trace($a?annotation,"ANNO: ") ~:)&#xD;
                            return _:anno-calls($ns,$name,$a) &#xD;
                      } &lt;/section&gt;       &#xD;
           }&lt;/section&gt;&#xD;
  )&#xD;
    let $links:= page:related-buttons("global","annotations", $opts)&#xD;
  let $body:=&lt;div&gt;&#xD;
              &lt;h1&gt;&#xD;
                     Project &#xD;
                     &lt;span class="badge badge-info"&gt;{ $opts?project }&lt;/span&gt;&#xD;
                  &amp;#160;Annotations &#xD;
              &lt;/h1&gt;&#xD;
              &#xD;
              &lt;nav id="toc"&gt;&#xD;
                        &lt;h2&gt;&#xD;
                            &lt;a href="index.html" &gt;&#xD;
                                { $opts? project }&#xD;
                            &lt;/a&gt;&#xD;
                            / Annotations&#xD;
                        &lt;/h2&gt;&#xD;
              { $links}&#xD;
                &lt;h3&gt;&#xD;
                  Contents&#xD;
                &lt;/h3&gt;&#xD;
              { _:toc(map:keys($ns-map) =&gt; sort())}&#xD;
              &lt;/nav&gt;&#xD;
             {$sections}&#xD;
             &#xD;
      &lt;/div&gt;&#xD;
  return  page:wrap($body,$opts)&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>_:anno-calls</xqdoc:name><xqdoc:signature>function _:anno-calls ( $ns as xs:string, $name as xs:string,$a ) as element(div) { &lt;div class="div4"&gt; &lt;h4&gt;&lt;a id="{{{ $ns }}}{ $name }"/&gt;{{{ $ns }}}{$name} &lt;div style="float:right"&gt;&lt;span class="badge badge-info"&gt;{count($a)}&lt;/span&gt;&lt;/div&gt; &lt;/h4&gt; &lt;table class="data"&gt; &lt;thead&gt;&lt;tr&gt; &lt;th&gt;Attached to&lt;/th&gt; &lt;th&gt;Values&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt;{ for $a2 in $a return &lt;tr&gt; &lt;td&gt;{ let $x:= xqa:name-detail($a2?xqdoc/../..,$a2?file) return if($x instance of map(*)) then page:link-function2($x?uri,$x?name,$a2?file,false()) else () }&lt;/td&gt; &lt;td&gt;{ xqa:literals($a2?xqdoc/xqdoc:literal) }&lt;/td&gt; &lt;/tr&gt; }&lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>ns</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>a</xqdoc:name></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(div)</xqdoc:type></xqdoc:return><xqdoc:body>function _:anno-calls($ns as xs:string, $name as xs:string,$a)&#xD;
as element(div){&#xD;
 &lt;div class="div4"&gt;&#xD;
     &lt;h4&gt;&lt;a id="{{{ $ns }}}{ $name }"/&gt;{{{ $ns }}}{$name}&#xD;
      &lt;div style="float:right"&gt;&lt;span class="badge badge-info"&gt;{count($a)}&lt;/span&gt;&lt;/div&gt;&#xD;
     &lt;/h4&gt;&#xD;
    &#xD;
     &lt;table class="data"&gt;&#xD;
       &lt;thead&gt;&lt;tr&gt;&#xD;
         &lt;th&gt;Attached to&lt;/th&gt;&#xD;
         &lt;th&gt;Values&lt;/th&gt;&#xD;
       &lt;/tr&gt;&lt;/thead&gt;&#xD;
       &lt;tbody&gt;{&#xD;
          for $a2 in $a&#xD;
          return &lt;tr&gt;&#xD;
                    &lt;td&gt;{&#xD;
                       let $x:= xqa:name-detail($a2?xqdoc/../..,$a2?file)&#xD;
                       return if($x instance of map(*)) then &#xD;
                                page:link-function2($x?uri,$x?name,$a2?file,false()) &#xD;
                              else &#xD;
                                ()&#xD;
                     }&lt;/td&gt;&#xD;
                    &lt;td&gt;{ xqa:literals($a2?xqdoc/xqdoc:literal) }&lt;/td&gt;&#xD;
                &lt;/tr&gt;&#xD;
       }&lt;/tbody&gt;&#xD;
     &lt;/table&gt;&#xD;
&lt;/div&gt;        &#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>_:summary</xqdoc:name><xqdoc:signature>function _:summary ( $model, $opts, $ns-map as map(*) ) as element(section) { &lt;section id="summary"&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;This project uses { map:size($ns-map) } annotation namespaces.&lt;/p&gt; { page:related-links("global","annotations", $opts) } &lt;/section&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>model</xqdoc:name></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name></xqdoc:parameter><xqdoc:parameter><xqdoc:name>ns-map</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(section)</xqdoc:type></xqdoc:return><xqdoc:body>function _:summary($model,&#xD;
                           $opts, &#xD;
                           $ns-map as map(*))&#xD;
as element(section)&#xD;
{&#xD;
  &lt;section id="summary"&gt;&#xD;
    &lt;h2&gt;Summary&lt;/h2&gt;&#xD;
    &lt;p&gt;This project uses { map:size($ns-map) } annotation namespaces.&lt;/p&gt;&#xD;
     { page:related-links("global","annotations", $opts) }&#xD;
 &lt;/section&gt;&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
table of contents as list from namespace list</xqdoc:description></xqdoc:comment><xqdoc:name>_:toc</xqdoc:name><xqdoc:signature>function _:toc ( $ns as xs:string* ) as element(ol) { let $t:=&lt;directory&gt; &lt;f target="#summary" name="Summary"/&gt; &lt;directory target="#annotations" name="Annotations"&gt;{ $ns!&lt;f target="#{.}" name="{.}" /&gt; }&lt;/directory&gt; &lt;/directory&gt; return &lt;ol class="toc"&gt; {$t/*!page:tree-list(.,position(),page:toc-render#2,99)} &lt;/ol&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>ns</xqdoc:name><xqdoc:type occurrence="*">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(ol)</xqdoc:type></xqdoc:return><xqdoc:body>function _:toc($ns as xs:string*)&#xD;
as element(ol)&#xD;
{&#xD;
 let $t:=&lt;directory&gt;&#xD;
      &lt;f target="#summary" name="Summary"/&gt;&#xD;
      &lt;directory target="#annotations" name="Annotations"&gt;{&#xD;
     $ns!&lt;f target="#{.}" name="{.}" /&gt;&#xD;
      }&lt;/directory&gt;&#xD;
     &lt;/directory&gt;&#xD;
     &#xD;
 return &lt;ol class="toc"&gt;&#xD;
        {$t/*!page:tree-list(.,position(),page:toc-render#2,99)}&#xD;
        &lt;/ol&gt;    &#xD;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>