<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:35:19.705+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:service.graphxq</xqdoc:uri><xqdoc:name>gxq</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
talk to graphxq server.&#xD;
</xqdoc:description><xqdoc:author>Andy Bunce, Quodatum, License: Apache-2.0</xqdoc:author><xqdoc:custom tag="copyright">Copyright (c) 2019-2026 Quodatum Ltd</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";&#xD;
(:~&#xD;
talk to graphxq server.&#xD;
@copyright Copyright (c) 2019-2026 Quodatum Ltd&#xD;
@author Andy Bunce, Quodatum, License: Apache-2.0&#xD;
:)&#xD;
module namespace gxq = 'quodatum:service.graphxq';&#xD;
import module namespace http="http://expath.org/ns/http-client";&#xD;
&#xD;
(:~ graphxq server url :)&#xD;
declare variable $gxq:server:= "http://localhost:8984/graphxq/";&#xD;
&#xD;
(:~ test server available :)&#xD;
declare variable $gxq:server-ok as xs:boolean:= 200=http:send-request(&lt;http:request method='get' status-only='true'/&gt;, $gxq:server)/@status;&#xD;
&#xD;
(:~&#xD;
 : convert dotml to svg &#xD;
 : @parm $data is dotml as XML&#xD;
 :)&#xD;
declare function gxq:dotml2($data as element(*)) &#xD;
as document-node()&#xD;
{&#xD;
let $form:= &lt;multipart  xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &#xD;
                   &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt;   &#xD;
                   &lt;body media-type="text/xml"/&gt;&#xD;
            &lt;/multipart&gt;&#xD;
return gxq:post('/api/dotml', $form, $data)&#xD;
};&#xD;
&#xD;
(:~&#xD;
 : convert dot to svg &#xD;
 : @parm $data is dot as text&#xD;
 :)&#xD;
declare function gxq:dot($data as xs:string) &#xD;
as document-node()&#xD;
{&#xD;
 let $form:= &lt;multipart  xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &#xD;
                     &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt;   &#xD;
                     &lt;body media-type="text/plain"/&gt;&#xD;
              &lt;/multipart&gt;&#xD;
return gxq:post('/api/dotml', $form, $data)&#xD;
};&#xD;
&#xD;
(:~ graphxq request :)&#xD;
declare function gxq:post($url as xs:string, $form as element(http:multipart),$data )&#xD;
{&#xD;
  let $req:= &lt;http:request method="POST"  xmlns="http://expath.org/ns/http-client"&gt;&#xD;
              { $form}&#xD;
            &lt;/http:request&gt;&#xD;
  let $res:= http:send-request($req,$gxq:server || $url ,($data))&#xD;
return if($res[1]/@status="200") then $res[2] else error()&#xD;
};&#xD;
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>http://expath.org/ns/http-client</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="gxq" uri="quodatum:service.graphxq"/><xqdoc:namespace prefix="http" uri="http://expath.org/ns/http-client"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/></xqdoc:namespaces><xqdoc:variables><xqdoc:variable><xqdoc:name>gxq:server</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
graphxq server url</xqdoc:description></xqdoc:comment><xqdoc:body>variable $gxq:server:= "http://localhost:8984/graphxq/"</xqdoc:body></xqdoc:variable><xqdoc:variable><xqdoc:name>gxq:server-ok</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
test server available</xqdoc:description></xqdoc:comment><xqdoc:type>xs:boolean</xqdoc:type><xqdoc:body>variable $gxq:server-ok as xs:boolean:= 200=http:send-request(&lt;http:request method='get' status-only='true'/&gt;, $gxq:server)/@status</xqdoc:body></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
convert dotml to svg&#xD;
</xqdoc:description><xqdoc:custom tag="parm">$data is dotml as XML</xqdoc:custom></xqdoc:comment><xqdoc:name>gxq:dotml2</xqdoc:name><xqdoc:signature>function gxq:dotml2 ( $data as element(*) ) as document-node() { let $form:= &lt;multipart xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt; &lt;body media-type="text/xml"/&gt; &lt;/multipart&gt; return gxq:post('/api/dotml', $form, $data) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>data</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document-node()</xqdoc:type></xqdoc:return><xqdoc:body>function gxq:dotml2($data as element(*)) &#xD;
as document-node()&#xD;
{&#xD;
let $form:= &lt;multipart  xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &#xD;
                   &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt;   &#xD;
                   &lt;body media-type="text/xml"/&gt;&#xD;
            &lt;/multipart&gt;&#xD;
return gxq:post('/api/dotml', $form, $data)&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
convert dot to svg&#xD;
</xqdoc:description><xqdoc:custom tag="parm">$data is dot as text</xqdoc:custom></xqdoc:comment><xqdoc:name>gxq:dot</xqdoc:name><xqdoc:signature>function gxq:dot ( $data as xs:string ) as document-node() { let $form:= &lt;multipart xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt; &lt;body media-type="text/plain"/&gt; &lt;/multipart&gt; return gxq:post('/api/dotml', $form, $data) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>data</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>document-node()</xqdoc:type></xqdoc:return><xqdoc:body>function gxq:dot($data as xs:string) &#xD;
as document-node()&#xD;
{&#xD;
 let $form:= &lt;multipart  xmlns="http://expath.org/ns/http-client" media-type="multipart/form-data"&gt; &#xD;
                     &lt;header name="Content-Disposition" value='form-data; name="data"'/&gt;   &#xD;
                     &lt;body media-type="text/plain"/&gt;&#xD;
              &lt;/multipart&gt;&#xD;
return gxq:post('/api/dotml', $form, $data)&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>&#xD;
graphxq request</xqdoc:description></xqdoc:comment><xqdoc:name>gxq:post</xqdoc:name><xqdoc:signature>function gxq:post ( $url as xs:string, $form as element(http:multipart),$data ) { let $req:= &lt;http:request method="POST" xmlns="http://expath.org/ns/http-client"&gt; { $form} &lt;/http:request&gt; let $res:= http:send-request($req,$gxq:server || $url ,($data)) return if($res[1]/@status="200") then $res[2] else error() }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>url</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>form</xqdoc:name><xqdoc:type>element(http:multipart)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>data</xqdoc:name></xqdoc:parameter></xqdoc:parameters><xqdoc:body>function gxq:post($url as xs:string, $form as element(http:multipart),$data )&#xD;
{&#xD;
  let $req:= &lt;http:request method="POST"  xmlns="http://expath.org/ns/http-client"&gt;&#xD;
              { $form}&#xD;
            &lt;/http:request&gt;&#xD;
  let $res:= http:send-request($req,$gxq:server || $url ,($data))&#xD;
return if($res[1]/@status="200") then $res[2] else error()&#xD;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>