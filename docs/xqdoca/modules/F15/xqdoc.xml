<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-05-24T10:38:32.959+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>xqdoc-page.xqm</xqdoc:name><xqdoc:comment><xqdoc:description><h1>xqdoc-links.xqm</h1>
<p>html utilities</p></xqdoc:description><xqdoc:author>Andy Bunce</xqdoc:author><xqdoc:version>0.1</xqdoc:version><xqdoc:custom tag="__source">lib/xqdoc-page.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";
(:
 : Copyright (c) 2019 Quodatum Ltd
 :
 : Licensed under the Apache License, Version 2.0 (the "License");
 : you may not use this file except in compliance with the License.
 : You may obtain a copy of the License at
 :
 :     http://www.apache.org/licenses/LICENSE-2.0
 :
 : Unless required by applicable law or agreed to in writing, software
 : distributed under the License is distributed on an "AS IS" BASIS,
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 : See the License for the specific language governing permissions and
 : limitations under the License.
 :)
 
 (:~
 : &lt;h1&gt;xqdoc-links.xqm&lt;/h1&gt;
 : &lt;p&gt;html utilities&lt;/p&gt;
 :
 : @author Andy Bunce
 : @version 0.1
 :)
 

module namespace page = 'quodatum:xqdoca.page';

(:~ link to module :)
declare 
function page:link-module($uri as xs:string,$model as map(*))                       
as element(span)
{
 let $files:=$model?files[?namespace=$uri]
 let $root:="../../"
 return if(empty($files)) then
           &lt;span class="badge badge-warning" title="Externally defined"&gt;{ $uri }&lt;/span&gt;
        else
           &lt;span&gt;{ $files[1]?namespace }
           &lt;a href="{ $root }{ $files[1]?href }index.html" title="{ $files[1]?path }"&gt;ðŸ”—&lt;/a&gt;
           {for $file at $pos in tail($files)
           return ("&amp;#160;",
                &lt;a  href="{ $root }{ $file?href }index.html" title="{ $file?path }"&gt;
                &lt;span class="badge badge-info"&gt;{1+$pos}&lt;/span&gt;
                &lt;/a&gt;
                )
         }&lt;/span&gt; 
};

(:~ link to module :)
declare 
function page:link-module($file as map(*))                       
as element(span)
{  
   &lt;span&gt;
    &lt;a href="{ $file?href }index.html" title="{ $file?path }"&gt;{ $file?namespace }&lt;/a&gt; 
   &lt;/span&gt;
};
(:~  connections list :)
declare function page:calls($calls-this as item()*,$this,$called-by-this as item()*)
as element(div)?
{
  if(0=count($calls-this) and 0=count($called-by-this))then ()
  else 
  &lt;div style="display: flex;width:100%; justify-content: space-between;"&gt;
    &lt;div style="width:30%;"&gt;{ if (count($calls-this)) then
                                 $calls-this!&lt;div &gt;{.}&lt;/div&gt;
                              else "(None)"   
                             }&lt;/div&gt;
     &lt;div&gt;&lt;div&gt;imports&lt;/div&gt;&amp;#x2192;&lt;/div&gt;
    &lt;div class="badge badge-info"&gt;this&lt;/div&gt;
     &lt;div&gt;&lt;div&gt;imports&lt;/div&gt;&amp;#x2192;&lt;/div&gt;
    &lt;div style="width:30%;"&gt;{ if(count($called-by-this)) then
                                $called-by-this!&lt;div&gt;{.}&lt;/div&gt;
                              else
                               ("(None)")
     }&lt;/div&gt;
&lt;/div&gt; 
};

(:~ 
 : generate standard page wrapper
 : uses $opts?resources
  :)
declare function page:wrap($body,$opts as map(*)) 
as element(html)
{
    &lt;html&gt;
      &lt;head&gt;
       &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
       &lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/&gt; 
       &lt;meta http-equiv="Generator" content="xqdoca - https://github.com/quodatum/xqdoca" /&gt;
        &lt;title&gt;
          { $opts?project } - xqDocA
        &lt;/title&gt;
        
        &lt;link rel="shortcut icon" type="image/x-icon" href="{ $opts?resources }xqdoc.png" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }prism.css"/&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }page.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }query.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }base.css" /&gt;
     
      
      &lt;/head&gt;

      &lt;body class="home" id="top"&gt;
        &lt;div id="main" &gt;
        {$body}
        &lt;/div&gt;
        &lt;div class="footer"&gt;
            &lt;p style="text-align:right"&gt;Generated by 
            &lt;a href="https://github.com/Quodatum/xqdoca" target="_blank"&gt;xqDocA&lt;/a&gt; 
            at { page:date() }&lt;/p&gt;
          &lt;/div&gt;
         &lt;script  src="{ $opts?resources }prism.js" type="text/javascript"&gt; &lt;/script&gt;
       
      &lt;/body&gt;
    &lt;/html&gt;
};

(:~ 
 : build toc 
 : @param $name title
 : @param $toc xml 
 :)
declare function page:toc3($name as xs:string,$tree as element(directory),$decorate as function(*))
as element(nav)
{
    &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span &gt;
                   { $name }
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;{
             $tree/*! page:tree-list(.,position(),$decorate)
          }&lt;/ol&gt;
        &lt;/nav&gt; 
};
(:~  section numbering util :)
declare function page:section($pos as xs:anyAtomicType*)
as xs:string{
  string-join($pos,".") || "&amp;#160;"
};

(:~ tree to list
 : @param tree file (@name.@target) directory elements 
 : @param $seq starting section number 
:)
declare function page:tree-list($tree as element(*),$seq as xs:integer*,$render as function(*))
as element(li){
  let $pos:=page:section($seq)
  
  return &lt;li&gt;{
         $render($pos,$tree),
         if($tree  instance of element(directory))then
          &lt;ol class="toc"&gt;{ $tree/*!page:tree-list(.,($seq,position()),$render) }&lt;/ol&gt;
          else ()
        }&lt;/li&gt;
 
};

(:~ formated datetime
 : @param $when date to now
 :)
declare function page:date($when as xs:dateTime)
as element(span)
{
  &lt;span title="{ $when }" &gt;{ format-dateTime($when, "[h].[m01][Pn] on [FNn], [MNn] [D1o] [Y0000]") }&lt;/span&gt;
};

(:~ formated datetime for now :)
declare function page:date()
as element(span)
{
 page:date(current-dateTime())
};

(:~ table of renderers
 : @todo only show in referenced in $opts
 :)
declare 
function page:view-list($renderers as map(*)*,$exclude as xs:string*)                       
as element(table)
{
 &lt;table class="data"&gt;
 &lt;thead&gt;
 &lt;th&gt;View&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 {
  for  $def in $renderers
  where not($def?name = $exclude)
  return &lt;tr&gt;&lt;td&gt;&lt;a href="{ $def?uri }"&gt;{ $def?name }&lt;/a&gt;&lt;/td&gt;
             &lt;td&gt;{ $def?description }&lt;/td&gt;
         &lt;/tr&gt;
  }    
 &lt;/tbody&gt;
&lt;/table&gt;
};

declare function page:badge($label as xs:string,$color as xs:string)
as element(span)
{
  &lt;span class="badge badge-{$color}" title="Updating"&gt;{$label}&lt;/span&gt;
};</xqdoc:body></xqdoc:module><xqdoc:imports/><xqdoc:namespaces><xqdoc:namespace prefix="page" uri="quodatum:xqdoca.page"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>link to module</xqdoc:description></xqdoc:comment><xqdoc:name>page:link-module</xqdoc:name><xqdoc:signature>declare function page:link-module($uri as xs:string, $model as map(*)) as element(span)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>uri</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>model</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tail</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>model</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>files</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>files</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>root</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>files</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>files</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>files</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>root</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>pos</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:link-module($uri as xs:string,$model as map(*))                       
as element(span)
{
 let $files:=$model?files[?namespace=$uri]
 let $root:="../../"
 return if(empty($files)) then
           &lt;span class="badge badge-warning" title="Externally defined"&gt;{ $uri }&lt;/span&gt;
        else
           &lt;span&gt;{ $files[1]?namespace }
           &lt;a href="{ $root }{ $files[1]?href }index.html" title="{ $files[1]?path }"&gt;ðŸ”—&lt;/a&gt;
           {for $file at $pos in tail($files)
           return ("&amp;#160;",
                &lt;a  href="{ $root }{ $file?href }index.html" title="{ $file?path }"&gt;
                &lt;span class="badge badge-info"&gt;{1+$pos}&lt;/span&gt;
                &lt;/a&gt;
                )
         }&lt;/span&gt; 
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>link to module</xqdoc:description></xqdoc:comment><xqdoc:name>page:link-module</xqdoc:name><xqdoc:signature>declare function page:link-module($file as map(*)) as element(span)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>file</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>file</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:link-module($file as map(*))                       
as element(span)
{  
   &lt;span&gt;
    &lt;a href="{ $file?href }index.html" title="{ $file?path }"&gt;{ $file?namespace }&lt;/a&gt; 
   &lt;/span&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>connections list</xqdoc:description></xqdoc:comment><xqdoc:name>page:calls</xqdoc:name><xqdoc:signature>declare function page:calls($calls-this as item()*, $this as item()*, $called-by-this as item()*) as element(div)?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>calls-this</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>this</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>called-by-this</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">element(div)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>calls-this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>called-by-this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>calls-this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>calls-this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>called-by-this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>called-by-this</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:calls($calls-this as item()*,$this,$called-by-this as item()*)
as element(div)?
{
  if(0=count($calls-this) and 0=count($called-by-this))then ()
  else 
  &lt;div style="display: flex;width:100%; justify-content: space-between;"&gt;
    &lt;div style="width:30%;"&gt;{ if (count($calls-this)) then
                                 $calls-this!&lt;div &gt;{.}&lt;/div&gt;
                              else "(None)"   
                             }&lt;/div&gt;
     &lt;div&gt;&lt;div&gt;imports&lt;/div&gt;&amp;#x2192;&lt;/div&gt;
    &lt;div class="badge badge-info"&gt;this&lt;/div&gt;
     &lt;div&gt;&lt;div&gt;imports&lt;/div&gt;&amp;#x2192;&lt;/div&gt;
    &lt;div style="width:30%;"&gt;{ if(count($called-by-this)) then
                                $called-by-this!&lt;div&gt;{.}&lt;/div&gt;
                              else
                               ("(None)")
     }&lt;/div&gt;
&lt;/div&gt; 
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>generate standard page wrapper
uses $opts?resources</xqdoc:description></xqdoc:comment><xqdoc:name>page:wrap</xqdoc:name><xqdoc:signature>declare function page:wrap($body as item()*, $opts as map(*)) as element(html)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>body</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(html)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>date</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>body</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:wrap($body,$opts as map(*)) 
as element(html)
{
    &lt;html&gt;
      &lt;head&gt;
       &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
       &lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/&gt; 
       &lt;meta http-equiv="Generator" content="xqdoca - https://github.com/quodatum/xqdoca" /&gt;
        &lt;title&gt;
          { $opts?project } - xqDocA
        &lt;/title&gt;
        
        &lt;link rel="shortcut icon" type="image/x-icon" href="{ $opts?resources }xqdoc.png" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }prism.css"/&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }page.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }query.css" /&gt;
        &lt;link rel="stylesheet" type="text/css" href="{ $opts?resources }base.css" /&gt;
     
      
      &lt;/head&gt;

      &lt;body class="home" id="top"&gt;
        &lt;div id="main" &gt;
        {$body}
        &lt;/div&gt;
        &lt;div class="footer"&gt;
            &lt;p style="text-align:right"&gt;Generated by 
            &lt;a href="https://github.com/Quodatum/xqdoca" target="_blank"&gt;xqDocA&lt;/a&gt; 
            at { page:date() }&lt;/p&gt;
          &lt;/div&gt;
         &lt;script  src="{ $opts?resources }prism.js" type="text/javascript"&gt; &lt;/script&gt;
       
      &lt;/body&gt;
    &lt;/html&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>build toc</xqdoc:description><xqdoc:param>$name title</xqdoc:param><xqdoc:param>$toc xml</xqdoc:param></xqdoc:comment><xqdoc:name>page:toc3</xqdoc:name><xqdoc:signature>declare function page:toc3($name as xs:string, $tree as element(directory), $decorate as function(*)) as element(nav)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>tree</xqdoc:name><xqdoc:type>element(directory)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>decorate</xqdoc:name><xqdoc:type>function(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(nav)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>position</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>name</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>decorate</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:toc3($name as xs:string,$tree as element(directory),$decorate as function(*))
as element(nav)
{
    &lt;nav id="toc"&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span &gt;
                   { $name }
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;{
             $tree/*! page:tree-list(.,position(),$decorate)
          }&lt;/ol&gt;
        &lt;/nav&gt; 
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>section numbering util</xqdoc:description></xqdoc:comment><xqdoc:name>page:section</xqdoc:name><xqdoc:signature>declare function page:section($pos as xs:anyAtomicType*) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>pos</xqdoc:name><xqdoc:type occurrence="*">xs:anyAtomicType</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>pos</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:section($pos as xs:anyAtomicType*)
as xs:string{
  string-join($pos,".") || "&amp;#160;"
}</xqdoc:body></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>tree to list</xqdoc:description><xqdoc:param>tree file (@name.@target) directory elements</xqdoc:param><xqdoc:param>$seq starting section number</xqdoc:param></xqdoc:comment><xqdoc:name>page:tree-list</xqdoc:name><xqdoc:signature>declare function page:tree-list($tree as element(), $seq as xs:integer*, $render as function(*)) as element(li)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>tree</xqdoc:name><xqdoc:type>element()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq</xqdoc:name><xqdoc:type occurrence="*">xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>render</xqdoc:name><xqdoc:type>function(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(li)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>section</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>position</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>render</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>pos</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>render</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:tree-list($tree as element(*),$seq as xs:integer*,$render as function(*))
as element(li){
  let $pos:=page:section($seq)
  
  return &lt;li&gt;{
         $render($pos,$tree),
         if($tree  instance of element(directory))then
          &lt;ol class="toc"&gt;{ $tree/*!page:tree-list(.,($seq,position()),$render) }&lt;/ol&gt;
          else ()
        }&lt;/li&gt;
 
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>formated datetime</xqdoc:description><xqdoc:param>$when date to now</xqdoc:param></xqdoc:comment><xqdoc:name>page:date</xqdoc:name><xqdoc:signature>declare function page:date($when as xs:dateTime) as element(span)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>when</xqdoc:name><xqdoc:type>xs:dateTime</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>format-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>when</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>when</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:date($when as xs:dateTime)
as element(span)
{
  &lt;span title="{ $when }" &gt;{ format-dateTime($when, "[h].[m01][Pn] on [FNn], [MNn] [D1o] [Y0000]") }&lt;/span&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>formated datetime for now</xqdoc:description></xqdoc:comment><xqdoc:name>page:date</xqdoc:name><xqdoc:signature>declare function page:date() as element(span)</xqdoc:signature><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:name>date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:body>function page:date()
as element(span)
{
 page:date(current-dateTime())
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>table of renderers</xqdoc:description><xqdoc:custom tag="todo">only show in referenced in $opts</xqdoc:custom></xqdoc:comment><xqdoc:name>page:view-list</xqdoc:name><xqdoc:signature>declare function page:view-list($renderers as (map(*))*, $exclude as xs:string*) as element(table)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>renderers</xqdoc:name><xqdoc:type occurrence="*">map(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>exclude</xqdoc:name><xqdoc:type occurrence="*">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(table)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>renderers</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exclude</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>def</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:view-list($renderers as map(*)*,$exclude as xs:string*)                       
as element(table)
{
 &lt;table class="data"&gt;
 &lt;thead&gt;
 &lt;th&gt;View&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 {
  for  $def in $renderers
  where not($def?name = $exclude)
  return &lt;tr&gt;&lt;td&gt;&lt;a href="{ $def?uri }"&gt;{ $def?name }&lt;/a&gt;&lt;/td&gt;
             &lt;td&gt;{ $def?description }&lt;/td&gt;
         &lt;/tr&gt;
  }    
 &lt;/tbody&gt;
&lt;/table&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>page:badge</xqdoc:name><xqdoc:signature>declare function page:badge($label as xs:string, $color as xs:string) as element(span)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>label</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>color</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(span)</xqdoc:type></xqdoc:return><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>color</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>label</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function page:badge($label as xs:string,$color as xs:string)
as element(span)
{
  &lt;span class="badge badge-{$color}" title="Updating"&gt;{$label}&lt;/span&gt;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>