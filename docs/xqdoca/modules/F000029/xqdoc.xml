<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:35:19.705+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="main"><xqdoc:uri>xqdoca-cmd.xq</xqdoc:uri><xqdoc:name/><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Process xqdoca command line options and execution&#xD;
</xqdoc:description><xqdoc:author>Andy Bunce (Quodatum)</xqdoc:author><xqdoc:see>xqdoc.xq</xqdoc:see></xqdoc:comment><xqdoc:body>xquery version "3.1";&#xD;
(:~  &#xD;
 Process xqdoca command line options and execution&#xD;
 @see xqdoc.xq &#xD;
 @author Andy Bunce (Quodatum)&#xD;
 :)&#xD;
&#xD;
import module namespace cmd = 'quodatum:tools:commandline' at "lib/commandline.xqm";&#xD;
declare namespace pkg="http://expath.org/ns/pkg";&#xD;
&#xD;
(:~ command line args :)&#xD;
declare variable $args as xs:string  external;&#xD;
&#xD;
(:~ expath metadata from expath-pkg.xml :)&#xD;
declare variable $expkg as element(pkg:package):= doc("expath-pkg.xml")/*;&#xD;
&#xD;
declare function local:resolve($path) as xs:string{&#xD;
  file:resolve-path($path,file:current-dir())&#xD;
};&#xD;
&#xD;
let $args:=cmd:parse-args($args)&#xD;
let $args:=if(exists($args)) &#xD;
           then $args &#xD;
           else local:resolve(".xqdoca")!(if(doc-available(.))&#xD;
                                          then .&#xD;
                                          else "-h")&#xD;
let  $action :=head($args)&#xD;
&#xD;
return  &#xD;
    switch($action)&#xD;
    case "-h" return &#xD;
              update:output(unparsed-text("xqdoca.txt"))&#xD;
&#xD;
    case "-v" return&#xD;
              let $xqd:= $expkg/@version/string()&#xD;
              let $java:= proc:property('java.runtime.version')&#xD;
              let $basex:= db:system()/generalinformation/version/string()&#xD;
              return update:output(``[xqdoca=`{$xqd}`, basex=`{$basex}`, java=`{$java}`]``)&#xD;
&#xD;
    case "-install" &#xD;
    case "-update" return (cmd:install-dependencies($expkg)&#xD;
                          ,update:output("All dependancies installed."))&#xD;
&#xD;
    case "-pull"  return update:output("Pull: " || $args) &#xD;
          &#xD;
    case "-init" return&#xD;
                let $file:=local:resolve(".xqdoca") &#xD;
                return if(not(file:exists($file)))&#xD;
                       then&#xD;
                        let $xml:=&lt;xqdoca xmlns="urn:quodatum:xqdoca" version="1.0"&gt;&#xD;
                              &lt;source&gt;.&lt;/source&gt;&#xD;
                              &lt;target&gt;xqdoca/&lt;/target&gt;&#xD;
                              &lt;/xqdoca&gt;&#xD;
                        return (file:write($file,$xml),update:output("file created"))     &#xD;
                       else update:output("xqdoca file already exists")&#xD;
&#xD;
    default return (&#xD;
           cmd:check-dependencies($expkg)&#xD;
            ,for $href in $args &#xD;
            let $src:=local:resolve($href)=&gt;trace("Processing: ")&#xD;
            return xquery:eval-update(xs:anyURI("xqdoca.xq"),&#xD;
                                      map{"config-path": $src, &#xD;
                                          "pass":true()}&#xD;
                                    )&#xD;
                  )&#xD;
&#xD;
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum:tools:commandline</xqdoc:uri><xqdoc:at>lib/commandline.xqm</xqdoc:at></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="cmd" uri="quodatum:tools:commandline"/><xqdoc:namespace prefix="pkg" uri="http://expath.org/ns/pkg"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/><xqdoc:namespace prefix="local" uri="http://www.w3.org/2005/xquery-local-functions"/><xqdoc:namespace prefix="file" uri="http://expath.org/ns/file"/><xqdoc:namespace prefix="update" uri="http://basex.org/modules/update"/><xqdoc:namespace prefix="proc" uri="http://basex.org/modules/proc"/><xqdoc:namespace prefix="db" uri="http://basex.org/modules/db"/><xqdoc:namespace prefix="xquery" uri="http://basex.org/modules/xquery"/></xqdoc:namespaces><xqdoc:variables><xqdoc:variable external="true"><xqdoc:name>args</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
command line args</xqdoc:description></xqdoc:comment><xqdoc:type>xs:string</xqdoc:type><xqdoc:body>variable $args as xs:string  external</xqdoc:body></xqdoc:variable><xqdoc:variable><xqdoc:name>expkg</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
expath metadata from expath-pkg.xml</xqdoc:description></xqdoc:comment><xqdoc:type>element(pkg:package)</xqdoc:type><xqdoc:body>variable $expkg as element(pkg:package):= doc("expath-pkg.xml")/*</xqdoc:body></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="1"><xqdoc:name>local:resolve</xqdoc:name><xqdoc:signature>function local:resolve ( $path ) as xs:string { file:resolve-path($path,file:current-dir()) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>path</xqdoc:name></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:body>function local:resolve($path) as xs:string{&#xD;
  file:resolve-path($path,file:current-dir())&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>The query body.</xqdoc:description><xqdoc:custom tag="note">pseudo main function as per http//xqdoc.org</xqdoc:custom></xqdoc:comment><xqdoc:name>local:xqDoc-main</xqdoc:name><xqdoc:signature>local:xqDoc-main()</xqdoc:signature><xqdoc:body>let $args:=cmd:parse-args($args)&#xD;
let $args:=if(exists($args)) &#xD;
           then $args &#xD;
           else local:resolve(".xqdoca")!(if(doc-available(.))&#xD;
                                          then .&#xD;
                                          else "-h")&#xD;
let  $action :=head($args)&#xD;
&#xD;
return  &#xD;
    switch($action)&#xD;
    case "-h" return &#xD;
              update:output(unparsed-text("xqdoca.txt"))&#xD;
&#xD;
    case "-v" return&#xD;
              let $xqd:= $expkg/@version/string()&#xD;
              let $java:= proc:property('java.runtime.version')&#xD;
              let $basex:= db:system()/generalinformation/version/string()&#xD;
              return update:output(``[xqdoca=`{$xqd}`, basex=`{$basex}`, java=`{$java}`]``)&#xD;
&#xD;
    case "-install" &#xD;
    case "-update" return (cmd:install-dependencies($expkg)&#xD;
                          ,update:output("All dependancies installed."))&#xD;
&#xD;
    case "-pull"  return update:output("Pull: " || $args) &#xD;
          &#xD;
    case "-init" return&#xD;
                let $file:=local:resolve(".xqdoca") &#xD;
                return if(not(file:exists($file)))&#xD;
                       then&#xD;
                        let $xml:=&lt;xqdoca xmlns="urn:quodatum:xqdoca" version="1.0"&gt;&#xD;
                              &lt;source&gt;.&lt;/source&gt;&#xD;
                              &lt;target&gt;xqdoca/&lt;/target&gt;&#xD;
                              &lt;/xqdoca&gt;&#xD;
                        return (file:write($file,$xml),update:output("file created"))     &#xD;
                       else update:output("xqdoca file already exists")&#xD;
&#xD;
    default return (&#xD;
           cmd:check-dependencies($expkg)&#xD;
            ,for $href in $args &#xD;
            let $src:=local:resolve($href)=&gt;trace("Processing: ")&#xD;
            return xquery:eval-update(xs:anyURI("xqdoca.xq"),&#xD;
                                      map{"config-path": $src, &#xD;
                                          "pass":true()}&#xD;
                                    )&#xD;
                  )</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>