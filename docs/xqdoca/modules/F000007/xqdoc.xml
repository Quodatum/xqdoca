<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:35:19.705+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:xqdoca.generator.imports</xqdoc:uri><xqdoc:name>_</xqdoc:name><xqdoc:comment><xqdoc:description><p>generate html import summary</p></xqdoc:description><xqdoc:author>Andy Bunce, Quodatum, License: Apache-2.0</xqdoc:author><xqdoc:custom tag="Copyright">(c) 2019-2026 Quodatum Ltd</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";&#xD;
(:~&#xD;
 : &lt;p&gt;generate html import summary&lt;/p&gt;&#xD;
 : @Copyright (c) 2019-2026 Quodatum Ltd&#xD;
 : @author Andy Bunce, Quodatum, License: Apache-2.0&#xD;
 :)&#xD;
&#xD;
module namespace _ = 'quodatum:xqdoca.generator.imports';&#xD;
&#xD;
import module namespace xqd = 'quodatum:xqdoca.model' at "../lib/model.xqm";&#xD;
&#xD;
import module namespace page = 'quodatum:xqdoca.page'  at "../lib/xqdoc-page.xqm";&#xD;
declare namespace xqdoc="http://www.xqdoc.org/1.0";&#xD;
declare namespace xqdoca="https://github.com/Quodatum/xqdoca";&#xD;
&#xD;
&#xD;
(:~ import page :)&#xD;
declare &#xD;
%xqdoca:global("imports","Summary of import usage")&#xD;
%xqdoca:output("imports.html","xhtml") &#xD;
function _:imports($model,$opts)&#xD;
{&#xD;
  let $imports:=xqd:imports($model)&#xD;
  let $sections:=(&#xD;
             _:summary($model,$opts),&#xD;
              &lt;section  id="imports"&gt;&#xD;
                 &lt;h2&gt;{ ``[Imports (`{ map:size($imports) }`)]`` }&lt;/h2&gt;&#xD;
                 {&#xD;
                 for $ns in map:keys($imports)&#xD;
                 order by $ns&#xD;
                 return  _:by-ns($ns,$imports?($ns))&#xD;
                 }&#xD;
              &lt;/section&gt;&#xD;
  )&#xD;
  let $links:= page:related-buttons("global","imports", $opts) &#xD;
  let $body:=&lt;div&gt;&#xD;
              &lt;h1&gt;Project &lt;span class="badge badge-info"&gt;&#xD;
                      { $opts?project }&#xD;
                  &lt;/span&gt;&#xD;
                  &amp;#160;Imports &#xD;
              &lt;/h1&gt;&#xD;
&#xD;
            { (:page:toc($opts?project,$sections,$links) :) }&#xD;
            &lt;nav id="toc"&gt;&#xD;
                        &lt;h2&gt;&#xD;
                            &lt;a href="index.html" &gt;&#xD;
                                { $opts? project }&#xD;
                            &lt;/a&gt;&#xD;
                            / Imports&#xD;
                        &lt;/h2&gt;&#xD;
              { $links}&#xD;
                &lt;h3&gt;&#xD;
                  Contents&#xD;
                &lt;/h3&gt;&#xD;
              { _:toc(map:keys($imports) =&gt; sort())}&#xD;
              &lt;/nav&gt; &#xD;
            { $sections}    &#xD;
       &lt;/div&gt;&#xD;
  return  page:wrap($body,$opts)&#xD;
};&#xD;
&#xD;
(:~&#xD;
@param $ns namespace&#xD;
@param $files &#xD;
:)&#xD;
declare function _:by-ns($ns as xs:string,&#xD;
                         $files as map(*)*)&#xD;
{&#xD;
   &lt;div class="div3" &gt;&#xD;
           &lt;h3&gt;&lt;a id="{ $ns }"/&gt;{ $ns } &lt;small&gt; is imported by &lt;/small&gt;&#xD;
           &lt;div  style="float:right"&gt;&lt;a href="#{ $ns }"&gt;#&lt;/a&gt;&lt;/div&gt;&#xD;
           &lt;/h3&gt;&#xD;
           &lt;ul&gt;&#xD;
           {for $f in  $files&#xD;
           return &lt;li&gt;&lt;a href="{$f?href}index.html"&gt;{ $f?namespace || ' @ ' || $f?path }&lt;/a&gt; &lt;/li&gt;&#xD;
         }&#xD;
           &lt;/ul&gt;&#xD;
           &lt;/div&gt;&#xD;
};&#xD;
&#xD;
declare function _:summary($model,$opts)&#xD;
as element(section)&#xD;
{&#xD;
  &lt;section id="summary"&gt;&#xD;
    &lt;h2&gt;Summary&lt;/h2&gt;&#xD;
    &lt;p&gt;Lists all modules imported.&lt;/p&gt;&#xD;
    { page:related-links("global","imports", $opts) }&#xD;
 &lt;/section&gt;&#xD;
};&#xD;
&#xD;
(:~ table of contents as list from namespace list :)&#xD;
declare function _:toc($imports as xs:string*)&#xD;
as element(ol)&#xD;
{&#xD;
 let $t:=&lt;directory&gt;&#xD;
      &lt;f target="#summary" name="Summary"/&gt;&#xD;
      &lt;directory target="#imports" name="Imports"&gt;{&#xD;
     $imports!&lt;f target="#{.}" name="{.}" /&gt;&#xD;
      }&lt;/directory&gt;&#xD;
     &lt;/directory&gt;&#xD;
 return &lt;ol class="toc"&gt;&#xD;
        {$t/*!page:tree-list(.,position(),page:toc-render#2,99)}&#xD;
        &lt;/ol&gt;    &#xD;
};&#xD;
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum:xqdoca.model</xqdoc:uri><xqdoc:at>../lib/model.xqm</xqdoc:at></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum:xqdoca.page</xqdoc:uri><xqdoc:at>../lib/xqdoc-page.xqm</xqdoc:at></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="_" uri="quodatum:xqdoca.generator.imports"/><xqdoc:namespace prefix="xqd" uri="quodatum:xqdoca.model"/><xqdoc:namespace prefix="page" uri="quodatum:xqdoca.page"/><xqdoc:namespace prefix="xqdoc" uri="http://www.xqdoc.org/1.0"/><xqdoc:namespace prefix="xqdoca" uri="https://github.com/Quodatum/xqdoca"/><xqdoc:namespace prefix="map" uri="http://www.w3.org/2005/xpath-functions/map"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>&#xD;
import page</xqdoc:description></xqdoc:comment><xqdoc:name>_:imports</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="xqdoca:global"><xqdoc:literal type="xs:string">imports</xqdoc:literal><xqdoc:literal type="xs:string">Summary of import usage</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="xqdoca:output"><xqdoc:literal type="xs:string">imports.html</xqdoc:literal><xqdoc:literal type="xs:string">xhtml</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function _:imports ( $model,$opts ) { let $imports:=xqd:imports($model) let $sections:=( _:summary($model,$opts), &lt;section id="imports"&gt; &lt;h2&gt;{ ``[Imports (`{ map:size($imports) }`)]`` }&lt;/h2&gt; { for $ns in map:keys($imports) order by $ns return _:by-ns($ns,$imports?($ns)) } &lt;/section&gt; ) let $links:= page:related-buttons("global","imports", $opts) let $body:=&lt;div&gt; &lt;h1&gt;Project &lt;span class="badge badge-info"&gt; { $opts?project } &lt;/span&gt; &amp;#160;Imports &lt;/h1&gt; { (:page:toc($opts?project,$sections,$links) :) } &lt;nav id="toc"&gt; &lt;h2&gt; &lt;a href="index.html" &gt; { $opts? project } &lt;/a&gt; / Imports &lt;/h2&gt; { $links} &lt;h3&gt; Contents &lt;/h3&gt; { _:toc(map:keys($imports) =&gt; sort())} &lt;/nav&gt; { $sections} &lt;/div&gt; return page:wrap($body,$opts) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>model</xqdoc:name></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name></xqdoc:parameter></xqdoc:parameters><xqdoc:body>function _:imports($model,$opts)&#xD;
{&#xD;
  let $imports:=xqd:imports($model)&#xD;
  let $sections:=(&#xD;
             _:summary($model,$opts),&#xD;
              &lt;section  id="imports"&gt;&#xD;
                 &lt;h2&gt;{ ``[Imports (`{ map:size($imports) }`)]`` }&lt;/h2&gt;&#xD;
                 {&#xD;
                 for $ns in map:keys($imports)&#xD;
                 order by $ns&#xD;
                 return  _:by-ns($ns,$imports?($ns))&#xD;
                 }&#xD;
              &lt;/section&gt;&#xD;
  )&#xD;
  let $links:= page:related-buttons("global","imports", $opts) &#xD;
  let $body:=&lt;div&gt;&#xD;
              &lt;h1&gt;Project &lt;span class="badge badge-info"&gt;&#xD;
                      { $opts?project }&#xD;
                  &lt;/span&gt;&#xD;
                  &amp;#160;Imports &#xD;
              &lt;/h1&gt;&#xD;
&#xD;
            { (:page:toc($opts?project,$sections,$links) :) }&#xD;
            &lt;nav id="toc"&gt;&#xD;
                        &lt;h2&gt;&#xD;
                            &lt;a href="index.html" &gt;&#xD;
                                { $opts? project }&#xD;
                            &lt;/a&gt;&#xD;
                            / Imports&#xD;
                        &lt;/h2&gt;&#xD;
              { $links}&#xD;
                &lt;h3&gt;&#xD;
                  Contents&#xD;
                &lt;/h3&gt;&#xD;
              { _:toc(map:keys($imports) =&gt; sort())}&#xD;
              &lt;/nav&gt; &#xD;
            { $sections}    &#xD;
       &lt;/div&gt;&#xD;
  return  page:wrap($body,$opts)&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
</xqdoc:description><xqdoc:param>$ns namespace</xqdoc:param><xqdoc:param>$files</xqdoc:param></xqdoc:comment><xqdoc:name>_:by-ns</xqdoc:name><xqdoc:signature>function _:by-ns ( $ns as xs:string, $files as map(*)* ) { &lt;div class="div3" &gt; &lt;h3&gt;&lt;a id="{ $ns }"/&gt;{ $ns } &lt;small&gt; is imported by &lt;/small&gt; &lt;div style="float:right"&gt;&lt;a href="#{ $ns }"&gt;#&lt;/a&gt;&lt;/div&gt; &lt;/h3&gt; &lt;ul&gt; {for $f in $files return &lt;li&gt;&lt;a href="{$f?href}index.html"&gt;{ $f?namespace || ' @ ' || $f?path }&lt;/a&gt; &lt;/li&gt; } &lt;/ul&gt; &lt;/div&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>ns</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>files</xqdoc:name><xqdoc:type occurrence="*">map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:body>function _:by-ns($ns as xs:string,&#xD;
                         $files as map(*)*)&#xD;
{&#xD;
   &lt;div class="div3" &gt;&#xD;
           &lt;h3&gt;&lt;a id="{ $ns }"/&gt;{ $ns } &lt;small&gt; is imported by &lt;/small&gt;&#xD;
           &lt;div  style="float:right"&gt;&lt;a href="#{ $ns }"&gt;#&lt;/a&gt;&lt;/div&gt;&#xD;
           &lt;/h3&gt;&#xD;
           &lt;ul&gt;&#xD;
           {for $f in  $files&#xD;
           return &lt;li&gt;&lt;a href="{$f?href}index.html"&gt;{ $f?namespace || ' @ ' || $f?path }&lt;/a&gt; &lt;/li&gt;&#xD;
         }&#xD;
           &lt;/ul&gt;&#xD;
           &lt;/div&gt;&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>_:summary</xqdoc:name><xqdoc:signature>function _:summary ( $model,$opts ) as element(section) { &lt;section id="summary"&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Lists all modules imported.&lt;/p&gt; { page:related-links("global","imports", $opts) } &lt;/section&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>model</xqdoc:name></xqdoc:parameter><xqdoc:parameter><xqdoc:name>opts</xqdoc:name></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(section)</xqdoc:type></xqdoc:return><xqdoc:body>function _:summary($model,$opts)&#xD;
as element(section)&#xD;
{&#xD;
  &lt;section id="summary"&gt;&#xD;
    &lt;h2&gt;Summary&lt;/h2&gt;&#xD;
    &lt;p&gt;Lists all modules imported.&lt;/p&gt;&#xD;
    { page:related-links("global","imports", $opts) }&#xD;
 &lt;/section&gt;&#xD;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
table of contents as list from namespace list</xqdoc:description></xqdoc:comment><xqdoc:name>_:toc</xqdoc:name><xqdoc:signature>function _:toc ( $imports as xs:string* ) as element(ol) { let $t:=&lt;directory&gt; &lt;f target="#summary" name="Summary"/&gt; &lt;directory target="#imports" name="Imports"&gt;{ $imports!&lt;f target="#{.}" name="{.}" /&gt; }&lt;/directory&gt; &lt;/directory&gt; return &lt;ol class="toc"&gt; {$t/*!page:tree-list(.,position(),page:toc-render#2,99)} &lt;/ol&gt; }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>imports</xqdoc:name><xqdoc:type occurrence="*">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(ol)</xqdoc:type></xqdoc:return><xqdoc:body>function _:toc($imports as xs:string*)&#xD;
as element(ol)&#xD;
{&#xD;
 let $t:=&lt;directory&gt;&#xD;
      &lt;f target="#summary" name="Summary"/&gt;&#xD;
      &lt;directory target="#imports" name="Imports"&gt;{&#xD;
     $imports!&lt;f target="#{.}" name="{.}" /&gt;&#xD;
      }&lt;/directory&gt;&#xD;
     &lt;/directory&gt;&#xD;
 return &lt;ol class="toc"&gt;&#xD;
        {$t/*!page:tree-list(.,position(),page:toc-render#2,99)}&#xD;
        &lt;/ol&gt;    &#xD;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>