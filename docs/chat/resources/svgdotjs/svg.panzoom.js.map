{"version":3,"file":"svg.panzoom.js","sources":["../src/svg.panzoom.js"],"sourcesContent":["import { Svg, on, off, extend, Matrix, Box } from '@svgdotjs/svg.js'\n\nconst normalizeEvent = ev =>\n  ev.touches || [{ clientX: ev.clientX, clientY: ev.clientY }]\n\nextend(Svg, {\n  panZoom (options) {\n    this.off('.panZoom')\n\n    // when called with false, disable panZoom\n    if (options === false) return this\n\n    options = options ?? {}\n    const zoomFactor = options.zoomFactor ?? 2\n    const zoomMin = options.zoomMin ?? Number.MIN_VALUE\n    const zoomMax = options.zoomMax ?? Number.MAX_VALUE\n    const doWheelZoom = options.wheelZoom ?? true\n    const doPinchZoom = options.pinchZoom ?? true\n    const doPanning = options.panning ?? true\n    const panButton = options.panButton ?? 0\n    const oneFingerPan = options.oneFingerPan ?? false\n    const margins = options.margins ?? false\n    const wheelZoomDeltaModeLinePixels = options.wheelZoomDeltaModeLinePixels ?? 17\n    const wheelZoomDeltaModeScreenPixels = options.wheelZoomDeltaModeScreenPixels ?? 53\n\n    let lastP\n    let lastTouches\n    let zoomInProgress = false\n\n    const viewbox = this.viewbox()\n\n    const restrictToMargins = box => {\n      if (!margins) return box\n      const { top, left, bottom, right } = margins\n\n      const { width, height } = this.attr(['width', 'height'])\n      const preserveAspectRatio = this.node.preserveAspectRatio.baseVal\n\n      // The current viewport (exactly what is shown on the screen, what we ultimately want to restrict)\n      // is not always exactly the same as current viewbox. They are different when the viewbox aspectRatio and the svg aspectRatio\n      // are different and preserveAspectRatio is not \"none\". These offsets represent the difference in user coordinates\n      // between the side of the viewbox and the side of the viewport.\n      let viewportLeftOffset = 0\n      let viewportRightOffset = 0\n      let viewportTopOffset = 0\n      let viewportBottomOffset = 0\n\n      // preserveAspectRatio none has no offsets\n      if (preserveAspectRatio.align !== preserveAspectRatio.SVG_PRESERVEASPECTRATIO_NONE) {\n        const svgAspectRatio = width / height\n        const viewboxAspectRatio = viewbox.width / viewbox.height\n        // when aspectRatios are the same, there are no offsets\n        if (viewboxAspectRatio !== svgAspectRatio) {\n          // aspectRatio unknown is like meet because that's the default\n          const isMeet = preserveAspectRatio.meetOrSlice !== preserveAspectRatio.SVG_MEETORSLICE_SLICE\n          const changedAxis = svgAspectRatio > viewboxAspectRatio ? 'width' : 'height'\n          const isWidth = changedAxis === 'width'\n          const changeHorizontal = (isMeet && isWidth) || (!isMeet && !isWidth)\n          const ratio = changeHorizontal\n            ? svgAspectRatio / viewboxAspectRatio\n            : viewboxAspectRatio / svgAspectRatio\n\n          const offset = box[changedAxis] - box[changedAxis] * ratio\n          if (changeHorizontal) {\n            if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX) {\n              viewportLeftOffset = offset / 2\n              viewportRightOffset = -offset / 2\n            } else if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX) {\n              viewportRightOffset = -offset\n            } else if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX) {\n              viewportLeftOffset = offset\n            }\n          } else {\n            if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID) {\n              viewportTopOffset = offset / 2\n              viewportBottomOffset = -offset / 2\n            } else if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN) {\n              viewportBottomOffset = -offset\n            } else if (\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX ||\n              preserveAspectRatio.align === preserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX) {\n              viewportTopOffset = offset\n            }\n          }\n\n        }\n      }\n\n      // when box.x == leftLimit, the image is panned to the left,\n      // i.e the current box is to the right of the initial viewbox,\n      // and only the right part of the initial image is visible, i.e.\n      // the right side of the initial viewbox minus left margin (viewbox.x+viewbox.width-left)\n      // is aligned with the left side of the viewport (box.x + viewportLeftOffset):\n      // viewbox.width + viewbox.x - left = box.x + viewportLeftOffset\n      // viewbox.width + viewbox.x - left - viewportLeftOffset = box.x (= leftLimit)\n      const leftLimit = viewbox.width + viewbox.x - left - viewportLeftOffset\n      // when box.x == rightLimit, the image is panned to the right,\n      // i.e the current box is to the left of the initial viewbox\n      // and only the left part of the initial image is visible, i.e\n      // the left side of the initial viewbox plus right margin (viewbox.x + right)\n      // is aligned with the right side of the viewport (box.x + box.width + viewportRightOffset)\n      // viewbox.x + right = box.x + box.width + viewportRightOffset\n      // viewbox.x + right - box.width - viewportRightOffset = box.x (= rightLimit)\n      const rightLimit = viewbox.x + right - box.width - viewportRightOffset\n      // same with top and bottom\n      const topLimit = viewbox.height + viewbox.y - top - viewportTopOffset\n      const bottomLimit = viewbox.y + bottom - box.height - viewportBottomOffset\n\n      box.x = Math.min(leftLimit, Math.max(rightLimit, box.x)) // enforce rightLimit <= box.x <= leftLimit\n      box.y = Math.min(topLimit, Math.max(bottomLimit, box.y)) // enforce bottomLimit <= box.y <= topLimit\n      return box\n    }\n\n    const wheelZoom = function (ev) {\n      ev.preventDefault()\n\n      // When wheeling on a mouse,\n      // - chrome by default uses deltaY = 53, deltaMode = 0 (pixel)\n      // - firefox by default uses deltaY = 3, deltaMode = 1 (line)\n      // - chrome and firefox on windows after configuring \"One screen at a time\"\n      //   use deltaY = 1, deltaMode = 2 (screen)\n      //\n      // Note that when when wheeling on a touchpad, deltaY depends on how fast\n      // you swipe, but the deltaMode is still different between the browsers.\n      //\n      // Normalize everything so that zooming speed is approximately the same in all cases\n      let normalizedPixelDeltaY\n      switch (ev.deltaMode) {\n      case 1:\n        normalizedPixelDeltaY = ev.deltaY * wheelZoomDeltaModeLinePixels\n        break\n      case 2:\n        normalizedPixelDeltaY = ev.deltaY * wheelZoomDeltaModeScreenPixels\n        break\n      default:\n        // 0 (already pixels) or new mode (avoid crashing)\n        normalizedPixelDeltaY = ev.deltaY\n        break\n      }\n\n      let lvl = Math.pow(1 + zoomFactor, (-1 * normalizedPixelDeltaY) / 100) * this.zoom()\n      const p = this.point(ev.clientX, ev.clientY)\n\n      if (lvl > zoomMax) {\n        lvl = zoomMax\n      }\n\n      if (lvl < zoomMin) {\n        lvl = zoomMin\n      }\n\n      if (this.dispatch('zoom', { level: lvl, focus: p }).defaultPrevented) {\n        return this\n      }\n\n      this.zoom(lvl, p)\n\n      if (margins) {\n        const box = restrictToMargins(this.viewbox())\n        this.viewbox(box)\n      }\n    }\n\n    const pinchZoomStart = function (ev) {\n      lastTouches = normalizeEvent(ev)\n\n      // Start panning in case only one touch is found\n      if (lastTouches.length < 2) {\n        if (doPanning && oneFingerPan) {\n          panStart.call(this, ev)\n        }\n        return\n      }\n\n      // Stop panning for more than one touch\n      if (doPanning && oneFingerPan) {\n        panStop.call(this, ev)\n      }\n\n      // We call it so late, so the user is still able to scroll / reload the page via gesture\n      // In case oneFingerPan is not active\n      ev.preventDefault()\n\n      if (this.dispatch('pinchZoomStart', { event: ev }).defaultPrevented) {\n        return\n      }\n\n      this.off('touchstart.panZoom', pinchZoomStart)\n\n      zoomInProgress = true\n      on(document, 'touchmove.panZoom', pinchZoom, this, { passive: false })\n      on(document, 'touchend.panZoom', pinchZoomStop, this, { passive: false })\n    }\n\n    const pinchZoomStop = function (ev) {\n      ev.preventDefault()\n\n      const currentTouches = normalizeEvent(ev)\n      if (currentTouches.length > 1) {\n        return\n      }\n\n      zoomInProgress = false\n\n      this.dispatch('pinchZoomEnd', { event: ev })\n\n      off(document, 'touchmove.panZoom', pinchZoom)\n      off(document, 'touchend.panZoom', pinchZoomStop)\n      this.on('touchstart.panZoom', pinchZoomStart)\n\n      if (currentTouches.length && doPanning && oneFingerPan) {\n        panStart.call(this, ev)\n      }\n    }\n\n    const pinchZoom = function (ev) {\n      ev.preventDefault()\n\n      const currentTouches = normalizeEvent(ev)\n      const zoom = this.zoom()\n\n      // Distance Formula\n      const lastDelta = Math.sqrt(\n        Math.pow(lastTouches[0].clientX - lastTouches[1].clientX, 2) +\n          Math.pow(lastTouches[0].clientY - lastTouches[1].clientY, 2)\n      )\n\n      const currentDelta = Math.sqrt(\n        Math.pow(currentTouches[0].clientX - currentTouches[1].clientX, 2) +\n          Math.pow(currentTouches[0].clientY - currentTouches[1].clientY, 2)\n      )\n\n      let zoomAmount = lastDelta / currentDelta\n\n      if (\n        (zoom < zoomMin && zoomAmount > 1) ||\n        (zoom > zoomMax && zoomAmount < 1)\n      ) {\n        zoomAmount = 1\n      }\n\n      const currentFocus = {\n        x:\n          currentTouches[0].clientX +\n          0.5 * (currentTouches[1].clientX - currentTouches[0].clientX),\n        y:\n          currentTouches[0].clientY +\n          0.5 * (currentTouches[1].clientY - currentTouches[0].clientY)\n      }\n\n      const lastFocus = {\n        x:\n          lastTouches[0].clientX +\n          0.5 * (lastTouches[1].clientX - lastTouches[0].clientX),\n        y:\n          lastTouches[0].clientY +\n          0.5 * (lastTouches[1].clientY - lastTouches[0].clientY)\n      }\n\n      const p = this.point(currentFocus.x, currentFocus.y)\n      const focusP = this.point(\n        2 * currentFocus.x - lastFocus.x,\n        2 * currentFocus.y - lastFocus.y\n      )\n      const box = new Box(this.viewbox()).transform(\n        new Matrix()\n          .translate(-focusP.x, -focusP.y)\n          .scale(zoomAmount, 0, 0)\n          .translate(p.x, p.y)\n      )\n\n      restrictToMargins(box)\n      this.viewbox(box)\n\n      lastTouches = currentTouches\n\n      this.dispatch('zoom', { box: box, focus: focusP })\n    }\n\n    const panStart = function (ev) {\n      const isMouse = ev.type.indexOf('mouse') > -1\n\n      // In case panStart is called with touch, ev.button is undefined\n      if (isMouse && ev.button !== panButton && ev.which !== panButton + 1) {\n        return\n      }\n\n      ev.preventDefault()\n\n      this.off('mousedown.panZoom', panStart)\n\n      lastTouches = normalizeEvent(ev)\n\n      if (zoomInProgress) return\n\n      this.dispatch('panStart', { event: ev })\n\n      lastP = { x: lastTouches[0].clientX, y: lastTouches[0].clientY }\n\n      on(document, 'touchmove.panZoom mousemove.panZoom', panning, this, {\n        passive: false\n      })\n\n      on(document, 'touchend.panZoom mouseup.panZoom', panStop, this, {\n        passive: false\n      })\n    }\n\n    const panStop = function (ev) {\n      ev.preventDefault()\n\n      off(document, 'touchmove.panZoom mousemove.panZoom', panning)\n      off(document, 'touchend.panZoom mouseup.panZoom', panStop)\n      this.on('mousedown.panZoom', panStart)\n\n      this.dispatch('panEnd', { event: ev })\n    }\n\n    const panning = function (ev) {\n      ev.preventDefault()\n\n      const currentTouches = normalizeEvent(ev)\n\n      const currentP = {\n        x: currentTouches[0].clientX,\n        y: currentTouches[0].clientY\n      }\n\n      const p1 = this.point(currentP.x, currentP.y)\n\n      const p2 = this.point(lastP.x, lastP.y)\n\n      const deltaP = [p2.x - p1.x, p2.y - p1.y]\n\n      if (!deltaP[0] && !deltaP[1]) {\n        return\n      }\n\n      const box = new Box(this.viewbox()).transform(\n        new Matrix().translate(deltaP[0], deltaP[1])\n      )\n\n      lastP = currentP\n\n      restrictToMargins(box)\n\n      if (this.dispatch('panning', { box, event: ev }).defaultPrevented) {\n        return\n      }\n\n      this.viewbox(box)\n    }\n\n    if (doWheelZoom) {\n      this.on('wheel.panZoom', wheelZoom, this, { passive: false })\n    }\n\n    if (doPinchZoom) {\n      this.on('touchstart.panZoom', pinchZoomStart, this, { passive: false })\n    }\n\n    if (doPanning) {\n      this.on('mousedown.panZoom', panStart, this, { passive: false })\n    }\n\n    return this\n  }\n})\n"],"names":["normalizeEvent","ev","touches","clientX","clientY","extend","Svg","panZoom","options","off","zoomFactor","zoomMin","Number","MIN_VALUE","zoomMax","MAX_VALUE","doWheelZoom","wheelZoom","doPinchZoom","pinchZoom","doPanning","panning","panButton","oneFingerPan","margins","wheelZoomDeltaModeLinePixels","wheelZoomDeltaModeScreenPixels","lastP","lastTouches","zoomInProgress","viewbox","restrictToMargins","box","top","left","bottom","right","attr","width","height","preserveAspectRatio","node","baseVal","viewportLeftOffset","viewportRightOffset","viewportTopOffset","viewportBottomOffset","align","SVG_PRESERVEASPECTRATIO_NONE","svgAspectRatio","viewboxAspectRatio","isMeet","meetOrSlice","SVG_MEETORSLICE_SLICE","changedAxis","isWidth","changeHorizontal","ratio","offset","SVG_PRESERVEASPECTRATIO_XMIDYMIN","SVG_PRESERVEASPECTRATIO_XMIDYMID","SVG_PRESERVEASPECTRATIO_XMIDYMAX","SVG_PRESERVEASPECTRATIO_XMINYMIN","SVG_PRESERVEASPECTRATIO_XMINYMID","SVG_PRESERVEASPECTRATIO_XMINYMAX","SVG_PRESERVEASPECTRATIO_XMAXYMIN","SVG_PRESERVEASPECTRATIO_XMAXYMID","SVG_PRESERVEASPECTRATIO_XMAXYMAX","leftLimit","x","rightLimit","topLimit","y","bottomLimit","Math","min","max","preventDefault","normalizedPixelDeltaY","deltaMode","deltaY","lvl","pow","zoom","p","point","dispatch","level","focus","defaultPrevented","pinchZoomStart","length","panStart","call","panStop","event","on","document","passive","pinchZoomStop","currentTouches","lastDelta","sqrt","currentDelta","zoomAmount","currentFocus","lastFocus","focusP","Box","transform","Matrix","translate","scale","isMouse","type","indexOf","button","which","currentP","p1","p2","deltaP"],"mappings":"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"}