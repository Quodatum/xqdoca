<XQuery>(:~
 : Generate html for for XQuery sources
 : @return info about the run (json format)
 :)

<MainModule><Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>xqd</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum:build.xqdoc'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../../lib/xqdoc/xqdoc-proj.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>xqhtml</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum:build.xqdoc-html'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../../lib/xqdoc/xqdoc-html.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>store</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum.store'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../../lib/store.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>



(:~ URL of the root folder to document
 : @default C:/Users/andy/git/vue-poc/src/vue-poc
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>efolder</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:anyURI</QName></TypeDeclaration>  <TOKEN>external</TOKEN> <TOKEN>:=</TOKEN> <FunctionCall><QName>xs:anyURI</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"C:/Users/andy/git/vue-poc/src/vue-poc"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>id</QName> <TypeDeclaration><TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>last-id</QName><TOKEN>)</TOKEN></ElementTest></TypeDeclaration><TOKEN>:=</TOKEN><RelativePathExpr><FunctionCall><QName>db:open</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"vue-poc"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"/state.xml"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><QName>state</QName><PredicateList/></AxisStep><TOKEN>/</TOKEN><AxisStep><QName>last-id</QName><PredicateList/></AxisStep></RelativePathExpr></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog>
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>path</QName><TOKEN>:=</TOKEN><StringConcatExpr><StringLiteral>"static/xqdoc/"</StringLiteral> <TOKEN>||</TOKEN> <StringLiteral>"33"</StringLiteral> <TOKEN>||</TOKEN> <StringLiteral>"/"</StringLiteral></StringConcatExpr></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>root</QName><TOKEN>:=</TOKEN><ArrowExpr><FunctionCall><QName>db:option</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"webpath"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>=&gt;</TOKEN><QName>file:path-to-uri</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></ArrowExpr></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>target</QName><TOKEN>:=</TOKEN><FunctionCall><QName>resolve-uri</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>path</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>root</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>


<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>state</QName><TOKEN>:=</TOKEN><ArrowExpr><FunctionCall><QName>xqd:read</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>efolder</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>=&gt;</TOKEN><QName>trace</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"READ: "</StringLiteral><TOKEN>)</TOKEN></ArgumentList></ArrowExpr></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>opts</QName><TOKEN>:=</TOKEN><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
               <MapConstructorEntry><StringLiteral>"src-folder"</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>efolder</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> 
               <MapConstructorEntry><StringLiteral>"project"</StringLiteral><TOKEN>:</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>project</NCName></Lookup></PostfixExpr></MapConstructorEntry><TOKEN>,</TOKEN> 
               <MapConstructorEntry><StringLiteral>"ext-id"</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
               <MapConstructorEntry><StringLiteral>"resources"</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>"resources/"</StringLiteral></MapConstructorEntry>
               <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>

(: generate o/ps per source file  :)
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>modmap</QName><TOKEN>:=</TOKEN><FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>file</QName> <PositionalVar><TOKEN>at</TOKEN> <TOKEN>$</TOKEN><QName>pos</QName></PositionalVar> <TOKEN>in</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>files</NCName></Lookup></PostfixExpr></ForBinding></ForClause>
               <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>params</QName><TOKEN>:=</TOKEN><FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                              <MapConstructorEntry><StringLiteral>"source"</StringLiteral><TOKEN>:</TOKEN>  <RelativePathExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqparse</NCName></Lookup></PostfixExpr><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>"filename"</StringLiteral><TOKEN>:</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>path</NCName></Lookup></PostfixExpr></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>"cache"</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>xqd:cache</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>"show-private"</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>"root"</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>"../../"</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>"resources"</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>"resources/"</StringLiteral></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
                              <VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
               <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                 <Expr><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqdoc</NCName></Lookup></PostfixExpr></MapConstructorEntry><TOKEN>,</TOKEN>
                    <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN>  <StringConcatExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>href</NCName></Lookup></PostfixExpr> <TOKEN>||</TOKEN> <StringLiteral>"/xqdoc.xml"</StringLiteral></StringConcatExpr></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:XML</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
                  <MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqparse</NCName></Lookup></PostfixExpr></MapConstructorEntry><TOKEN>,</TOKEN>
                    <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN>  <StringConcatExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>href</NCName></Lookup></PostfixExpr> <TOKEN>||</TOKEN> <StringLiteral>"xqparse.xml"</StringLiteral></StringConcatExpr></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:XML</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
                  <MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>xqd:xqdoc-html</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>xqdoc</NCName></Lookup></PostfixExpr><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>,</TOKEN>
                   <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN>  <StringConcatExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>href</NCName></Lookup></PostfixExpr> <TOKEN>||</TOKEN> <StringLiteral>"index.html"</StringLiteral></StringConcatExpr></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:HTML5</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor></Expr>
               <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></LetBinding></LetClause>
               
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>index</QName><TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN> 
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>xqhtml:index-html2</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>,</TOKEN>
                   <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN> <StringConstructor><TOKEN>``[</TOKEN><StringConstructorChars>index.html</StringConstructorChars><TOKEN>]``</TOKEN></StringConstructor></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:HTML5</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
                 
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>restxq</QName><TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>xqhtml:restxq</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>xqd:rxq-paths</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>,</TOKEN>
                     <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN> <StringConstructor><TOKEN>``[</TOKEN><StringConstructorChars>restxq.html</StringConstructorChars><TOKEN>]``</TOKEN></StringConstructor></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:HTML5</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>imports</QName><TOKEN>:=</TOKEN><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
                   <MapConstructorEntry><StringLiteral>"document"</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>xqhtml:imports</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>xqd:imports</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry><TOKEN>,</TOKEN>
                     <MapConstructorEntry><StringLiteral>"uri"</StringLiteral><TOKEN>:</TOKEN> <StringConstructor><TOKEN>``[</TOKEN><StringConstructorChars>imports.html</StringConstructorChars><TOKEN>]``</TOKEN></StringConstructor></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>"opts"</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>xqd:HTML5</QName></VarRef></MapConstructorEntry>
                 <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
<ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
       <Expr><FunctionCall><QName>store:store</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>index</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>restxq</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>imports</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>modmap</QName></VarRef></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
       <FunctionCall><QName>xqd:export-resources2</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
       <ReplaceExpr><TOKEN>replace</TOKEN> <TOKEN>value</TOKEN> <TOKEN>of</TOKEN> <TOKEN>node</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef> <TOKEN>with</TOKEN> <AdditiveExpr><IntegerLiteral>1</IntegerLiteral><TOKEN>+</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef></AdditiveExpr></ReplaceExpr><TOKEN>,</TOKEN>
       <FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN>
         <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>json</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>b</QuotAttrContentChar><QuotAttrContentChar>j</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>extra</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>X</ElementContentChar><ElementContentChar>Q</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>g</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>d</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>extra</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>msg</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>,</ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN><FunctionCall><TOKEN>count</TOKEN><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>files</NCName></Lookup></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar> </ElementContentChar><ElementContentChar>f</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>p</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>.</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>msg</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>id</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>id</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>json</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
            <TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
       <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></MainModule>

<EOF/></XQuery>