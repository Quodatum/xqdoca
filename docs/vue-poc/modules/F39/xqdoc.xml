<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-05-29T12:58:24.547+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="main"><xqdoc:uri>tx-xqrest2.xq</xqdoc:uri><xqdoc:comment><xqdoc:description>XQDoc: generate restxq.html from resources located at $target</xqdoc:description></xqdoc:comment><xqdoc:body>(:~
 : XQDoc: generate restxq.html from resources located at $target 
 :)
import module namespace xqd = 'quodatum:build.xqdoc' at "../../../lib/xqdoc/xqdoc-proj.xqm";
import module namespace xqhtml = 'quodatum:build.xqdoc-html' at "../../../lib/xqdoc/xqdoc-html.xqm";
import module namespace store = 'quodatum.store' at "../../../lib/store.xqm";
import module namespace tree = 'quodatum.data.tree' at "../../../lib/tree.xqm";

declare namespace c="http://www.w3.org/ns/xproc-step";
declare namespace xqdoc="http://www.xqdoc.org/1.0";


(:~ URL of the doc source
 : @default file:///C:/tmp/xqdoc/
 :)
declare variable $target as xs:anyURI external :=
"file:///C:/tmp/xqdoc/" cast as xs:anyURI;


(:~   sequence of maps for each restxq:path 
 : @param 
:)
declare function local:import($path,
                              $id as item(),
                              $folder)
as map(*)*
{
  let $uri:=``[modules/F`{ string($id) }`/]``
  let $doc:=doc(resolve-uri($uri || "xqdoc.xml",$folder))
  let $annots:=xqd:annotations($doc/*, $xqd:nsRESTXQ,"path")
  return $annots!map{
                "id": $id,
                "uri": $uri,
                "path": $path,
                "annot": .,
                "function": ./../../(xqdoc:name/string(),@arity/string()),
                "description": ./../../xqdoc:comment/xqdoc:description/node() 
                 }
       
};

(:~
 : html for page. 
 :)
 declare function local:page($reps as map(*)*)
{
let $tree:=trace($reps?uri)
let $tree:=tree:build($tree)=&gt;trace("TRRES")
let $op:= &lt;div&gt;
          &lt;nav id="toc"&gt;
            &lt;div&gt;
                &lt;a href="index.html"&gt;
                   Index 
                &lt;/a&gt;
            &lt;/div&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span &gt;
                    RestXQ
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                 &lt;li  href="#main"&gt;
                    &lt;a &gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Paths.&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
      
                 &lt;ol  class="toc"&gt; { $tree/*/*!local:tree-list(.,2) } &lt;/ol&gt;
                &lt;/li&gt;
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index: &lt;/a&gt;
          
           &lt;ul&gt;{$reps!local:path-to-html(.)}&lt;/ul&gt;
           &lt;/div&gt;
return  xqhtml:page($op,map{"resources": "resources/"})
};

(:~ tree to list :)
declare function local:tree-list($tree as element(*),$seq as xs:integer*){
  typeswitch ($tree )
  case element(directory) 
      return &lt;li&gt;
                 &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                 &lt;span class="content"&gt;{$tree/@name/string()}/&lt;/span&gt;
                 &lt;ol class="toc"&gt;{$tree/*!local:tree-list(.,($seq,position()))}&lt;/ol&gt;
             &lt;/li&gt;
   case element(file) 
      return &lt;li&gt;{if($tree/@target) then
                   &lt;a href="#{$tree/@target}"&gt;
                     &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                     
                      &lt;span class="content" title="{$tree/@target}"&gt;{  $tree/@name/string() }&lt;/span&gt;
                      &lt;div class="tag tag-success" 
                            title="RESTXQ: {$tree/@target}"&gt;GET
                      &lt;/div&gt;
                      &lt;div class="tag tag-danger"  style="float:right"
                            title="RESTXQ: {$tree/@target}"&gt;X
                      &lt;/div&gt;
                   &lt;/a&gt;
               else 
                &lt;span class="content"&gt;{$tree/@name/string()}&lt;/span&gt;
             }&lt;/li&gt;   
  default 
     return &lt;li&gt;unknown&lt;/li&gt;
};

(:~  html for a path :)          
declare function local:path-to-html($rep as map(*))
as element(li){
   &lt;li id="{ $rep?uri }"&gt;
       &lt;h4&gt;{ $rep?uri }&lt;/h4&gt;
       &lt;ul&gt;{
       let $methods as map(*) :=$rep?methods
       for $method in map:keys($methods)
       let $d:=$methods?($method)
       let $id:=head($d?function)
       return &lt;li&gt;
                    &lt;a href="{$d?uri}index.html#{$id }"&gt;{ $method }&lt;/a&gt;
                    &lt;div&gt;{$d?description}&lt;/div&gt;
              &lt;/li&gt;
       }&lt;/ul&gt;
   &lt;/li&gt;
};


(:sequence of maps :map{id:,path:,annot:} :)                                            
let $reports:= doc(resolve-uri("files.xml",$target))
              //c:file!local:import(string-join(ancestor-or-self::*/@name,"/"),position(),$target)

(: map keyed on uris :)
let $data:=map:merge(for $report in $reports
          group by $uri:=$report?annot/xqdoc:literal/string()
          let $methods:= map:merge(
                         for $annot in $report
                         let $hits:=for $method in $xqd:methods
                                     let $hit:=  xqd:methods($annot?annot/.., $xqd:nsRESTXQ, $method)
                                     return if(empty($hit)) then () else map{$method: $annot}
                         return if(exists($hits))then $hits else map{"ALL":$annot}
                         
                       )
          return map:entry($uri,map{ "uri": $uri, "methods": $methods})
        ) 


let $uris:=sort(map:keys($data))
let $result:=&lt;json type="object"&gt;
                  &lt;extra&gt;hello2&lt;/extra&gt;
                  &lt;msg&gt; {$target}, {count($data)} uris processed.&lt;/msg&gt;
                  &lt;id&gt;xqrest2 ID??&lt;/id&gt;
              &lt;/json&gt;
return 
      (
       local:page( $data?($uris))
       =&gt;xqd:store2("restxq.html",$xqd:HTML5)
       =&gt;store:store($target),
       update:output($result)
       )
 </xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.store</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.data.tree</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="xqd" uri="quodatum:build.xqdoc"/><xqdoc:namespace prefix="xqhtml" uri="quodatum:build.xqdoc-html"/><xqdoc:namespace prefix="store" uri="quodatum.store"/><xqdoc:namespace prefix="tree" uri="quodatum.data.tree"/><xqdoc:namespace prefix="c" uri="http://www.w3.org/ns/xproc-step"/><xqdoc:namespace prefix="xqdoc" uri="http://www.xqdoc.org/1.0"/><xqdoc:namespace prefix="local" uri="http://www.w3.org/2005/xquery-local-functions"/><xqdoc:namespace prefix="local" uri="http://www.w3.org/2005/xquery-local-functions"/></xqdoc:namespaces><xqdoc:variables><xqdoc:variable><xqdoc:name>target</xqdoc:name><xqdoc:comment><xqdoc:description>URL of the doc source</xqdoc:description><xqdoc:custom tag="default">file:///C:/tmp/xqdoc/</xqdoc:custom></xqdoc:comment><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description>sequence of maps for each restxq:path</xqdoc:description><xqdoc:param/></xqdoc:comment><xqdoc:name>local:import</xqdoc:name><xqdoc:signature>declare function local:import($path as item()*, $id as item(), $folder as item()*) as (map(*))*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>path</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>id</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>folder</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">map(*)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>doc</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>resolve-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>annotations</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>id</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>folder</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>doc</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>nsRESTXQ</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annots</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>id</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>path</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function local:import($path,
                              $id as item(),
                              $folder)
as map(*)*
{
  let $uri:=``[modules/F`{ string($id) }`/]``
  let $doc:=doc(resolve-uri($uri || "xqdoc.xml",$folder))
  let $annots:=xqd:annotations($doc/*, $xqd:nsRESTXQ,"path")
  return $annots!map{
                "id": $id,
                "uri": $uri,
                "path": $path,
                "annot": .,
                "function": ./../../(xqdoc:name/string(),@arity/string()),
                "description": ./../../xqdoc:comment/xqdoc:description/node() 
                 }
       
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>html for page.</xqdoc:description></xqdoc:comment><xqdoc:name>local:page</xqdoc:name><xqdoc:signature>declare function local:page($reps as (map(*))*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>reps</xqdoc:name><xqdoc:type occurrence="*">map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>trace</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.data.tree</xqdoc:uri><xqdoc:name>build</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xquery-local-functions</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xquery-local-functions</xqdoc:uri><xqdoc:name>path-to-html</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:build.xqdoc-html</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>trace</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>reps</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>reps</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>op</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function local:page($reps as map(*)*)
{
let $tree:=trace($reps?uri)
let $tree:=tree:build($tree)=&gt;trace("TRRES")
let $op:= &lt;div&gt;
          &lt;nav id="toc"&gt;
            &lt;div&gt;
                &lt;a href="index.html"&gt;
                   Index 
                &lt;/a&gt;
            &lt;/div&gt;
            &lt;h2&gt;
                &lt;a id="contents"&gt;&lt;/a&gt;
                &lt;span &gt;
                    RestXQ
                &lt;/span&gt;
            &lt;/h2&gt;
            &lt;ol class="toc"&gt;
                &lt;li&gt;
                    &lt;a href="#main"&gt;
                        &lt;span class="secno"&gt;1 &lt;/span&gt;
                        &lt;span class="content"&gt;Introduction&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                 &lt;li  href="#main"&gt;
                    &lt;a &gt;
                        &lt;span class="secno"&gt;2 &lt;/span&gt;
                        &lt;span class="content"&gt;Paths.&lt;/span&gt;
                    &lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
      
                 &lt;ol  class="toc"&gt; { $tree/*/*!local:tree-list(.,2) } &lt;/ol&gt;
                &lt;/li&gt;
             &lt;/ol&gt;
           &lt;/nav&gt;
           &lt;a href="index.html"&gt;index: &lt;/a&gt;
          
           &lt;ul&gt;{$reps!local:path-to-html(.)}&lt;/ul&gt;
           &lt;/div&gt;
return  xqhtml:page($op,map{"resources": "resources/"})
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>tree to list</xqdoc:description></xqdoc:comment><xqdoc:name>local:tree-list</xqdoc:name><xqdoc:signature>declare function local:tree-list($tree as element(), $seq as xs:integer*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>tree</xqdoc:name><xqdoc:type>element()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>seq</xqdoc:name><xqdoc:type occurrence="*">xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xquery-local-functions</xqdoc:uri><xqdoc:name>tree-list</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>position</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>seq</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tree</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function local:tree-list($tree as element(*),$seq as xs:integer*){
  typeswitch ($tree )
  case element(directory) 
      return &lt;li&gt;
                 &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                 &lt;span class="content"&gt;{$tree/@name/string()}/&lt;/span&gt;
                 &lt;ol class="toc"&gt;{$tree/*!local:tree-list(.,($seq,position()))}&lt;/ol&gt;
             &lt;/li&gt;
   case element(file) 
      return &lt;li&gt;{if($tree/@target) then
                   &lt;a href="#{$tree/@target}"&gt;
                     &lt;span class="secno"&gt;{string-join($seq,'.')}&lt;/span&gt;
                     
                      &lt;span class="content" title="{$tree/@target}"&gt;{  $tree/@name/string() }&lt;/span&gt;
                      &lt;div class="tag tag-success" 
                            title="RESTXQ: {$tree/@target}"&gt;GET
                      &lt;/div&gt;
                      &lt;div class="tag tag-danger"  style="float:right"
                            title="RESTXQ: {$tree/@target}"&gt;X
                      &lt;/div&gt;
                   &lt;/a&gt;
               else 
                &lt;span class="content"&gt;{$tree/@name/string()}&lt;/span&gt;
             }&lt;/li&gt;   
  default 
     return &lt;li&gt;unknown&lt;/li&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>html for a path</xqdoc:description></xqdoc:comment><xqdoc:name>local:path-to-html</xqdoc:name><xqdoc:signature>declare function local:path-to-html($rep as map(*)) as element(li)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>rep</xqdoc:name><xqdoc:type>map(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(li)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>head</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>rep</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>id</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function local:path-to-html($rep as map(*))
as element(li){
   &lt;li id="{ $rep?uri }"&gt;
       &lt;h4&gt;{ $rep?uri }&lt;/h4&gt;
       &lt;ul&gt;{
       let $methods as map(*) :=$rep?methods
       for $method in map:keys($methods)
       let $d:=$methods?($method)
       let $id:=head($d?function)
       return &lt;li&gt;
                    &lt;a href="{$d?uri}index.html#{$id }"&gt;{ $method }&lt;/a&gt;
                    &lt;div&gt;{$d?description}&lt;/div&gt;
              &lt;/li&gt;
       }&lt;/ul&gt;
   &lt;/li&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>pseudo main function</xqdoc:description></xqdoc:comment><xqdoc:name>local:xqDoc-main</xqdoc:name><xqdoc:signature>local:xqDoc-main()</xqdoc:signature><xqdoc:body>let $reports:= doc(resolve-uri("files.xml",$target))
              //c:file!local:import(string-join(ancestor-or-self::*/@name,"/"),position(),$target)

(: map keyed on uris :)
let $data:=map:merge(for $report in $reports
          group by $uri:=$report?annot/xqdoc:literal/string()
          let $methods:= map:merge(
                         for $annot in $report
                         let $hits:=for $method in $xqd:methods
                                     let $hit:=  xqd:methods($annot?annot/.., $xqd:nsRESTXQ, $method)
                                     return if(empty($hit)) then () else map{$method: $annot}
                         return if(exists($hits))then $hits else map{"ALL":$annot}
                         
                       )
          return map:entry($uri,map{ "uri": $uri, "methods": $methods})
        ) 


let $uris:=sort(map:keys($data))
let $result:=&lt;json type="object"&gt;
                  &lt;extra&gt;hello2&lt;/extra&gt;
                  &lt;msg&gt; {$target}, {count($data)} uris processed.&lt;/msg&gt;
                  &lt;id&gt;xqrest2 ID??&lt;/id&gt;
              &lt;/json&gt;
return 
      (
       local:page( $data?($uris))
       =&gt;xqd:store2("restxq.html",$xqd:HTML5)
       =&gt;store:store($target),
       update:output($result)
       )</xqdoc:body><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>doc</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>resolve-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xquery-local-functions</xqdoc:uri><xqdoc:name>import</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>position</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>merge</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>merge</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>entry</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>sort</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xquery-local-functions</xqdoc:uri><xqdoc:name>page</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://basex.org/modules/update</xqdoc:uri><xqdoc:name>output</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>store2</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.store</xqdoc:uri><xqdoc:name>store</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>target</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>target</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>reports</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>report</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>report</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annot</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>nsRESTXQ</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>hit</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>method</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annot</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>hits</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>hits</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>annot</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uri</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>methods</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>target</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>uris</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum:build.xqdoc</xqdoc:uri><xqdoc:name>HTML5</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>target</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>result</xqdoc:name></xqdoc:ref-variable><xqdoc:body>let $reports:= doc(resolve-uri("files.xml",$target))
              //c:file!local:import(string-join(ancestor-or-self::*/@name,"/"),position(),$target)

(: map keyed on uris :)
let $data:=map:merge(for $report in $reports
          group by $uri:=$report?annot/xqdoc:literal/string()
          let $methods:= map:merge(
                         for $annot in $report
                         let $hits:=for $method in $xqd:methods
                                     let $hit:=  xqd:methods($annot?annot/.., $xqd:nsRESTXQ, $method)
                                     return if(empty($hit)) then () else map{$method: $annot}
                         return if(exists($hits))then $hits else map{"ALL":$annot}
                         
                       )
          return map:entry($uri,map{ "uri": $uri, "methods": $methods})
        ) 


let $uris:=sort(map:keys($data))
let $result:=&lt;json type="object"&gt;
                  &lt;extra&gt;hello2&lt;/extra&gt;
                  &lt;msg&gt; {$target}, {count($data)} uris processed.&lt;/msg&gt;
                  &lt;id&gt;xqrest2 ID??&lt;/id&gt;
              &lt;/json&gt;
return 
      (
       local:page( $data?($uris))
       =&gt;xqd:store2("restxq.html",$xqd:HTML5)
       =&gt;store:store($target),
       update:output($result)
       )</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>