<XQuery>(:~ 
: web utils
: @author andy bunce
: @since oct 2012
:)

<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>qweb</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum.web.utils4'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>
<Prolog><DefaultNamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>default</TOKEN> <TOKEN>function</TOKEN> <TOKEN>namespace</TOKEN> <StringLiteral>'quodatum.web.utils4'</StringLiteral></DefaultNamespaceDecl><TOKEN>;</TOKEN> 
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>request</NCName> <TOKEN>=</TOKEN> <StringLiteral>"http://exquery.org/ns/request"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<NamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>namespace</TOKEN> <NCName>rest</NCName> <TOKEN>=</TOKEN> <StringLiteral>'http://exquery.org/ns/restxq'</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN>

(:~ map of available dice parameters :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>dice</QName><TOKEN>(</TOKEN><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>fld</QName><TOKEN>:=</TOKEN><InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>n</QName></Param><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
                        <RelativePathExpr><FunctionCall><QName>request:parameter</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>!</TOKEN><FunctionCall><QName>map:entry</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>request:parameter</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr>
                           <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><StringLiteral>"start"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"limit"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"sort"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"fields"</StringLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>!</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>fld</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>status</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>code</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>reason</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
   <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:response</QName><DirAttributeList><S> </S><QName>status</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>code</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>reason</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>reason</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
: REST created http://restpatterns.org/HTTP_Status_Codes/401_-_Unauthorized
:)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>http-auth</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>auth-scheme</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>response</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
   <ParenthesizedExpr><TOKEN>(</TOKEN>
   <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:response</QName><DirAttributeList><S> </S><QName>status</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>4</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><QuotAttrContentChar>1</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar>	</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>W</QuotAttrContentChar><QuotAttrContentChar>W</QuotAttrContentChar><QuotAttrContentChar>W</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>A</QuotAttrContentChar><QuotAttrContentChar>u</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>h</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>a</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>auth-scheme</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar>	</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>http:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
   <VarRef><TOKEN>$</TOKEN><QName>response</QName></VarRef></Expr>
   <TOKEN>)</TOKEN></ParenthesizedExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
: REST created http://restpatterns.org/HTTP_Status_Codes/201_-_Created
:)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>http-created</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>location</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>response</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
   <ParenthesizedExpr><TOKEN>(</TOKEN>
   <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:response</QName><DirAttributeList><S> </S><QName>status</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>2</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><QuotAttrContentChar>1</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar>	</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>L</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>a</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>location</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar>	</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>http:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
   <VarRef><TOKEN>$</TOKEN><QName>response</QName></VarRef></Expr>
   <TOKEN>)</TOKEN></ParenthesizedExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>


(:~ CORS header with download option :) 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>headers</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>attachment</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>response</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
<ParenthesizedExpr><TOKEN>(</TOKEN><Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>A</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>C</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>r</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>l</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>A</QuotAttrContentChar><QuotAttrContentChar>l</QuotAttrContentChar><QuotAttrContentChar>l</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>w</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>O</QuotAttrContentChar><QuotAttrContentChar>r</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>g</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>*</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>attachment</QName></VarRef><TOKEN>)</TOKEN>
    <TOKEN>then</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>C</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>D</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>p</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>;</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>=</AposAttrContentChar><AposAttrContentChar>"</AposAttrContentChar><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>attachment</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><AposAttrContentChar>"</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor>
    <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>http:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>response</QName></VarRef></Expr><TOKEN>)</TOKEN></ParenthesizedExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ download as zip file :) 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>zip-download</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>zipname</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>data</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><FunctionCall><QName>download-response</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"raw"</StringLiteral><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>zipname</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>data</QName></VarRef></Expr><TOKEN>)</TOKEN></ParenthesizedExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ create cookie :) 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>cookie</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>name</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>value</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
   <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>val</QName><TOKEN>:=</TOKEN><StringConstructor><TOKEN>``[</TOKEN><StringConstructorContent><StringConstructorChars/><StringConstructorInterpolation><TOKEN>`{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars>=</StringConstructorChars><StringConstructorInterpolation><TOKEN>`{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars/></StringConstructorContent><TOKEN>]``</TOKEN></StringConstructor></LetBinding></LetClause>
   <ReturnClause><TOKEN>return</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>S</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>C</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>k</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>val</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor></ReturnClause></FLWORExpr> 
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ headers for download  :) 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>method</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>method</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
<DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>output:serialization-parameters</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>output:method</QName><DirAttributeList><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>method</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>output:serialization-parameters</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ headers for download  :) 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>download-response</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>method</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>filename</QName></Param></ParamList><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>

<DirElemConstructor><TOKEN>&lt;</TOKEN><QName>rest:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>output:serialization-parameters</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>output:method</QName><DirAttributeList><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>method</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>output:serialization-parameters</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:response</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>http:header</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>C</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>-</QuotAttrContentChar><QuotAttrContentChar>D</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>p</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>i</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>;</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>=</AposAttrContentChar><AposAttrContentChar>"</AposAttrContentChar><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>filename</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><AposAttrContentChar>"</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar> </ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>http:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>rest:response</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : transform xml to json serialable xml driven by @type="array" and convention.
 : all namespaces are removed
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>fixup</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>n</QName></Param><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><FunctionCall><QName>fixup</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>,</TOKEN><StringLiteral>"object"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN> 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>fixup</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>n</QName></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>type</QName></Param></ParamList><TOKEN>)</TOKEN>
<EnclosedExpr><TOKEN>{</TOKEN>
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>n</QName><TOKEN>:=</TOKEN><FunctionCall><QName>strip-ns</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>a</QName><TOKEN>:=</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>json</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard><PredicateList/></AxisStep></RelativePathExpr><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>json</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></LetBinding></LetClause>
<ReturnClause><TOKEN>return</TOKEN> <CopyModifyExpr><TOKEN>copy</TOKEN> <TOKEN>$</TOKEN><QName>c</QName> <TOKEN>:=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>a</QName></VarRef>
<TOKEN>modify</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
            (: for nodes with no @type and have children set @type="object" :)
            <Expr><FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>type</QName> <TOKEN>in</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>c</QName></VarRef><TOKEN>//</TOKEN><AxisStep><Wildcard>*</Wildcard><Predicate><TOKEN>[</TOKEN><AndExpr><FunctionCall><QName>fn:not</QName><ArgumentList><TOKEN>(</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>type</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>and</TOKEN> <AxisStep><Wildcard>*</Wildcard><PredicateList/></AxisStep></AndExpr><TOKEN>]</TOKEN></Predicate></AxisStep></RelativePathExpr></ForBinding></ForClause>
            <ReturnClause><TOKEN>return</TOKEN> <InsertExpr><TOKEN>insert</TOKEN> <TOKEN>node</TOKEN> <CompAttrConstructor><TOKEN>attribute</TOKEN> <TOKEN>{</TOKEN><StringLiteral>'type'</StringLiteral><TOKEN>}</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><StringLiteral>'object'</StringLiteral><TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor> <TOKEN>into</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef></InsertExpr></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
            (: for node with @type="array" and children rename children to "_" :)
            <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>n</QName> <TOKEN>in</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>c</QName></VarRef><TOKEN>//</TOKEN><AxisStep><Wildcard>*</Wildcard><Predicate><TOKEN>[</TOKEN><ComparisonExpr><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>type</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>=</TOKEN><StringLiteral>"array"</StringLiteral></ComparisonExpr><TOKEN>]</TOKEN></Predicate></AxisStep><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard>
            <PredicateList/></AxisStep></RelativePathExpr></ForBinding></ForClause><ReturnClause><TOKEN>return</TOKEN> <RenameExpr><TOKEN>rename</TOKEN> <TOKEN>node</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef> <TOKEN>as</TOKEN> <StringLiteral>"_"</StringLiteral></RenameExpr></ReturnClause></FLWORExpr></Expr>
        <TOKEN>)</TOKEN></ParenthesizedExpr>
<TOKEN>return</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>c</QName></VarRef></CopyModifyExpr></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>strip-ns</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>n</QName> <TypeDeclaration><TOKEN>as</TOKEN> <AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest></TypeDeclaration></Param><TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><InstanceofExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef> <TOKEN>instance</TOKEN> <TOKEN>of</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ElementTest></InstanceofExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <CompElemConstructor><TOKEN>element</TOKEN> <TOKEN>{</TOKEN> <FunctionCall><QName>fn:local-name</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
      <Expr><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><Wildcard>*</Wildcard></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr><TOKEN>,</TOKEN>
      <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest><PredicateList/></AxisStep><TOKEN>/</TOKEN><FunctionCall><QName>strip-ns</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></Expr>
    <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor>
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><InstanceofExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef> <TOKEN>instance</TOKEN> <TOKEN>of</TOKEN> <DocumentTest><TOKEN>document-node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></DocumentTest></InstanceofExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <CompDocConstructor><TOKEN>document</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest> <PredicateList/></AxisStep></RelativePathExpr><TOKEN>}</TOKEN></EnclosedExpr></CompDocConstructor>
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <VarRef><TOKEN>$</TOKEN><QName>n</QName></VarRef>
  <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ todo use basex mime :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>svg-response</QName><TOKEN>(</TOKEN><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <FunctionCall><QName>web:response-header</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'media-type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>"image/svg+xml"</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>'method'</StringLiteral><TOKEN>:</TOKEN><StringLiteral>"xml"</StringLiteral></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>
 
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>json-response</QName><TOKEN>(</TOKEN><TOKEN>)</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <FunctionCall><QName>web:response-header</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'media-type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>"application/json"</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN>
                              <MapConstructorEntry><StringLiteral>'method'</StringLiteral><TOKEN>:</TOKEN><StringLiteral>"json"</StringLiteral></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule><EOF/></XQuery>