<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-06-05T22:41:22.335+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum.test.components</xqdoc:uri><xqdoc:name>components.xqm</xqdoc:name><xqdoc:comment><xqdoc:description>support tree view</xqdoc:description><xqdoc:author>apb</xqdoc:author><xqdoc:custom tag="exampletag">some value</xqdoc:custom><xqdoc:custom tag="__source">features/components/components.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>(:~
 : support tree view
 : @author apb
 : @exampletag some value
 :)
module namespace j = 'quodatum.test.components';

(:~
 : @return sequence of json arrary items for each item 
 :)
declare function j:tax($items)
as element(_)*
{
 for $a in $items
return &lt;_ type="object"&gt;
    &lt;id&gt;{$a/@id/string()}&lt;/id&gt;
    &lt;label&gt;{$a/@label/string()}&lt;/label&gt;
    {if($a/item)then (
       &lt;children type="array"&gt;{j:tax($a/item)}&lt;/children&gt;
       ,&lt;icon&gt;&lt;/icon&gt;
      ) else (
        &lt;icon&gt;fa fa-tag&lt;/icon&gt;
      )}
&lt;/_&gt; 
};



(:~
 :  tree
 :)
declare  
%rest:GET %rest:path("/vue-poc/api/components/tree")
%output:method("json")   
function j:tree()
as element(json)
{
let $d:=doc(resolve-uri("balisage-taxonomy.xml",static-base-uri()))/tax/item
return
&lt;json type="array"&gt;
{j:tax($d)}
&lt;/json&gt;
};

</xqdoc:body></xqdoc:module><xqdoc:imports/><xqdoc:namespaces><xqdoc:namespace prefix="j" uri="quodatum.test.components"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description/><xqdoc:return>sequence of json arrary items for each item</xqdoc:return></xqdoc:comment><xqdoc:name>j:tax</xqdoc:name><xqdoc:signature>declare function j:tax($items as item()*) as element(_)*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>items</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">element(_)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.test.components</xqdoc:uri><xqdoc:name>tax</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>a</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>a</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>a</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>a</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function j:tax($items)
as element(_)*
{
 for $a in $items
return &lt;_ type="object"&gt;
    &lt;id&gt;{$a/@id/string()}&lt;/id&gt;
    &lt;label&gt;{$a/@label/string()}&lt;/label&gt;
    {if($a/item)then (
       &lt;children type="array"&gt;{j:tax($a/item)}&lt;/children&gt;
       ,&lt;icon&gt;&lt;/icon&gt;
      ) else (
        &lt;icon&gt;fa fa-tag&lt;/icon&gt;
      )}
&lt;/_&gt; 
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>tree</xqdoc:description></xqdoc:comment><xqdoc:name>j:tree</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/components/tree</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("/vue-poc/api/components/tree") %output:method("json") function j:tree() as element(json)</xqdoc:signature><xqdoc:return><xqdoc:type>element(json)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>doc</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>resolve-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>static-base-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.test.components</xqdoc:uri><xqdoc:name>tax</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>d</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function j:tree()
as element(json)
{
let $d:=doc(resolve-uri("balisage-taxonomy.xml",static-base-uri()))/tax/item
return
&lt;json type="array"&gt;
{j:tax($d)}
&lt;/json&gt;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>