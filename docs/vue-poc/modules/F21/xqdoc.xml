<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-05-22T11:22:52.354+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum.model.rest</xqdoc:uri><xqdoc:name>rxq-entity.xqm</xqdoc:name><xqdoc:comment><xqdoc:description>entity rest interface 
defines urls below vue-poc/data/entity/</xqdoc:description><xqdoc:author>andy bunce</xqdoc:author><xqdoc:since>jun 2013</xqdoc:since><xqdoc:custom tag="__source">features/model/rxq-entity.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>xquery version "3.1";
(:~ 
: entity rest interface 
: defines urls below vue-poc/data/entity/
: @author andy bunce
: @since jun 2013
:)

module namespace model-rest = 'quodatum.model.rest';
declare default function namespace 'quodatum.model.rest'; 

import module namespace entity ='quodatum.models.generated' at "../../models.gen.xqm";
import module namespace dice = 'quodatum.web.dice/v4' at "../../lib/dice.xqm"; 
import module namespace web = 'quodatum.web.utils4' at "../../lib/webutils.xqm";
declare namespace ent="https://github.com/Quodatum/app-doc/entity"; 

declare variable $model-rest:models:=db:open("vue-poc")//ent:entity;

(:~ 
 : return list of entities 
 :)
declare 
%rest:GET %rest:path("vue-poc/api/data/entity")
%rest:query-param("q", "{$q}") 
%output:method("json")    
function model-list($q) {
 let $entity:=$entity:list("entity")
 let $items:=$entity?data()
 let $items:=if($q)then $items[fn:contains($entity("access")("name")(.),$q)] else $items
 return dice:response($items,$entity,web:dice())
};


(:~
 : Returns data results
 :)
declare
%rest:path("/vue-poc/api/data/{$entity}")
%rest:query-param("q", "{$q}")
%rest:produces("application/json")
%output:method("json")   
function data($entity as xs:string,$q )   
{
  let $entity:=$entity:list($entity)
  let $items:=$entity("data")()
  
 return dice:response($items,$entity,web:dice())
};

(:~ 
 : details of the entity $entity
 :)
declare 
%rest:GET %rest:path("vue-poc/api/data/entity/{$entity}")
%rest:produces("application/json")
%output:method("json")    
function model($entity) {
let $this:=$entity:list("entity")
 let $items:=$this?data()
 let $fields:=$this?json
 let $item:=$items[@name=$entity]
 (: just one :)
 return &lt;json objects="json"&gt;{dice:json-flds($item,$fields)/*}&lt;/json&gt;

};

(:~ 
 : details of the entity $entity
 :)
declare 
%rest:GET %rest:path("vue-poc/api/data/entity/{$entity}")
%rest:produces("text/xml;qs=0.8")
%output:method("xml")    
function model2($entity) {
let $this:=$entity:list("entity")
 let $items:=$this?data()
 let $fields:=$this?json
 let $item:=$items[@name=$entity]
 (: just one :)
 return $item

};

(:~ 
 : field list for model 
 :)
declare 
%rest:GET %rest:path("vue-poc/api/data/entity/{$entity}/field")
%output:method("json")    
function field-list($entity) {
    let $dentity:=$entity:list("entity")
    let $items:=$dentity?data()
    let $items:=$items[@name=$entity]/ent:fields/ent:field
    let $fentity:=$entity:list("entity.field")
    return dice:response($items,$fentity,web:dice())
                      
};</xqdoc:body></xqdoc:module><xqdoc:namespaces><xqdoc:namespace prefix="model-rest" uri="quodatum.model.rest"/><xqdoc:namespace prefix="entity" uri="quodatum.models.generated"/><xqdoc:namespace prefix="dice" uri="quodatum.web.dice/v4"/><xqdoc:namespace prefix="web" uri="quodatum.web.utils4"/><xqdoc:namespace prefix="ent" uri="https://github.com/Quodatum/app-doc/entity"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/></xqdoc:namespaces><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>quodatum.models.generated</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:name>model-rest:models</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>return list of entities</xqdoc:description></xqdoc:comment><xqdoc:name>model-list</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">vue-poc/api/data/entity</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">q</xqdoc:literal><xqdoc:literal type="xs:string">{$q}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("vue-poc/api/data/entity") %rest:query-param("q", "{$q}") %output:method("json") function model-list($q as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>q</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function model-list($q) {
 let $entity:=$entity:list("entity")
 let $items:=$entity?data()
 let $items:=if($q)then $items[fn:contains($entity("access")("name")(.),$q)] else $items
 return dice:response($items,$entity,web:dice())
}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>contains</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri><xqdoc:name>dice</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>q</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>q</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>Returns data results</xqdoc:description></xqdoc:comment><xqdoc:name>data</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/data/{$entity}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">q</xqdoc:literal><xqdoc:literal type="xs:string">{$q}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">application/json</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:path("/vue-poc/api/data/{$entity}") %rest:query-param("q", "{$q}") %rest:produces("application/json") %output:method("json") function data($entity as xs:string, $q as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>entity</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>q</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function data($entity as xs:string,$q )   
{
  let $entity:=$entity:list($entity)
  let $items:=$entity("data")()
  
 return dice:response($items,$entity,web:dice())
}</xqdoc:body><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri><xqdoc:name>dice</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>details of the entity $entity</xqdoc:description></xqdoc:comment><xqdoc:name>model</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">vue-poc/api/data/entity/{$entity}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">application/json</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("vue-poc/api/data/entity/{$entity}") %rest:produces("application/json") %output:method("json") function model($entity as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>entity</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function model($entity) {
let $this:=$entity:list("entity")
 let $items:=$this?data()
 let $fields:=$this?json
 let $item:=$items[@name=$entity]
 (: just one :)
 return &lt;json objects="json"&gt;{dice:json-flds($item,$fields)/*}&lt;/json&gt;

}</xqdoc:body><xqdoc:invoked arity="2"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>json-flds</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>fields</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>details of the entity $entity</xqdoc:description></xqdoc:comment><xqdoc:name>model2</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">vue-poc/api/data/entity/{$entity}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">text/xml;qs=0.8</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">xml</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("vue-poc/api/data/entity/{$entity}") %rest:produces("text/xml;qs=0.8") %output:method("xml") function model2($entity as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>entity</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function model2($entity) {
let $this:=$entity:list("entity")
 let $items:=$this?data()
 let $fields:=$this?json
 let $item:=$items[@name=$entity]
 (: just one :)
 return $item

}</xqdoc:body><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>this</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>$</xqdoc:name></xqdoc:ref-variable></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>field list for model</xqdoc:description></xqdoc:comment><xqdoc:name>field-list</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">vue-poc/api/data/entity/{$entity}/field</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("vue-poc/api/data/entity/{$entity}/field") %output:method("json") function field-list($entity as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>entity</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:body>function field-list($entity) {
    let $dentity:=$entity:list("entity")
    let $items:=$dentity?data()
    let $items:=$items[@name=$entity]/ent:fields/ent:field
    let $fentity:=$entity:list("entity.field")
    return dice:response($items,$fentity,web:dice())
                      
}</xqdoc:body><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri><xqdoc:name>dice</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>dentity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>fentity</xqdoc:name></xqdoc:ref-variable></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>