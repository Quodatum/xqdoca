<XQuery><Module><VersionDecl><TOKEN>xquery</TOKEN> <TOKEN>version</TOKEN> <StringLiteral>"3.1"</StringLiteral><TOKEN>;</TOKEN></VersionDecl>
(:~ 
: entity rest interface 
: defines urls below vue-poc/data/entity/
: @author andy bunce
: @since jun 2013
:)

<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>model-rest</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum.model.rest'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>
<Prolog><DefaultNamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>default</TOKEN> <TOKEN>function</TOKEN> <TOKEN>namespace</TOKEN> <StringLiteral>'quodatum.model.rest'</StringLiteral></DefaultNamespaceDecl><TOKEN>;</TOKEN> 

<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>entity</NCName> <TOKEN>=</TOKEN><StringLiteral>'quodatum.models.generated'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../models.gen.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dice</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum.web.dice/v4'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../lib/dice.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN> 
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>web</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum.web.utils4'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../lib/webutils.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<NamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>namespace</TOKEN> <NCName>ent</NCName><TOKEN>=</TOKEN><StringLiteral>"https://github.com/Quodatum/app-doc/entity"</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN> 

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>model-rest:models</QName><TOKEN>:=</TOKEN><RelativePathExpr><FunctionCall><QName>db:open</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"vue-poc"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>//</TOKEN><AxisStep><QName>ent:entity</QName><PredicateList/></AxisStep></RelativePathExpr></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ 
 : return list of entities 
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> 
<Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation> <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"vue-poc/api/data/entity"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"q"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$q}"</StringLiteral><TOKEN>)</TOKEN></Annotation> 
<Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"json"</StringLiteral><TOKEN>)</TOKEN></Annotation>    
<FunctionDecl><TOKEN>function</TOKEN> <QName>model-list</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>q</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
 <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entity</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"entity"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>data</NCName></Lookup><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>q</QName></VarRef><TOKEN>)</TOKEN><TOKEN>then</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>fn:contains</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"access"</StringLiteral><TOKEN>)</TOKEN></ArgumentList><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"name"</StringLiteral><TOKEN>)</TOKEN></ArgumentList><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>q</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr> <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef></IfExpr></LetBinding></LetClause>
 <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>dice:response</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>web:dice</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>


(:~
 : Returns data results
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
<Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/vue-poc/api/data/{$entity}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"q"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$q}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>rest:produces</QName><TOKEN>(</TOKEN><StringLiteral>"application/json"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"json"</StringLiteral><TOKEN>)</TOKEN></Annotation>   
<FunctionDecl><TOKEN>function</TOKEN> <QName>data</QName><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>entity</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN><Param><TOKEN>$</TOKEN><QName>q</QName></Param></ParamList> <TOKEN>)</TOKEN>   
<EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entity</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"data"</StringLiteral><TOKEN>)</TOKEN></ArgumentList><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
  
 <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>dice:response</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>web:dice</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ 
 : details of the entity $entity
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> 
<Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation> <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"vue-poc/api/data/entity/{$entity}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>rest:produces</QName><TOKEN>(</TOKEN><StringLiteral>"application/json"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"json"</StringLiteral><TOKEN>)</TOKEN></Annotation>    
<FunctionDecl><TOKEN>function</TOKEN> <QName>model</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>entity</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>this</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"entity"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>this</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>data</NCName></Lookup><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>fields</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>this</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>json</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>item</TOKEN><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>name</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>=</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
 (: just one :)
 <ReturnClause><TOKEN>return</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>json</QName><DirAttributeList><S> </S><QName>objects</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>j</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>n</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><RelativePathExpr><FunctionCall><QName>dice:json-flds</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><TOKEN>item</TOKEN></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>fields</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard><PredicateList/></AxisStep></RelativePathExpr><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>json</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></ReturnClause></FLWORExpr>

<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ 
 : details of the entity $entity
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> 
<Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation> <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"vue-poc/api/data/entity/{$entity}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>rest:produces</QName><TOKEN>(</TOKEN><StringLiteral>"text/xml;qs=0.8"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"xml"</StringLiteral><TOKEN>)</TOKEN></Annotation>    
<FunctionDecl><TOKEN>function</TOKEN> <QName>model2</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>entity</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>this</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"entity"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>this</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>data</NCName></Lookup><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>fields</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>this</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>json</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
 <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>item</TOKEN><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>name</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>=</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
 (: just one :)
 <ReturnClause><TOKEN>return</TOKEN> <VarRef><TOKEN>$</TOKEN><TOKEN>item</TOKEN></VarRef></ReturnClause></FLWORExpr>

<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ 
 : field list for model 
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> 
<Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation> <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"vue-poc/api/data/entity/{$entity}/field"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"json"</StringLiteral><TOKEN>)</TOKEN></Annotation>    
<FunctionDecl><TOKEN>function</TOKEN> <QName>field-list</QName><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>entity</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>dentity</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"entity"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>dentity</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>data</NCName></Lookup><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>items</QName><TOKEN>:=</TOKEN><RelativePathExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>name</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>=</TOKEN><VarRef><TOKEN>$</TOKEN><QName>entity</QName></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr><TOKEN>/</TOKEN><AxisStep><QName>ent:fields</QName><PredicateList/></AxisStep><TOKEN>/</TOKEN><AxisStep><QName>ent:field</QName>
    <PredicateList/></AxisStep></RelativePathExpr></LetBinding></LetClause><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>fentity</QName><TOKEN>:=</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entity:list</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"entity.field"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>dice:response</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>items</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>fentity</QName></VarRef><TOKEN>,</TOKEN><FunctionCall><QName>web:dice</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
                      
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule></Module><EOF/></XQuery>