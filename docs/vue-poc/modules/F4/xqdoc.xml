<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-06-07T17:23:03.708+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:vue.api.collection</xqdoc:uri><xqdoc:name>collections.xqm</xqdoc:name><xqdoc:comment><xqdoc:description>vue-poc collection api.</xqdoc:description><xqdoc:author>Andy Bunce july-2017</xqdoc:author><xqdoc:custom tag="__source">features/collection/collections.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>(:~
 : vue-poc collection api.
 :
 : @author Andy Bunce july-2017
 :)
module namespace vue-api = 'quodatum:vue.api.collection';
import module namespace rest = "http://exquery.org/ns/restxq";
import module namespace ufile = 'vue-poc/file' at "../../lib/file.xqm";

import module namespace entity = 'quodatum.models.generated' at "../../models.gen.xqm";
import module namespace dice = 'quodatum.web.dice/v4' at "../../lib/dice.xqm";
import module namespace web = 'quodatum.web.utils4' at "../../lib/webutils.xqm";
declare namespace c="http://www.w3.org/ns/xproc-step";

(:~
 : history list 
 :)
declare
%rest:GET %rest:path("/vue-poc/api/history")
%rest:produces("application/json")
%output:method("json")   
function vue-api:history( )   
{
 let $entity:=$entity:list("filehistory")
  let $items:= $entity("data")()
 return dice:response($items,$entity,web:dice())
};

(:~
 : xqdoc list 
 :)
declare
%rest:GET %rest:path("/vue-poc/api/xqdoc")
%rest:produces("application/json")
%output:method("json")   
function vue-api:xqdoc( )   
{
 let $entity:=$entity:list("xqdoc")
  let $items:= $entity("data")()
 return dice:response($items,$entity,web:dice())
};

(:~
 : Returns folder info.
 : @param $url location 
 : @param $protocol 'file' or 'xmldb'
 :)
declare
%rest:GET %rest:path("/vue-poc/api/collection")
%rest:query-param("url", "{$url}")
%rest:query-param("protocol", "{$protocol}","webfile")
%rest:produces("application/json")
%output:method("json")   
function vue-api:file($url as xs:string,$protocol as xs:string)
as element(json)   
{
   let $reader:=map{
              "webfile":ufile:webfile#1,
              "xmldb":ufile:xmldb#1
              }
   let $items:=$reader($protocol=&gt;trace("PROTO"))($url)
   return vue-api:items($items)
};        



declare function vue-api:items($items)
as element(json)
{
   &lt;json type="object" &gt;
              &lt;items type="array"&gt;
              {for $f in $items/*
              order by $f/@name/lower-case(.)
              return &lt;_ type="object"&gt;
               {vue-api:details($f,"folder")}
              &lt;/_&gt;
              }
              &lt;/items&gt;
           &lt;/json&gt;
};
      
declare function vue-api:details($f as element(*),$type as xs:string)
as element(*)*
{
 &lt;name&gt;{$f/@name/string()}&lt;/name&gt;
 ,&lt;type&gt;{if(local-name($f)="file" )then "file" else "folder"}&lt;/type&gt;
 ,&lt;modified&gt;{$f/@last-modified/string()}&lt;/modified&gt;
 ,&lt;size type="number"&gt;{$f/@size/string()}&lt;/size&gt;
 ,&lt;selected type="boolean"&gt;false&lt;/selected&gt;
 ,&lt;mime&gt;{$f/@content-type/string()}&lt;/mime&gt;
};


</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>http://exquery.org/ns/restxq</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>vue-poc/file</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.models.generated</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="vue-api" uri="quodatum:vue.api.collection"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="ufile" uri="vue-poc/file"/><xqdoc:namespace prefix="entity" uri="quodatum.models.generated"/><xqdoc:namespace prefix="dice" uri="quodatum.web.dice/v4"/><xqdoc:namespace prefix="web" uri="quodatum.web.utils4"/><xqdoc:namespace prefix="c" uri="http://www.w3.org/ns/xproc-step"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>history list</xqdoc:description></xqdoc:comment><xqdoc:name>vue-api:history</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/history</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">application/json</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("/vue-poc/api/history") %rest:produces("application/json") %output:method("json") function vue-api:history() as item()*</xqdoc:signature><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri><xqdoc:name>dice</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function vue-api:history( )   
{
 let $entity:=$entity:list("filehistory")
  let $items:= $entity("data")()
 return dice:response($items,$entity,web:dice())
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>xqdoc list</xqdoc:description></xqdoc:comment><xqdoc:name>vue-api:xqdoc</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/xqdoc</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">application/json</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("/vue-poc/api/xqdoc") %rest:produces("application/json") %output:method("json") function vue-api:xqdoc() as item()*</xqdoc:signature><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>quodatum.web.dice/v4</xqdoc:uri><xqdoc:name>response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>quodatum.web.utils4</xqdoc:uri><xqdoc:name>dice</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>quodatum.models.generated</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>entity</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function vue-api:xqdoc( )   
{
 let $entity:=$entity:list("xqdoc")
  let $items:= $entity("data")()
 return dice:response($items,$entity,web:dice())
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>Returns folder info.</xqdoc:description><xqdoc:param>$url location</xqdoc:param><xqdoc:param>$protocol 'file' or 'xmldb'</xqdoc:param></xqdoc:comment><xqdoc:name>vue-api:file</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/collection</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">url</xqdoc:literal><xqdoc:literal type="xs:string">{$url}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">protocol</xqdoc:literal><xqdoc:literal type="xs:string">{$protocol}</xqdoc:literal><xqdoc:literal type="xs:string">webfile</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:produces"><xqdoc:literal type="xs:string">application/json</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:GET %rest:path("/vue-poc/api/collection") %rest:query-param("url", "{$url}") %rest:query-param("protocol", "{$protocol}", "webfile") %rest:produces("application/json") %output:method("json") function vue-api:file($url as xs:string, $protocol as xs:string) as element(json)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>url</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>protocol</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(json)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>quodatum:vue.api.collection</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>trace</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>reader</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>protocol</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>url</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function vue-api:file($url as xs:string,$protocol as xs:string)
as element(json)   
{
   let $reader:=map{
              "webfile":ufile:webfile#1,
              "xmldb":ufile:xmldb#1
              }
   let $items:=$reader($protocol=&gt;trace("PROTO"))($url)
   return vue-api:items($items)
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>vue-api:items</xqdoc:name><xqdoc:signature>declare function vue-api:items($items as item()*) as element(json)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>items</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(json)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>lower-case</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>quodatum:vue.api.collection</xqdoc:uri><xqdoc:name>details</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>items</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function vue-api:items($items)
as element(json)
{
   &lt;json type="object" &gt;
              &lt;items type="array"&gt;
              {for $f in $items/*
              order by $f/@name/lower-case(.)
              return &lt;_ type="object"&gt;
               {vue-api:details($f,"folder")}
              &lt;/_&gt;
              }
              &lt;/items&gt;
           &lt;/json&gt;
}</xqdoc:body></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>vue-api:details</xqdoc:name><xqdoc:signature>declare function vue-api:details($f as element(), $type as xs:string) as element()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>f</xqdoc:name><xqdoc:type>element()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>type</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">element()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>local-name</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>f</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function vue-api:details($f as element(*),$type as xs:string)
as element(*)*
{
 &lt;name&gt;{$f/@name/string()}&lt;/name&gt;
 ,&lt;type&gt;{if(local-name($f)="file" )then "file" else "folder"}&lt;/type&gt;
 ,&lt;modified&gt;{$f/@last-modified/string()}&lt;/modified&gt;
 ,&lt;size type="number"&gt;{$f/@size/string()}&lt;/size&gt;
 ,&lt;selected type="boolean"&gt;false&lt;/selected&gt;
 ,&lt;mime&gt;{$f/@content-type/string()}&lt;/mime&gt;
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>