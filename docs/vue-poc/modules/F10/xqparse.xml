<XQuery>(:~
 : store meta.xml document for all jpgs referenced in doc("/vue-poc/pics.xml")
 : done in batches of 1000
 : @return initial number of missing docs  
:)
<MainModule><Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>cfg</NCName> <TOKEN>=</TOKEN> <StringLiteral>"quodatum:media.image.configure"</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../config.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>imgmeta</NCName> <TOKEN>=</TOKEN> <StringLiteral>"expkg-zone58:image.metadata"</StringLiteral></ModuleImport> <TOKEN>;</TOKEN>
<NamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>namespace</TOKEN> <NCName>c</NCName><TOKEN>=</TOKEN><StringLiteral>"http://www.w3.org/ns/xproc-step"</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dir-uri</QName><TOKEN>:=</TOKEN><StringConstructor><TOKEN>``[</TOKEN><StringConstructorContent><StringConstructorChars/><StringConstructorInterpolation><TOKEN>`{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>cfg:DB-IMAGE</QName></VarRef> <TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars>/pics.xml</StringConstructorChars></StringConstructorContent><TOKEN>]``</TOKEN></StringConstructor></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>doc</QName><TOKEN>:=</TOKEN><FunctionCall><QName>doc</QName><ArgumentList><TOKEN>(</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dir-uri</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>CHUNK</QName><TOKEN>:=</TOKEN><IntegerLiteral>15000</IntegerLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>meta</QName><TOKEN>:=</TOKEN><StringLiteral>"/meta/"</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog>
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>done</QName><TOKEN>:=</TOKEN><FunctionCall><QName>uri-collection</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>cfg:DB-IMAGE</QName></VarRef> <TOKEN>||</TOKEN><VarRef><TOKEN>$</TOKEN><QName>meta</QName></VarRef></StringConcatExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>files</QName><TOKEN>:=</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>doc</QName></VarRef><TOKEN>//</TOKEN><AxisStep><QName>c:file</QName><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>ends-with</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>lower-case</QName><ArgumentList><TOKEN>(</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>name</QName></AbbrevForwardStep><PredicateList/></AxisStep><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN><StringLiteral>".jpg"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></AxisStep></RelativePathExpr></LetBinding></LetClause> 

<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>relpath</QName><TOKEN>:=</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>files</QName></VarRef><TOKEN>!</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN> <ArrowExpr><RelativePathExpr><AxisStep><ReverseStep><ReverseAxis><TOKEN>ancestor-or-self</TOKEN><TOKEN>::</TOKEN></ReverseAxis><Wildcard>*</Wildcard></ReverseStep><PredicateList/></AxisStep><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>name</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr><TOKEN>=&gt;</TOKEN><QName>string-join</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"/"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></ArrowExpr><TOKEN>)</TOKEN></ParenthesizedExpr></RelativePathExpr></LetBinding></LetClause>

<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>todo</QName><TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>relpath</QName></VarRef><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>done</QName></VarRef><TOKEN>=</TOKEN><StringConstructor><TOKEN>``[</TOKEN><StringConstructorContent><StringConstructorChars>/</StringConstructorChars><StringConstructorInterpolation><TOKEN>`{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>cfg:DB-IMAGE</QName></VarRef> <TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars>/meta/</StringConstructorChars><StringConstructorInterpolation><TOKEN>`{</TOKEN> <TOKEN>.</TOKEN> <TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars>/meta.xml</StringConstructorChars></StringConstructorContent><TOKEN>]``</TOKEN></StringConstructor></ComparisonExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
<ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>f</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>subsequence</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>todo</QName></VarRef><TOKEN>,</TOKEN><IntegerLiteral>1</IntegerLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>CHUNK</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>spath</QName><TOKEN>:=</TOKEN><StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>cfg:IMAGEDIR</QName></VarRef> <TOKEN>||</TOKEN> <StringLiteral>"../"</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>f</QName></VarRef></StringConcatExpr></LetBinding></LetClause>
        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>dbpath</QName><TOKEN>:=</TOKEN><StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>meta</QName></VarRef> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>f</QName></VarRef> <TOKEN>||</TOKEN> <StringLiteral>"/meta.xml"</StringLiteral></StringConcatExpr></LetBinding></LetClause>
        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>meta</QName><TOKEN>:=</TOKEN><FunctionCall><QName>imgmeta:read</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>trace</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>spath</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
        <ReturnClause><TOKEN>return</TOKEN>  <FunctionCall><QName>db:replace</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>cfg:DB-IMAGE</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>dbpath</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>meta</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
        <FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><ArrowExpr><VarRef><TOKEN>$</TOKEN><QName>todo</QName></VarRef><TOKEN>=&gt;</TOKEN><TOKEN>count</TOKEN><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></ArrowExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></MainModule><EOF/></XQuery>