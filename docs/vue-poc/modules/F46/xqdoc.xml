<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2019-06-01T11:02:48.049+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>quodatum:vue.api.transform</xqdoc:uri><xqdoc:name>rq-xslt.xqm</xqdoc:name><xqdoc:comment><xqdoc:description>basex web system info</xqdoc:description><xqdoc:author>andy bunce</xqdoc:author><xqdoc:since>oct 2012</xqdoc:since><xqdoc:custom tag="__source">features/xslt/rq-xslt.xqm</xqdoc:custom></xqdoc:comment><xqdoc:body>(:~ 
: basex web system info
: @author andy bunce
: @since oct 2012
:)

module namespace tx = 'quodatum:vue.api.transform';

(:~
 : xslt
 :)
declare 
%rest:POST %rest:path("/vue-poc/api/xslt")
%rest:query-param("xml", "{$xml}") 
%rest:query-param("xslt", "{$xslt}")   
%output:method("json")  
function tx:xslt($xml,$xslt) {

   let $result:=try{
                let $x:=fn:parse-xml($xml)
                let $s:=fn:parse-xml($xslt)
                 let $params:=map{}
                 let $opts:=map{"cache":false()} (: BUG? :)
                let $r:=xslt:transform-text($x,$s,$params,$opts)
                return 
                &lt;json objects="json"&gt;
                   &lt;rc&gt;0&lt;/rc&gt;
                   &lt;result&gt;{$r}&lt;/result&gt;
                &lt;/json&gt;
                } 
                catch *{
                 &lt;json objects="json"&gt;
                   &lt;rc&gt;1&lt;/rc&gt;
                   &lt;info&gt;{$err:description}&lt;/info&gt;
                &lt;/json&gt;
                }
   return $result
};</xqdoc:body></xqdoc:module><xqdoc:imports/><xqdoc:namespaces><xqdoc:namespace prefix="tx" uri="quodatum:vue.api.transform"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>xslt</xqdoc:description></xqdoc:comment><xqdoc:name>tx:xslt</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:POST"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/vue-poc/api/xslt</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">xml</xqdoc:literal><xqdoc:literal type="xs:string">{$xml}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">xslt</xqdoc:literal><xqdoc:literal type="xs:string">{$xslt}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">json</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>declare %rest:POST %rest:path("/vue-poc/api/xslt") %rest:query-param("xml", "{$xml}") %rest:query-param("xslt", "{$xslt}") %output:method("json") function tx:xslt($xml as item()*, $xslt as item()*) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>xml</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>xslt</xqdoc:name><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>parse-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>parse-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://basex.org/modules/xslt</xqdoc:uri><xqdoc:name>transform-text</xqdoc:name></xqdoc:invoked><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>xml</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>xslt</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>x</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>s</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>params</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>opts</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>r</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xqt-errors</xqdoc:uri><xqdoc:name>description</xqdoc:name></xqdoc:ref-variable><xqdoc:ref-variable><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>result</xqdoc:name></xqdoc:ref-variable><xqdoc:body>function tx:xslt($xml,$xslt) {

   let $result:=try{
                let $x:=fn:parse-xml($xml)
                let $s:=fn:parse-xml($xslt)
                 let $params:=map{}
                 let $opts:=map{"cache":false()} (: BUG? :)
                let $r:=xslt:transform-text($x,$s,$params,$opts)
                return 
                &lt;json objects="json"&gt;
                   &lt;rc&gt;0&lt;/rc&gt;
                   &lt;result&gt;{$r}&lt;/result&gt;
                &lt;/json&gt;
                } 
                catch *{
                 &lt;json objects="json"&gt;
                   &lt;rc&gt;1&lt;/rc&gt;
                   &lt;info&gt;{$err:description}&lt;/info&gt;
                &lt;/json&gt;
                }
   return $result
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>