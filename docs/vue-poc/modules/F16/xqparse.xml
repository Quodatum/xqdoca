<XQuery>(:~  save in multiple formats  :)

<MainModule><Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>t</NCName><TOKEN>=</TOKEN><StringLiteral>"expkg-zone58:image.thumbnailator"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

<NamespaceDecl><TOKEN>declare</TOKEN>  <TOKEN>namespace</TOKEN> <NCName>cfg</NCName> <TOKEN>=</TOKEN> <StringLiteral>"quodatum:media.image.configure"</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>cfg:IMAGEDIR</QName><TOKEN>:=</TOKEN><StringLiteral>"P:/pictures/"</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog>

<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>types</QName><TOKEN>:=</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><StringLiteral>"gif"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"jpg"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"png"</StringLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
<ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>type</QName> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>types</QName></VarRef></ForBinding></ForClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>task</QName><TOKEN>:=</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>thumbnail</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>size</QName><DirAttributeList><S> </S><QName>width</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>1</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>height</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>1</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><QuotAttrContentChar>0</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>output</QName><DirAttributeList><S> </S><QName>format</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar> </ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>thumbnail</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>thumb</QName><TOKEN>:=</TOKEN> <ArrowExpr><FunctionCall><QName>file:resolve-path</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"Pictures/2002/05 may/2005/DSCF1313.JPG"</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>cfg:IMAGEDIR</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>=&gt;</TOKEN><QName>fetch:binary</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList>
<TOKEN>=&gt;</TOKEN><QName>t:task</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>task</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></ArrowExpr></LetBinding></LetClause>
<ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>file:write-binary</QName><ArgumentList><TOKEN>(</TOKEN><StringConstructor><TOKEN>``[</TOKEN><StringConstructorContent><StringConstructorChars>c:\tmp\thumb.</StringConstructorChars><StringConstructorInterpolation><TOKEN>`{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef><TOKEN>}`</TOKEN></StringConstructorInterpolation><StringConstructorChars/></StringConstructorContent><TOKEN>]``</TOKEN></StringConstructor><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>thumb</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr></MainModule><EOF/></XQuery>