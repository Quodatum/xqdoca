<XQuery>(:~
 : Generate html for for XQuery sources
 : @return info about the run (json format)
 :)
<MainModule><Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>fw</NCName><TOKEN>=</TOKEN><StringLiteral>"quodatum:file.walker"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>xqd</NCName> <TOKEN>=</TOKEN> <StringLiteral>'quodatum:build.xqdoc'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>"../../../lib/xqdoc/xqdoc-proj.xqm"</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<NamespaceDecl><TOKEN>declare</TOKEN> <TOKEN>namespace</TOKEN> <NCName>c</NCName><TOKEN>=</TOKEN><StringLiteral>"http://www.w3.org/ns/xproc-step"</StringLiteral></NamespaceDecl><TOKEN>;</TOKEN>
 
(:~ URL of the root folder to document
 : @default C:/Users/andy/git/vue-poc/src/vue-poc
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>efolder</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:anyURI</QName></TypeDeclaration>  <TOKEN>external</TOKEN> <TOKEN>:=</TOKEN>
<FunctionCall><QName>xs:anyURI</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"C:/Users/andy/git/vue-poc/src/vue-poc"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ file URL root folder for saving results
 : @default C:/tmp/xqdoc/
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>target</QName> <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:anyURI</QName></TypeDeclaration> <TOKEN>external</TOKEN> <TOKEN>:=</TOKEN>
<FunctionCall><QName>xs:anyURI</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"C:/tmp/xqdoc/"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>state</QName> <TypeDeclaration><TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>state</QName><TOKEN>)</TOKEN></ElementTest></TypeDeclaration><TOKEN>:=</TOKEN><RelativePathExpr><FunctionCall><QName>db:open</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"vue-poc"</StringLiteral><TOKEN>,</TOKEN><StringLiteral>"/state.xml"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><QName>state</QName><PredicateList/></AxisStep></RelativePathExpr></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog>
                                 
<FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>project</QName><TOKEN>:=</TOKEN><ArrowExpr><PostfixExpr><FunctionCall><QName>tokenize</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>efolder</QName></VarRef><TOKEN>,</TOKEN><StringLiteral>"[/\\]"</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>last</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr><TOKEN>=&gt;</TOKEN><QName>trace</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>"xqdoc: "</StringLiteral><TOKEN>)</TOKEN></ArgumentList></ArrowExpr></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>files</QName><TOKEN>:=</TOKEN> <FunctionCall><QName>fw:directory-list</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>efolder</QName></VarRef><TOKEN>,</TOKEN><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN><MapConstructorEntry><StringLiteral>"include-filter"</StringLiteral><TOKEN>:</TOKEN><StringLiteral>".*\.xqm"</StringLiteral></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>id</QName><TOKEN>:=</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>/</TOKEN><AxisStep><QName>last-id</QName>
<PredicateList/></AxisStep></RelativePathExpr></LetBinding></LetClause><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>opts</QName><TOKEN>:=</TOKEN><MapConstructor><TOKEN>map</TOKEN><TOKEN>{</TOKEN>
               <MapConstructorEntry><StringLiteral>"src-folder"</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>efolder</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> 
               <MapConstructorEntry><StringLiteral>"project"</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>project</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> 
               <MapConstructorEntry><StringLiteral>"ext-id"</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></MapConstructorEntry>
               <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>op</QName><TOKEN>:=</TOKEN><FunctionCall><QName>xqd:save-xq</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>files</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>,</TOKEN><VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
<LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>result</QName><TOKEN>:=</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>json</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>b</QuotAttrContentChar><QuotAttrContentChar>j</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><QuotAttrContentChar>c</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>extra</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>h</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>2</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>extra</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>msg</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>,</ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN><FunctionCall><TOKEN>count</TOKEN><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>files</QName></VarRef><TOKEN>//</TOKEN><AxisStep><QName>c:file</QName><PredicateList/></AxisStep></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar> </ElementContentChar><ElementContentChar>f</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>p</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>.</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>msg</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>id</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr><TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>id</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>json</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></LetBinding></LetClause>
<ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
       <Expr><FunctionCall><QName>update:output</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>result</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
       <ReplaceExpr><TOKEN>replace</TOKEN> <TOKEN>value</TOKEN> <TOKEN>of</TOKEN> <TOKEN>node</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef> <TOKEN>with</TOKEN> <AdditiveExpr><IntegerLiteral>1</IntegerLiteral><TOKEN>+</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>state</QName></VarRef><TOKEN>/</TOKEN><AxisStep><QName>last-id</QName>
       <PredicateList/></AxisStep></RelativePathExpr></AdditiveExpr></ReplaceExpr></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></MainModule>
<EOF/></XQuery>