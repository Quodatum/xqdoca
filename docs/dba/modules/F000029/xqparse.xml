<XQuery>(:~
 : HTML components.
 :
 : @author Christian Grün, BaseX Team 2005-21, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>html</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/html'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>options</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/options'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'options.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>config</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/config'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'config.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>util</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/util'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'util.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(: Number formats. :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>html:NUMBER</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><StringLiteral>'decimal'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'number'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'bytes'</StringLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Extends the specified table rows with the page template.
 : @param  $rows  tr elements
 : @return HTML page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:wrap</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>rows</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>tr</QName><TOKEN>)</TOKEN></ElementTest><TOKEN>+</TOKEN></SequenceType></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>html</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:wrap</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>rows</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Extends the specified table rows with the page template.
 : The following options can be specified:
 : &lt;ul&gt;
 :   &lt;li&gt;&lt;b&gt;header&lt;/b&gt;: page headers&lt;/li&gt;
 :   &lt;li&gt;&lt;b&gt;error&lt;/b&gt;: error string&lt;/li&gt;
 :   &lt;li&gt;&lt;b&gt;css&lt;/b&gt;: CSS files&lt;/li&gt;
 :   &lt;li&gt;&lt;b&gt;scripts&lt;/b&gt;: JavaScript files&lt;/li&gt;
 : &lt;/ul&gt;
 : @param  $options  options
 : @param  $rows     tr elements
 : @return page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:wrap</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>options</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>rows</QName>     <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>tr</QName><TOKEN>)</TOKEN></ElementTest><TOKEN>+</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>html</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>header</QName> <TOKEN>:=</TOKEN> <RelativePathExpr><FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>header</NCName></Lookup></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>!</TOKEN> <FunctionCall><QName>util:capitalize</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>user</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>session:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>html</QName><DirAttributeList><S> </S><QName>xml:space</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>head</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>meta</QName><DirAttributeList><S> </S><QName>charset</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>-</AposAttrContentChar><AposAttrContentChar>8</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>title</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>D</ElementContentChar><ElementContentChar>B</ElementContentChar><ElementContentChar>A</ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN> <RelativePathExpr><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>tail</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>header</NCName></Lookup></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>!</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>' » '</StringLiteral> <TOKEN>||</TOKEN> <TOKEN>.</TOKEN></StringConcatExpr><TOKEN>)</TOKEN></ParenthesizedExpr></RelativePathExpr> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>title</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>meta</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>content</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>D</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>A</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>meta</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>content</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>B</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>X</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>T</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>2</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>5</AposAttrContentChar><AposAttrContentChar>-</AposAttrContentChar><AposAttrContentChar>2</AposAttrContentChar><AposAttrContentChar>1</AposAttrContentChar><AposAttrContentChar>,</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>B</AposAttrContentChar><AposAttrContentChar>S</AposAttrContentChar><AposAttrContentChar>D</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>L</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>link</QName><DirAttributeList><S> </S><QName>rel</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>y</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>y</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>.</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN> <RelativePathExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>css</NCName></Lookup></PostfixExpr> <TOKEN>!</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>link</QName><DirAttributeList><S> </S><QName>rel</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>y</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><EnclosedExpr><TOKEN>{</TOKEN> <TOKEN>.</TOKEN> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor></RelativePathExpr> <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>script</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>j</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>src</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>j</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>.</AposAttrContentChar><AposAttrContentChar>j</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN> <RelativePathExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>scripts</NCName></Lookup></PostfixExpr> <TOKEN>!</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>script</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>j</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>src</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><EnclosedExpr><TOKEN>{</TOKEN> <TOKEN>.</TOKEN> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor></RelativePathExpr> <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>head</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>body</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>table</QName><DirAttributeList><S> </S><QName>cellpadding</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>cellspacing</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>table</QName><DirAttributeList><S> </S><QName>width</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>1</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>%</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>cellpadding</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>cellspacing</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
                  <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>span</QName><DirAttributeList><S> </S><QName>style</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>:</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h1</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>B</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>X</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>D</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>b</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>A</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>m</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>n</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>h1</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>span</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
                  <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>span</QName><DirAttributeList><S> </S><QName>style</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>:</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar> </ElementContentChar><ElementContentChar>(</ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>a</QName><DirAttributeList><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>l</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>g</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>u</ElementContentChar><ElementContentChar>t</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>a</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>)</ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>span</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
                  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></Expr>
                <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
                    <Expr><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                      <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>cats</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                        <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>cat</QName> <TOKEN>in</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><StringLiteral>'Logs'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Databases'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Queries'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Files'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Jobs'</StringLiteral><TOKEN>,</TOKEN>
                          <StringLiteral>'Users'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Sessions'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Settings'</StringLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ForBinding></ForClause>
                        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>link</QName> <TOKEN>:=</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>a</QName><DirAttributeList><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>lower-case</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>cat</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>cat</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>a</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></LetBinding></LetClause>
                        <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                          <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
                        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                          <VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef>
                        <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></ReturnClause></FLWORExpr>
                      <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
                      <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                        <Expr><FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>cats</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
                        <RelativePathExpr><FunctionCall><QName>tail</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>cats</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>!</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><StringLiteral>' · '</StringLiteral><TOKEN>,</TOKEN> <TOKEN>.</TOKEN></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></RelativePathExpr><TOKEN>,</TOKEN>
                        <RelativePathExpr><ParenthesizedExpr><TOKEN>(</TOKEN><RangeExpr><IntegerLiteral>1</IntegerLiteral> <TOKEN>to</TOKEN> <IntegerLiteral>3</IntegerLiteral></RangeExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>!</TOKEN> <StringLiteral>'&amp;#x2000;'</StringLiteral></RelativePathExpr></Expr>
                      <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr>
                    <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                      <DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>P</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>y</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>u</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>m</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>l</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>:</ElementContentChar><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><TOKEN>div</TOKEN><TOKEN>&gt;</TOKEN></DirElemConstructor>
                    <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>
                    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>span</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
                      <CompElemConstructor><TOKEN>element</TOKEN> <QName>b</QName> <EnclosedExpr><TOKEN>{</TOKEN>
                        <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>id</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'info'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>
                        <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>error</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>error</NCName></Lookup><Predicate><TOKEN>[</TOKEN><TOKEN>.</TOKEN><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding><TOKEN>,</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>info</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>info</NCName></Lookup><Predicate><TOKEN>[</TOKEN><TOKEN>.</TOKEN><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
                        <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                          <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>class</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'error'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></Expr>
                        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>info</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
                          <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>class</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'info'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>info</QName></VarRef></Expr>
                        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr></ReturnClause></FLWORExpr></Expr>
                      <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor>
                    <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>span</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></Expr>
                  <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><TOKEN>div</TOKEN><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>hr</QName><DirAttributeList/><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>table</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>a</QName><DirAttributeList><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>/</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>img</QName><DirAttributeList><S> </S><QName>src</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>.</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>&lt;/</TOKEN><QName>a</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>table</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>table</QName><DirAttributeList><S> </S><QName>width</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>1</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>%</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>rows</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>table</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>hr</QName><DirAttributeList/><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>sup</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>B</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>X</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>T</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>m</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>2</ElementContentChar><ElementContentChar>0</ElementContentChar><ElementContentChar>0</ElementContentChar><ElementContentChar>5</ElementContentChar><ElementContentChar>-</ElementContentChar><ElementContentChar>2</ElementContentChar><ElementContentChar>1</ElementContentChar><ElementContentChar>,</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>B</ElementContentChar><ElementContentChar>S</ElementContentChar><ElementContentChar>D</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>L</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>c</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>sup</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>&lt;/</TOKEN><TOKEN>div</TOKEN><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>html:js</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'buttons();'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>body</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>html</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates an option checkbox.
 : @param  $value  value
 : @param  $label  label
 : @param  $opts   checked options
 : @return checkbox
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:option</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>value</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>label</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>opts</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest><TOKEN>+</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:checkbox</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'opts'</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>,</TOKEN> <ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>opts</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef></ComparisonExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a checkbox.
 : @param  $name     name of checkbox
 : @param  $value    value
 : @param  $checked  checked state
 : @param  $label    label
 : @return checkbox
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:checkbox</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>     <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>value</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>checked</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:boolean</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>label</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest><TOKEN>+</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:checkbox</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN>
    <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN>  <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'value'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>checked</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'checked'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>checked</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a checkbox.
 : @param  $label  label of checkbox
 : @param  $map    additional attributes
 : @return checkbox
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:checkbox</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>label</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>map</QName>     <TypeDeclaration><TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><AnyKindTest><TOKEN>node</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></AnyKindTest><TOKEN>+</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  <Expr><CompElemConstructor><TOKEN>element</TOKEN> <QName>input</QName> <EnclosedExpr><TOKEN>{</TOKEN>
    <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>type</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'checkbox'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>
    <FunctionCall><QName>map:for-each</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>map</QName></VarRef><TOKEN>,</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>key</QName></Param><TOKEN>,</TOKEN> <Param><TOKEN>$</TOKEN><QName>value</QName></Param></ParamList><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <CompAttrConstructor><TOKEN>attribute</TOKEN> <TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>key</QName></VarRef> <TOKEN>}</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
  <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor><TOKEN>,</TOKEN>
  <CompTextConstructor><TOKEN>text</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompTextConstructor><TOKEN>,</TOKEN>
  <CompElemConstructor><TOKEN>element</TOKEN> <QName>br</QName> <EnclosedExpr><TOKEN>{</TOKEN> <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a button.
 : @param  $value  button value
 : @param  $label  label
 : @return button
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:button</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>value</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>label</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>button</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>false</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a button.
 : @param  $value    button value
 : @param  $label    label
 : @param  $confirm  confirm click
 : @return button
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:button</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>value</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>label</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>confirm</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:boolean</QName></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>button</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>confirm</QName></VarRef><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a button.
 : @param  $value    button value
 : @param  $label    label
 : @param  $confirm  confirm click
 : @param  $atts     additional attributes
 : @return button
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:button</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>value</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>label</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>confirm</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:boolean</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>atts</QName>     <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><TypedMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><QName>xs:string</QName><TOKEN>,</TOKEN> <QName>xs:string</QName><TOKEN>)</TOKEN></TypedMapTest><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>button</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <CompElemConstructor><TOKEN>element</TOKEN> <QName>button</QName> <EnclosedExpr><TOKEN>{</TOKEN>
    <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>name</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'action'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>
    <CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>value</QName> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>
    <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>confirm</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>onclick</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'return confirm("Are you sure?");'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor>
    <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>
    <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>atts</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <FunctionCall><QName>map:for-each</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>atts</QName></VarRef><TOKEN>,</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>key</QName></Param><TOKEN>,</TOKEN> <Param><TOKEN>$</TOKEN><QName>value</QName></Param></ParamList><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <CompAttrConstructor><TOKEN>attribute</TOKEN> <TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>key</QName></VarRef> <TOKEN>}</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
    <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>
    <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef></Expr>
  <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a property list.
 : @param  $props  properties
 : @return table
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:properties</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>props</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ElementTest></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>table</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>table</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>header</QName> <TOKEN>in</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>props</QName></VarRef><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard>
    <PredicateList/></AxisStep></RelativePathExpr></ForBinding></ForClause><ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>th</QName><DirAttributeList><S> </S><QName>colspan</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>2</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>align</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h3</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>upper-case</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>name</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>h3</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>th</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
      <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>option</QName> <TOKEN>in</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard>
      <PredicateList/></AxisStep></RelativePathExpr></ForBinding></ForClause><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>value</QName> <TOKEN>:=</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>option</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>data</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr></LetBinding></LetClause>
      <ReturnClause><TOKEN>return</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>upper-case</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>option</QName></VarRef><TOKEN>/</TOKEN><FunctionCall><QName>name</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
          <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'true'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'✓'</StringLiteral>
          <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'false'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'–'</StringLiteral>
          <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef></IfExpr></IfExpr>
        <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></ReturnClause></FLWORExpr></Expr>
    <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr>
  <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>table</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a table for the specified entries.
 : * The table format is specified by the table headers:
 :   * The element names serve as column keys.
 :   * The string values are the header labels.
 :   * The 'type' attribute defines how the values are formatted and sorted:
 :     * 'number': sorted as numbers
 :     * 'decimal': sorted as numbers, output with two decimal digits
 :     * 'bytes': sorted as numbers, output in a human-readable format
 :     * 'date', 'dateTime', 'time': sorted and output as dates
 :     * 'dynamic': function generating dynamic input; sorted as strings
 :     * 'id': suppressed (only used for creating checkboxes)
 :     * otherwise, sorted and output as strings
 :   * The 'order' attribute defines how sorted values will be ordered:
 :     * 'desc': descending order
 :     * otherwise, ascending order
 :   * The 'main' attribute indicates which column is the main column
 : * The supplied table rows are supplied as elements. Values are contained in attributes; their
 :   names represents the column key.
 : * Supplied buttons will placed on top of the table.
 : * Query parameters will be included in table links.
 : * The options argument can have the following keys:
 :   * 'sort': key of the ordered column. if empty, sorting will be disabled
 :   * 'presort': key of pre-sorted column. if identical to sort, entries will not be resorted
 :   * 'link': function for generating a link reference.
 :   * 'page': currently displayed page
 :   * 'count': maximum number of results
 :
 : @param  $headers  table headers
 : @param  $entries  table entries
 : @param  $buttons  buttons
 : @param  $params   additional query parameters
 : @param  $options  additional options
 : @return table
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:table</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>headers</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>entries</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>buttons</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>button</QName><TOKEN>)</TOKEN></ElementTest><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>params</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>options</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ElementTest><TOKEN>+</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  (: display buttons :)
  <Expr><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <Expr><FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>button</QName> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef></ForBinding></ForClause>
    <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>button</QName></VarRef><TOKEN>,</TOKEN> <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>span</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>span</QName><TOKEN>&gt;</TOKEN></DirElemConstructor></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>br</QName><DirAttributeList/><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>

  (: sort entries :)
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>sort</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort-key</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef><Predicate><TOKEN>[</TOKEN><TOKEN>.</TOKEN><TOKEN>]</TOKEN></Predicate></PostfixExpr><TOKEN>,</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><Predicate><TOKEN>[</TOKEN><IntegerLiteral>1</IntegerLiteral><TOKEN>]</TOKEN></Predicate><Lookup><TOKEN>?</TOKEN><NCName>key</NCName></Lookup></PostfixExpr></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sorted-entries</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><AndExpr><VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>sort-key</QName></VarRef> <TOKEN>=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>presort</NCName></Lookup></PostfixExpr></ComparisonExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort-header</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><UnaryLookup><TOKEN>?</TOKEN><NCName>key</NCName></UnaryLookup> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort-key</QName></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort-value</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort-desc</QName> <TOKEN>:=</TOKEN> <ComparisonExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>sort-header</QName></VarRef><Lookup><TOKEN>?</TOKEN><TOKEN>order</TOKEN></Lookup></PostfixExpr> <TOKEN>=</TOKEN> <StringLiteral>'desc'</StringLiteral></ComparisonExpr></LetBinding></LetClause>
      <ReturnClause><TOKEN>return</TOKEN> <SwitchExpr><TOKEN>switch</TOKEN><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>sort-header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>type</NCName></Lookup></PostfixExpr><TOKEN>)</TOKEN>
        <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>'decimal'</StringLiteral> <TOKEN>case</TOKEN> <StringLiteral>'number'</StringLiteral> <TOKEN>case</TOKEN> <StringLiteral>'bytes'</StringLiteral> <TOKEN>return</TOKEN>
          <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort-desc</QName></VarRef><TOKEN>)</TOKEN>
          <TOKEN>then</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <AdditiveExpr><IntegerLiteral>0</IntegerLiteral> <TOKEN>-</TOKEN> <FunctionCall><QName>number</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AdditiveExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr>
          <TOKEN>else</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>number</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></IfExpr></SwitchCaseClause>
        <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>'time'</StringLiteral> <TOKEN>return</TOKEN>
          <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort-desc</QName></VarRef><TOKEN>)</TOKEN>
          <TOKEN>then</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <AdditiveExpr><FunctionCall><QName>xs:time</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'00:00:00'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>-</TOKEN> <FunctionCall><QName>xs:time</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AdditiveExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr>
          <TOKEN>else</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></IfExpr></SwitchCaseClause>
        <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>'date'</StringLiteral> <TOKEN>return</TOKEN>
          <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort-desc</QName></VarRef><TOKEN>)</TOKEN>
          <TOKEN>then</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <AdditiveExpr><FunctionCall><QName>xs:date</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'0001-01-01'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>-</TOKEN> <FunctionCall><QName>xs:date</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AdditiveExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr>
          <TOKEN>else</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></IfExpr></SwitchCaseClause>
        <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>'dateTime'</StringLiteral> <TOKEN>return</TOKEN>
          <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort-desc</QName></VarRef><TOKEN>)</TOKEN>
          <TOKEN>then</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <AdditiveExpr><FunctionCall><QName>xs:dateTime</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'0001-01-01T00:00:00Z'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>-</TOKEN> <FunctionCall><QName>xs:dateTime</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AdditiveExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr>
          <TOKEN>else</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></IfExpr></SwitchCaseClause>
        <SwitchCaseClause><TOKEN>case</TOKEN> <StringLiteral>'dynamic'</StringLiteral> <TOKEN>return</TOKEN>
          <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><InstanceofExpr><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>instance</TOKEN> <TOKEN>of</TOKEN> <AnyFunctionTest><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyFunctionTest></InstanceofExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <FunctionCall><QName>string-join</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef></IfExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></SwitchCaseClause>
        <TOKEN>default</TOKEN> <TOKEN>return</TOKEN>
          <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><Param><TOKEN>$</TOKEN><QName>v</QName></Param><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></SwitchExpr></ReturnClause></FLWORExpr>
    <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
    <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>entry</QName> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef></ForBinding></ForClause>
    <OrderByClause><TOKEN>order</TOKEN> <TOKEN>by</TOKEN> <OrderSpec><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>sort-value</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort-key</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></PostfixExpr> <OrderModifier><TOKEN>empty</TOKEN> <TOKEN>greatest</TOKEN> <TOKEN>collation</TOKEN> <StringLiteral>'?lang=en'</StringLiteral></OrderModifier></OrderSpec></OrderByClause>
    <ReturnClause><TOKEN>return</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef></ReturnClause></FLWORExpr>
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef>
  <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></LetBinding></LetClause>

  (: show results :)
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>count</TOKEN> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><TOKEN>count</TOKEN></Lookup></PostfixExpr></IfExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>page</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>page</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>max</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>options:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>options:MAXROWS</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>start</TOKEN> <TOKEN>:=</TOKEN> <FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><AdditiveExpr><MultiplicativeExpr><ParenthesizedExpr><TOKEN>(</TOKEN><AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>-</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>*</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef></MultiplicativeExpr> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>,</TOKEN> <IntegerLiteral>1</IntegerLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    (: result summary :)
    <Expr><FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>count</TOKEN> <TOKEN>:=</TOKEN> <FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef><TOKEN>,</TOKEN> <FunctionCall><TOKEN>count</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sorted-entries</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>single-page</QName> <TOKEN>:=</TOKEN> <OrExpr><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>or</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><AndExpr><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr> <TOKEN>and</TOKEN> <ComparisonExpr><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef> <TOKEN>&lt;</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><TOKEN>start</TOKEN></VarRef> <TOKEN>+</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef></AdditiveExpr></ComparisonExpr></AndExpr><TOKEN>)</TOKEN></ParenthesizedExpr></OrExpr></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>h4</QName> <EnclosedExpr><TOKEN>{</TOKEN>
      <Expr><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef><TOKEN>,</TOKEN>
      <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef> <TOKEN>=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>' Entry'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>'Entries'</StringLiteral></IfExpr><TOKEN>,</TOKEN>

      <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>single-page</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
        <Expr><StringLiteral>'(Page: '</StringLiteral><TOKEN>,</TOKEN>
        <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>last</QName> <TOKEN>:=</TOKEN> <AdditiveExpr><MultiplicativeExpr><ParenthesizedExpr><TOKEN>(</TOKEN><AdditiveExpr><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef> <TOKEN>-</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>idiv</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef></MultiplicativeExpr> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr></LetBinding></LetClause>
        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>pages</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>sort</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><FunctionCall><QName>distinct-values</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN>
          <Expr><IntegerLiteral>1</IntegerLiteral><TOKEN>,</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>-</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><MultiplicativeExpr><VarRef><TOKEN>$</TOKEN><QName>last</QName></VarRef> <TOKEN>idiv</TOKEN> <IntegerLiteral>10</IntegerLiteral></MultiplicativeExpr><TOKEN>)</TOKEN></ParenthesizedExpr></AdditiveExpr><TOKEN>,</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>-</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>,</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>,</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>+</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><MultiplicativeExpr><VarRef><TOKEN>$</TOKEN><QName>last</QName></VarRef> <TOKEN>idiv</TOKEN> <IntegerLiteral>10</IntegerLiteral></MultiplicativeExpr><TOKEN>)</TOKEN></ParenthesizedExpr></AdditiveExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>last</QName></VarRef></Expr>
        <TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><AndExpr><ComparisonExpr><TOKEN>.</TOKEN> <TOKEN>&gt;=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr> <TOKEN>and</TOKEN> <ComparisonExpr><TOKEN>.</TOKEN> <TOKEN>&lt;=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>last</QName></VarRef></ComparisonExpr></AndExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
        <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>p</QName> <PositionalVar><TOKEN>at</TOKEN> <TOKEN>$</TOKEN><QName>pos</QName></PositionalVar> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>pages</QName></VarRef></ForBinding></ForClause>
        <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>suffix</QName> <TOKEN>:=</TOKEN> <StringConcatExpr><ParenthesizedExpr><TOKEN>(</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>last</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>')'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>' '</StringLiteral></IfExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>||</TOKEN>
          <ParenthesizedExpr><TOKEN>(</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>pages</QName></VarRef><Predicate><TOKEN>[</TOKEN><AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>pos</QName></VarRef> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr> <TOKEN>&gt;</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>' … '</StringLiteral> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>)</TOKEN></ParenthesizedExpr></StringConcatExpr></LetBinding></LetClause>
        <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
          <IfExpr><TOKEN>if</TOKEN> <TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>suffix</QName></VarRef></StringConcatExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
            <Expr><FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <StringLiteral>''</StringLiteral><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>p</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>suffix</QName></VarRef></Expr>
          <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr>
        <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></Expr>
      <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></Expr>
    <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>

    (: list of results :)
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>shown-entries</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <VarRef><TOKEN>$</TOKEN><QName>sorted-entries</QName></VarRef>
    <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>sorted-entries</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><FunctionCall><QName>position</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>&gt;=</TOKEN> <VarRef><TOKEN>$</TOKEN><TOKEN>start</TOKEN></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate><Predicate><TOKEN>[</TOKEN><ComparisonExpr><FunctionCall><QName>position</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>&lt;=</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr>
    <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><TOKEN>empty</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>shown-entries</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <CompElemConstructor><TOKEN>element</TOKEN> <QName>table</QName> <EnclosedExpr><TOKEN>{</TOKEN>
        <Expr><CompElemConstructor><TOKEN>element</TOKEN> <QName>tr</QName> <EnclosedExpr><TOKEN>{</TOKEN>
          <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>header</QName> <PositionalVar><TOKEN>at</TOKEN> <TOKEN>$</TOKEN><QName>pos</QName></PositionalVar> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef></ForBinding></ForClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>name</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>key</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>label</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>upper-case</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>label</NCName></Lookup></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
          <ReturnClause><TOKEN>return</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>th</QName> <EnclosedExpr><TOKEN>{</TOKEN>
            <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>align</QName> <EnclosedExpr><TOKEN>{</TOKEN>
              <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>type</NCName></Lookup></PostfixExpr> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>html:NUMBER</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'right'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>'left'</StringLiteral></IfExpr>
            <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>

            <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><AndExpr><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>pos</QName></VarRef> <TOKEN>=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr> <TOKEN>and</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef></AndExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>onclick</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN> <StringLiteral>' '</StringLiteral></Expr>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>

            <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>type</NCName></Lookup></PostfixExpr> <TOKEN>=</TOKEN> <StringLiteral>'id'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              (: id columns: empty header column :)
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><OrExpr><FunctionCall><TOKEN>empty</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>or</TOKEN> <ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></ComparisonExpr></OrExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              (: sorted column, xml column: only display label :)
              <VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              (: generate sort link :)
              <FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>label</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>''</StringLiteral><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr></Expr>
          <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor></ReturnClause></FLWORExpr>
        <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor><TOKEN>,</TOKEN>

        <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>link</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>link</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
        <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>entry</QName> <TOKEN>in</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>shown-entries</QName></VarRef><Predicate><TOKEN>[</TOKEN><ComparisonExpr><FunctionCall><QName>position</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>&lt;=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></ForBinding></ForClause>
        <ReturnClause><TOKEN>return</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>tr</QName> <EnclosedExpr><TOKEN>{</TOKEN>
          <Expr><RelativePathExpr><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>id</NCName></Lookup></PostfixExpr> <TOKEN>!</TOKEN> <CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>id</QName> <EnclosedExpr><TOKEN>{</TOKEN> <TOKEN>.</TOKEN> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor></RelativePathExpr><TOKEN>,</TOKEN>
          <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>header</QName> <PositionalVar><TOKEN>at</TOKEN> <TOKEN>$</TOKEN><QName>pos</QName></PositionalVar> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef></ForBinding></ForClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>name</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>key</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>type</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>header</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>type</NCName></Lookup></PostfixExpr></LetBinding></LetClause>

          (: format value :)
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>v</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>value</QName> <TOKEN>:=</TOKEN> <TryCatchExpr><TryClause><TOKEN>try</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
            <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'bytes'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <FunctionCall><QName>prof:human</QName><ArgumentList><TOKEN>(</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <FunctionCall><QName>xs:integer</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>else</TOKEN> <IntegerLiteral>0</IntegerLiteral></IfExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'decimal'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <FunctionCall><QName>format-number</QName><ArgumentList><TOKEN>(</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <FunctionCall><QName>number</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>else</TOKEN> <IntegerLiteral>0</IntegerLiteral></IfExpr><TOKEN>,</TOKEN> <StringLiteral>'0.00'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'dateTime'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <FunctionCall><QName>html:date</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>xs:dateTime</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><InstanceofExpr><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef> <TOKEN>instance</TOKEN> <TOKEN>of</TOKEN> <AnyFunctionTest><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyFunctionTest></InstanceofExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></PostfixExpr>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>v</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr></IfExpr></IfExpr>
          <TOKEN>}</TOKEN></EnclosedExpr></TryClause> <CatchClause><TOKEN>catch</TOKEN> <Wildcard>*</Wildcard> <EnclosedExpr><TOKEN>{</TOKEN>
            <VarRef><TOKEN>$</TOKEN><QName>err:description</QName></VarRef>
          <TOKEN>}</TOKEN></EnclosedExpr></CatchClause></TryCatchExpr></LetBinding></LetClause>
          <ReturnClause><TOKEN>return</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>td</QName> <EnclosedExpr><TOKEN>{</TOKEN>
            <Expr><CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>align</QName> <EnclosedExpr><TOKEN>{</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>html:NUMBER</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'right'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>'left'</StringLiteral></IfExpr> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor><TOKEN>,</TOKEN>
            <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><AndExpr><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>pos</QName></VarRef> <TOKEN>=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr> <TOKEN>and</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef></AndExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>data</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S>
                </S><QName>onclick</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
              <StringLiteral>' '</StringLiteral></Expr>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>
            <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><AndExpr><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>pos</QName></VarRef> <TOKEN>=</TOKEN> <IntegerLiteral>1</IntegerLiteral></ComparisonExpr> <TOKEN>and</TOKEN> <FunctionCall><QName>exists</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'id'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef>
            <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr></Expr>
          <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor></ReturnClause></FLWORExpr></Expr>
        <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor></ReturnClause></FLWORExpr></Expr>
      <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor>
    <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></ReturnClause></FLWORExpr></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Focuses the specified field via Javascript.
 : @param  $element  element to be focused
 : @return script element
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:focus</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><TOKEN>element</TOKEN>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>script</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:js</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>'var u = document.getElementById("'</StringLiteral> <TOKEN>||</TOKEN> <FunctionCall><TOKEN>replace</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><TOKEN>element</TOKEN></VarRef><TOKEN>,</TOKEN> <StringLiteral>'"'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>''</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>||</TOKEN> <StringLiteral>'"); '</StringLiteral> <TOKEN>||</TOKEN>
    <StringLiteral>'u.focus(); u.select();'</StringLiteral></StringConcatExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a link to the specified target.
 : @param  $text  link text
 : @param  $href  link reference
 : @return link
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:link</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><TOKEN>text</TOKEN>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>href</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>a</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>a</QName><DirAttributeList><S> </S><QName>href</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>href</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><TOKEN>text</TOKEN></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>a</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a link to the specified target.
 : @param  $text    link text
 : @param  $href    link reference
 : @param  $params  query parameters
 : @return link
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:link</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><TOKEN>text</TOKEN>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>href</QName>    <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>params</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>a</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><TOKEN>text</TOKEN></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>web:create-url</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>href</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Formats a date.
 : @param  $date  date
 : @return string
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:date</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>date</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:dateTime</QName></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <QName>xs:string</QName> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>zone</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>timezone-from-dateTime</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>current-dateTime</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>dt</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>fn:adjust-dateTime-to-timezone</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>xs:dateTime</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>date</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>zone</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>format-dateTime</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>dt</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'[Y0000]-[M00]-[D00], [H00]:[m00]:[s00]'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Formats a duration.
 : @param  $seconds  seconds
 : @return string
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:duration</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>seconds</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:decimal</QName></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <QName>xs:string</QName> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>min</QName> <TOKEN>:=</TOKEN> <MultiplicativeExpr><VarRef><TOKEN>$</TOKEN><QName>seconds</QName></VarRef> <TOKEN>idiv</TOKEN> <IntegerLiteral>60</IntegerLiteral></MultiplicativeExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sec</QName> <TOKEN>:=</TOKEN> <AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>seconds</QName></VarRef> <TOKEN>-</TOKEN> <MultiplicativeExpr><VarRef><TOKEN>$</TOKEN><QName>min</QName></VarRef> <TOKEN>*</TOKEN> <IntegerLiteral>60</IntegerLiteral></MultiplicativeExpr></AdditiveExpr></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><StringConcatExpr><FunctionCall><QName>format-number</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>min</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'00'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>||</TOKEN> <StringLiteral>':'</StringLiteral> <TOKEN>||</TOKEN> <FunctionCall><QName>format-number</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>sec</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'00'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></StringConcatExpr><TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates an embedded JavaScript snippet.
 : @param  $js  JavaScript string
 : @return script element
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:js</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>js</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>script</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>script</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>/</AposAttrContentChar><AposAttrContentChar>j</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
    <StringConcatExpr><StringLiteral>'(function() { '</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>js</QName></VarRef> <TOKEN>||</TOKEN> <StringLiteral>' })();'</StringLiteral></StringConcatExpr>
  <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>script</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a new map with the current query parameters.
 : @return map with query parameters
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:parameters</QName><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN>
    <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>param</QName> <TOKEN>in</TOKEN> <PostfixExpr><FunctionCall><QName>request:parameter-names</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>starts-with</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>,</TOKEN> <StringLiteral>'_'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr></ForBinding></ForClause>
    <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><VarRef><TOKEN>$</TOKEN><QName>param</QName></VarRef><TOKEN>:</TOKEN> <FunctionCall><QName>request:parameter</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>param</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Creates a new map with query parameters. The returned map contains all
 : current query parameters, : and the given ones, prefixed with an underscore.
 : @param  $map  predefined parameters
 : @return map with query parameters
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <FunctionDecl><TOKEN>function</TOKEN> <QName>html:parameters</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>map</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN>
    <Expr><FunctionCall><QName>html:parameters</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
    <FunctionCall><QName>map:for-each</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>map</QName></VarRef><TOKEN>,</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>name</QName></Param><TOKEN>,</TOKEN> <Param><TOKEN>$</TOKEN><QName>value</QName></Param></ParamList><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
      <FunctionCall><QName>map:entry</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>'_'</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></StringConcatExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
    <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>