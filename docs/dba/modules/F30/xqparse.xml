<XQuery>(:~
 : Logging page.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-19, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dba</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/logs'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>options</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/options'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../modules/options.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>html</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/html'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../modules/html.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(:~ Top category :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dba:CAT</QName> <TOKEN>:=</TOKEN> <StringLiteral>'logs'</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Redirects to the URL that creates a log entry table for the specified timestamp.
 : @param  $name  name (date) of log file
 : @param  $time  timestamp to be found
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/dba/logs-jump"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"name"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$name}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"time"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$time}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:jump-page</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>time</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>page</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><ParenthesizedExpr><TOKEN>(</TOKEN>
    <Expr><FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>ignore-logs</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>options:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>options:IGNORE-LOGS</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>max</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>options:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>options:MAXROWS</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>log</QName> <PositionalVar><TOKEN>at</TOKEN> <TOKEN>$</TOKEN><QName>pos</QName></PositionalVar> <TOKEN>in</TOKEN> <FunctionCall><QName>reverse</QName><ArgumentList><TOKEN>(</TOKEN>
      <PostfixExpr><FunctionCall><QName>admin:logs</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><AndExpr><VarRef><TOKEN>$</TOKEN><QName>ignore-logs</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>ignore-logs</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'i'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr>
    <TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
    <WhereClause><TOKEN>where</TOKEN> <ComparisonExpr><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>time</QName></AbbrevForwardStep> <PredicateList/></AxisStep></RelativePathExpr><TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>time</QName></VarRef></ComparisonExpr></WhereClause>
    <ReturnClause><TOKEN>return</TOKEN> <AdditiveExpr><MultiplicativeExpr><ParenthesizedExpr><TOKEN>(</TOKEN><AdditiveExpr><VarRef><TOKEN>$</TOKEN><QName>pos</QName></VarRef> <TOKEN>-</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>idiv</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>max</QName></VarRef></MultiplicativeExpr> <TOKEN>+</TOKEN> <IntegerLiteral>1</IntegerLiteral></AdditiveExpr></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
    <IntegerLiteral>1</IntegerLiteral></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <BasexUpdateExpr><FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'/dba/logs'</StringLiteral><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'time'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>time</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>update</TOKEN> <TOKEN>{</TOKEN>
    <RelativePathExpr><TOKEN>.</TOKEN><TOKEN>//</TOKEN><AxisStep><Wildcard>*:header</Wildcard><PredicateList/></AxisStep><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>value</QName></AbbrevForwardStep> <PredicateList/></AxisStep><TOKEN>!</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><ReplaceExpr><TOKEN>replace</TOKEN> <TOKEN>value</TOKEN> <TOKEN>of</TOKEN> <TOKEN>node</TOKEN> <TOKEN>.</TOKEN> <TOKEN>with</TOKEN> <StringConcatExpr><TOKEN>.</TOKEN> <TOKEN>||</TOKEN> <StringLiteral>'#'</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>time</QName></VarRef></StringConcatExpr></ReplaceExpr><TOKEN>)</TOKEN></ParenthesizedExpr></RelativePathExpr>
  <TOKEN>}</TOKEN></BasexUpdateExpr></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Logging page.
 : @param  $input  search input
 : @param  $name   name (date) of log file
 : @param  $sort   table sort key
 : @param  $error  error string
 : @param  $info   info string
 : @param  $page   current page
 : @param  $time   timestamp to highlight
 : @return page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/dba/logs"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"input"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$input}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"name"</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>"{$name}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"sort"</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>"{$sort}"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>""</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"error"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$error}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"info"</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>"{$info}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"page"</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>"{$page}"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"1"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"time"</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>"{$time}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"html"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:logs</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>input</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>name</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>sort</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>error</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>info</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>time</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>html</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>files</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>file</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>admin:logs</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
    <OrderByClause><TOKEN>order</TOKEN> <TOKEN>by</TOKEN> <OrderSpec><VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef> <TOKEN>descending</TOKEN></OrderSpec></OrderByClause>
    <ReturnClause><TOKEN>return</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>file</QName></VarRef></ReturnClause></FLWORExpr>
  <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>name</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>else</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>head</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>files</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></IfExpr></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:wrap</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'header'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'info'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>info</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>width</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>2</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><AposAttrContentChar>5</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h2</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'Logs'</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>h2</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>form</QName><DirAttributeList><S> </S><QName>action</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>method</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>p</QuotAttrContentChar><QuotAttrContentChar>o</QuotAttrContentChar><QuotAttrContentChar>s</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>"</TOKEN><QuotAttrContentChar>u</QuotAttrContentChar><QuotAttrContentChar>p</QuotAttrContentChar><QuotAttrContentChar>d</QuotAttrContentChar><QuotAttrContentChar>a</QuotAttrContentChar><QuotAttrContentChar>t</QuotAttrContentChar><QuotAttrContentChar>e</QuotAttrContentChar><TOKEN>"</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>time</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
            <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>buttons</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'log-delete'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Delete'</StringLiteral><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>params</QName> <TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>headers</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'name'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Name'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'xml'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
              <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'size'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Size'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'bytes'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr>
            <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entries</QName> <TOKEN>:=</TOKEN> 
              <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>entry</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>reverse</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>sort</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>files</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
              <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
                <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
                  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>link</QName> <TOKEN>:=</TOKEN> <BasexUpdateExpr><FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN>
                    <VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr><TOKEN>)</TOKEN></ParenthesizedExpr>
                  <TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>update</TOKEN> <TOKEN>{</TOKEN>
                    (: enrich link targets with current search string :)
                    <InsertExpr><TOKEN>insert</TOKEN> <TOKEN>node</TOKEN> <CompAttrConstructor><TOKEN>attribute</TOKEN> <QName>onclick</QName> <EnclosedExpr><TOKEN>{</TOKEN> <StringLiteral>'addInput(this);'</StringLiteral> <TOKEN>}</TOKEN></EnclosedExpr></CompAttrConstructor> <TOKEN>into</TOKEN> <TOKEN>.</TOKEN></InsertExpr>
                  <TOKEN>}</TOKEN></BasexUpdateExpr></LetBinding></LetClause>
                  <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN> <TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>b</QName> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor> <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>link</QName></VarRef></IfExpr></ReturnClause></FLWORExpr>
                <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></MapConstructorEntry><TOKEN>,</TOKEN>
                <MapConstructorEntry><StringLiteral>'size'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>entry</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>size</QName></AbbrevForwardStep>
              <PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr></LetBinding></LetClause>
            <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:table</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
          <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><TOKEN>div</TOKEN><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>form</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
        <Expr><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
          <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>form</QName><DirAttributeList><S> </S><QName>action</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>-</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>w</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>method</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>autocomplete</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h3</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
              <Expr><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'&amp;#xa0;'</StringLiteral><TOKEN>,</TOKEN>
              <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
              <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>size</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>4</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S>
                </S><QName>title</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>E</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>x</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S>
                </S><QName>onkeydown</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>.</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>y</AposAttrContentChar><AposAttrContentChar>C</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>=</AposAttrContentChar><AposAttrContentChar>=</AposAttrContentChar><AposAttrContentChar>1</AposAttrContentChar><AposAttrContentChar>3</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><TOKEN>{{</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>E</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>,</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><AposAttrContentChar>;</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>.</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>D</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><AposAttrContentChar>;</AposAttrContentChar><TOKEN>}}</TOKEN><TOKEN>'</TOKEN></DirAttributeValue><S>
                </S><QName>onkeyup</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>E</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>(</AposAttrContentChar><AposAttrContentChar>f</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>,</AposAttrContentChar><AposAttrContentChar> </AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>)</AposAttrContentChar><AposAttrContentChar>;</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
              <StringLiteral>' '</StringLiteral><TOKEN>,</TOKEN>
              <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'download'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Download'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
            <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>h3</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>form</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
          <DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
          <FunctionCall><QName>html:js</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'logEntries(true, false);'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr><TOKEN>,</TOKEN>
        <FunctionCall><QName>html:focus</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'input'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
      <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Returns a log entry table.
 : @param  $input  search input
 : @param  $name   name of selected log files
 : @param  $sort   table sort key
 : @param  $page   current page
 : @param  $time   timestamp to highlight
 : @return html elements
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:POST</QName><TOKEN>(</TOKEN><StringLiteral>"{$input}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/dba/log"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"name"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$name}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"sort"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$sort}"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>""</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"page"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$page}"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"1"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"time"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$time}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>"html"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:indent</QName><TOKEN>(</TOKEN><StringLiteral>"no"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:single</QName></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:log</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>input</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>name</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>sort</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>time</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ElementTest><TOKEN>+</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>sort</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'time'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>''</StringLiteral> <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></IfExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>headers</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'time'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Time'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'xml'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'address'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Address'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'user'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'User'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'xml'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'type'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Type'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'xml'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'ms'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'ms'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'decimal'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'text'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Text'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'xml'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entries</QName> <TOKEN>:=</TOKEN>
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>ignore-logs</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>options:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>options:IGNORE-LOGS</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>search</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>boolean</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>highlight</QName> <TOKEN>:=</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>string</QName></Param><TOKEN>,</TOKEN> <Param><TOKEN>$</TOKEN><QName>found</QName></Param></ParamList><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
      <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>found</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
        <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>match</QName> <TOKEN>in</TOKEN> <RelativePathExpr><FunctionCall><QName>analyze-string</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>string</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'i'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><Wildcard>*</Wildcard>
        <PredicateList/></AxisStep></RelativePathExpr></ForBinding></ForClause><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>value</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>match</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
        <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><FunctionCall><QName>local-name</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>match</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>=</TOKEN> <StringLiteral>'match'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <CompElemConstructor><TOKEN>element</TOKEN> <QName>b</QName> <EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr></CompElemConstructor> <TOKEN>else</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef></IfExpr></ReturnClause></FLWORExpr>
      <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
        <VarRef><TOKEN>$</TOKEN><QName>string</QName></VarRef>
      <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr>
    <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></LetBinding></LetClause>
    <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>log</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>reverse</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>admin:logs</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>user</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>user</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>type</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>type</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>msg</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>user-hit</QName> <TOKEN>:=</TOKEN> <AndExpr><VarRef><TOKEN>$</TOKEN><QName>search</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'iq'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>type-hit</QName> <TOKEN>:=</TOKEN> <AndExpr><VarRef><TOKEN>$</TOKEN><QName>search</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>user-hit</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>and</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'iq'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>text-hit</QName> <TOKEN>:=</TOKEN> <AndExpr><VarRef><TOKEN>$</TOKEN><QName>search</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><OrExpr><VarRef><TOKEN>$</TOKEN><QName>user-hit</QName></VarRef> <TOKEN>or</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>type-hit</QName></VarRef></OrExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>and</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>msg</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'i'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr></LetBinding></LetClause>
    <WhereClause><TOKEN>where</TOKEN> <AndExpr><ParenthesizedExpr><TOKEN>(</TOKEN><OrExpr><FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>search</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>or</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>user-hit</QName></VarRef> <TOKEN>or</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>type-hit</QName></VarRef> <TOKEN>or</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>text-hit</QName></VarRef></OrExpr><TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>and</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><AndExpr><VarRef><TOKEN>$</TOKEN><QName>ignore-logs</QName></VarRef> <TOKEN>and</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>msg</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>ignore-logs</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'i'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AndExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
    <TOKEN>)</TOKEN></ParenthesizedExpr></AndExpr></WhereClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>id</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>string</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>time</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
      <MapConstructorEntry><StringLiteral>'id'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'time'</StringLiteral><TOKEN>:</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
        <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><OrExpr><VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef> <TOKEN>or</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></OrExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
          <FunctionCall><QName>html:link</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>,</TOKEN> <StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef> <TOKEN>||</TOKEN> <StringLiteral>'-jump'</StringLiteral></StringConcatExpr><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'time'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>time</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
          <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
        <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
          <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef>
        <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr>
      <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'address'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>address</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'user'</StringLiteral><TOKEN>:</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>highlight</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>user-hit</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>highlight</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>type</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>type-hit</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'ms'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>log</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>ms</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'text'</StringLiteral><TOKEN>:</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>highlight</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>msg</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>text-hit</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr> <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr></MapConstructorEntry>
    <TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>params</QName> <TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'input'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>input</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>options</QName> <TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>xs:integer</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:table</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>params</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Redirects to the specified action.
 : @param  $action  action to perform
 : @param  $names   names of selected log files
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:POST</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/dba/logs"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"action"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$action}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"name"</StringLiteral><TOKEN>,</TOKEN>   <StringLiteral>"{$names}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:logs-redirect</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>action</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>names</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>names</QName></VarRef><Predicate><TOKEN>[</TOKEN><TOKEN>.</TOKEN><TOKEN>]</TOKEN></Predicate></PostfixExpr></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'redirect'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>