<XQuery>(:~
 : Code for logging in and out.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-21, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dba</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/login'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>config</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/config'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'lib/config.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>html</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/html'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'lib/html.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(:~
 : Permissions: checks the user credentials.
 : Redirects to the login page if a user is not logged in, or if the page is not public.
 : @param  $perm  permission data
 : @return redirection to login page or empty sequence
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>perm:check</QName><TOKEN>(</TOKEN><StringLiteral>'/dba'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$perm}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:check</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>perm</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <AnyMapTest><TOKEN>map</TOKEN><TOKEN>(</TOKEN><TOKEN>*</TOKEN><TOKEN>)</TOKEN></AnyMapTest></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest><TOKEN>?</TOKEN></SequenceType> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>path</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>perm</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>path</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>allow</QName> <TOKEN>:=</TOKEN> <PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>perm</QName></VarRef><Lookup><TOKEN>?</TOKEN><NCName>allow</NCName></Lookup></PostfixExpr></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <IfExpr><TOKEN>if</TOKEN> <TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>allow</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'public'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    (: public function, register id for better log entries :)
    <FunctionCall><QName>request:set-attribute</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'id'</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>allow</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <IfExpr><TOKEN>if</TOKEN> <TOKEN>(</TOKEN><FunctionCall><QName>session:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    (: everything fine, user is logged in :)
  <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    (: normalize login path :)
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>target</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>ends-with</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>path</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'/dba'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'dba/login'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>'login'</StringLiteral></IfExpr></LetBinding></LetClause>
    (: last visited page to redirect to (if there was one) :)
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>page</QName> <TOKEN>:=</TOKEN> <PostfixExpr><FunctionCall><TOKEN>replace</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>path</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'^.*dba/?'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>''</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><TOKEN>.</TOKEN><TOKEN>]</TOKEN></Predicate></PostfixExpr></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>target</QName></VarRef><TOKEN>,</TOKEN> <FunctionCall><QName>html:parameters</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
  <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></IfExpr></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Login page.
 : @param  $name   user name (optional)
 : @param  $error  error string (optional)
 : @param  $page   page to redirect to (optional)
 : @return login page or redirection to main page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/login'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_name'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$name}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_error'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$error}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_page'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$page}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>'html'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>perm:allow</QName><TOKEN>(</TOKEN><StringLiteral>'public'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:login</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>error</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  (: user is already logged in: redirect to main page :)
  <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><FunctionCall><QName>session:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'/dba'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>else</TOKEN>

  <FunctionCall><QName>html:wrap</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>form</QName><DirAttributeList><S> </S><QName>action</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>-</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>k</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>method</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>_</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN>
            <FunctionCall><QName>map:for-each</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>html:parameters</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <InlineFunctionExpr><TOKEN>function</TOKEN><TOKEN>(</TOKEN><ParamList><Param><TOKEN>$</TOKEN><QName>key</QName></Param><TOKEN>,</TOKEN> <Param><TOKEN>$</TOKEN><QName>value</QName></Param></ParamList><TOKEN>)</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
              <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>key</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>h</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor>
            <TOKEN>}</TOKEN></EnclosedExpr></InlineFunctionExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
          <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><TOKEN>div</TOKEN><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>table</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>N</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>m</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>:</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>_</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>id</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>size</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>3</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN> <FunctionCall><QName>html:focus</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'user'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>b</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>P</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>w</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>r</ElementContentChar><ElementContentChar>d</ElementContentChar><ElementContentChar>:</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>b</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><EnclosedExpr><TOKEN>{</TOKEN>
                <Expr><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>name</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>_</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>w</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>size</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>3</AposAttrContentChar><AposAttrContentChar>0</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><TOKEN>,</TOKEN>
                <StringLiteral>' '</StringLiteral><TOKEN>,</TOKEN>
                <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>input</QName><DirAttributeList><S> </S><QName>type</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>b</AposAttrContentChar><AposAttrContentChar>m</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>value</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>L</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>g</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>n</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor></Expr>
              <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>table</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>form</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall></IfExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Checks the user input and redirects to the main page, or back to the login page.
 : @param  $name  user name
 : @param  $pass  password
 : @param  $page  page to redirect to (optional)
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:POST</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/login-check'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_name'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$name}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_pass'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$pass}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'_page'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$page}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>perm:allow</QName><TOKEN>(</TOKEN><StringLiteral>'public'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:login-check</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>pass</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <TryCatchExpr><TryClause><TOKEN>try</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
    <Expr><FunctionCall><QName>user:check</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>pass</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
    <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><RelativePathExpr><FunctionCall><QName>user:list-details</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>permission</QName></AbbrevForwardStep> <PredicateList/></AxisStep></RelativePathExpr><TOKEN>!=</TOKEN> <StringLiteral>'admin'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <FunctionCall><QName>dba:reject</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'Admin credentials required'</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
    <TOKEN>)</TOKEN></ParenthesizedExpr> <TOKEN>else</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
      <FunctionCall><QName>dba:accept</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
    <TOKEN>)</TOKEN></ParenthesizedExpr></IfExpr></Expr>
  <TOKEN>}</TOKEN></EnclosedExpr></TryClause> <CatchClause><TOKEN>catch</TOKEN> <Wildcard>user:*</Wildcard> <EnclosedExpr><TOKEN>{</TOKEN>
    <FunctionCall><QName>dba:reject</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'Please check your login data'</StringLiteral><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
  <TOKEN>}</TOKEN></EnclosedExpr></CatchClause></TryCatchExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Ends a session and redirects to the login page.
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/logout'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:logout</QName><TOKEN>(</TOKEN>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <Expr><FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>user</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>session:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <ReturnClause><TOKEN>return</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
    (: write log entry, redirect to login page :)
    <Expr><FunctionCall><QName>admin:write-log</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>'Logout: '</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef></StringConcatExpr><TOKEN>,</TOKEN> <StringLiteral>'DBA'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
    <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'/dba/login'</StringLiteral><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'_name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>user</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
  <TOKEN>)</TOKEN></ParenthesizedExpr></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
  (: deletes the session key :)
  <FunctionCall><QName>session:delete</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Registers a user and redirects to the main page.
 : @param  $name  entered user name
 : @param  $page  page to redirect to (optional)
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <Annotation><TOKEN>%</TOKEN><QName>private</QName></Annotation> <FunctionDecl><TOKEN>function</TOKEN> <QName>dba:accept</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  (: register user, write log entry :)
  <Expr><FunctionCall><QName>session:set</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
  <FunctionCall><QName>admin:write-log</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>'Login: '</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></StringConcatExpr><TOKEN>,</TOKEN> <StringLiteral>'DBA'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>

  (: redirect to supplied page or main page :)
  <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef> <TOKEN>else</TOKEN> <StringLiteral>'logs'</StringLiteral></IfExpr><TOKEN>,</TOKEN> <FunctionCall><QName>html:parameters</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Rejects a user and redirects to the login page.
 : @param  $name   entered user name
 : @param  $error  error message
 : @param  $page   page to redirect to (optional)
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <Annotation><TOKEN>%</TOKEN><QName>private</QName></Annotation> <FunctionDecl><TOKEN>function</TOKEN> <QName>dba:reject</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>name</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>error</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  (: write log entry, redirect to login page :)
  <Expr><FunctionCall><QName>admin:write-log</QName><ArgumentList><TOKEN>(</TOKEN><StringConcatExpr><StringLiteral>'Login denied: '</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></StringConcatExpr><TOKEN>,</TOKEN> <StringLiteral>'DBA'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
  <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN>
    <StringLiteral>'login'</StringLiteral><TOKEN>,</TOKEN>
    <FunctionCall><QName>html:parameters</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>