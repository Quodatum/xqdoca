<XQuery>(:~
 : Main page.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-21, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dba</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/databases'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>html</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/html'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../lib/html.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>util</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/util'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../lib/util.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(:~ Top category :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dba:CAT</QName> <TOKEN>:=</TOKEN> <StringLiteral>'databases'</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~ Regular expression for backups. :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dba:BACKUP-REGEX</QName> <TOKEN>:=</TOKEN> <StringLiteral>'^(.*)-(\d{4}-\d\d-\d\d)-(\d\d)-(\d\d)-(\d\d)$'</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Main page.
 : @param  $sort   table sort key
 : @param  $error  error string
 : @param  $info   info string
 : @param  $page   current page
 : @return page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/databases'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'sort'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$sort}'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>''</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'page'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$page}'</StringLiteral><TOKEN>,</TOKEN> <IntegerLiteral>1</IntegerLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'info'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$info}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'error'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$error}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>'html'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:databases</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>sort</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>page</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:integer</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>info</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>error</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>html</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>names</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>map:merge</QName><ArgumentList><TOKEN>(</TOKEN><RelativePathExpr><FunctionCall><QName>db:list</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>!</TOKEN> <FunctionCall><QName>map:entry</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>.</TOKEN><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></RelativePathExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>databases</QName> <TOKEN>:=</TOKEN>
    <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>start</TOKEN> <TOKEN>:=</TOKEN> <FunctionCall><QName>util:start</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>end</TOKEN> <TOKEN>:=</TOKEN> <FunctionCall><QName>util:end</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>db</QName> <TOKEN>in</TOKEN> <PostfixExpr><FunctionCall><QName>db:list-details</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><ComparisonExpr><FunctionCall><QName>position</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>=</TOKEN> <RangeExpr><VarRef><TOKEN>$</TOKEN><TOKEN>start</TOKEN></VarRef> <TOKEN>to</TOKEN> <VarRef><TOKEN>$</TOKEN><TOKEN>end</TOKEN></VarRef></RangeExpr></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></ForBinding></ForClause>
    <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
      <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>db</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'resources'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>db</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>resources</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'size'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>db</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>size</QName></AbbrevForwardStep><PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'date'</StringLiteral><TOKEN>:</TOKEN> <RelativePathExpr><VarRef><TOKEN>$</TOKEN><QName>db</QName></VarRef><TOKEN>/</TOKEN><AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>modified-date</QName></AbbrevForwardStep>
    <PredicateList/></AxisStep></RelativePathExpr></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr></LetBinding></LetClause>
  <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>backups</QName> <TOKEN>:=</TOKEN>
    <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>backup</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>db:backups</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
    <WhereClause><TOKEN>where</TOKEN> <FunctionCall><QName>matches</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>backup</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:BACKUP-REGEX</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></WhereClause>
    <GroupByClause><TOKEN>group</TOKEN> <TOKEN>by</TOKEN> <GroupingSpec><GroupingVariable><TOKEN>$</TOKEN><QName>name</QName></GroupingVariable> <TOKEN>:=</TOKEN> <FunctionCall><TOKEN>replace</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>backup</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:BACKUP-REGEX</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'$1'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></GroupingSpec></GroupByClause>
    <WhereClause><TOKEN>where</TOKEN> <FunctionCall><QName>not</QName><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><VarRef><TOKEN>$</TOKEN><QName>names</QName></VarRef><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></PostfixExpr><TOKEN>)</TOKEN></ArgumentList></FunctionCall></WhereClause>
    <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>date</QName> <TOKEN>:=</TOKEN> <FunctionCall><TOKEN>replace</TOKEN><ArgumentList><TOKEN>(</TOKEN><PostfixExpr><FunctionCall><QName>sort</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>backup</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><FunctionCall><QName>last</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>]</TOKEN></Predicate></PostfixExpr><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:BACKUP-REGEX</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'$2T$3:$4:$5Z'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
    <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
      <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'size'</StringLiteral><TOKEN>:</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></MapConstructorEntry><TOKEN>,</TOKEN>
      <MapConstructorEntry><StringLiteral>'date'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>date</QName></VarRef></MapConstructorEntry>
    <TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr></LetBinding></LetClause>

  <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:wrap</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'header'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'info'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>info</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>width</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>4</AposAttrContentChar><AposAttrContentChar>9</AposAttrContentChar><AposAttrContentChar>%</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>form</QName><DirAttributeList><S> </S><QName>action</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>method</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h2</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>D</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>b</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>h2</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN>
            <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>headers</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'name'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Name'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
              <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'resources'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Count'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'number'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
              <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'size'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Bytes'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'bytes'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
              <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'date'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Last Modified'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'dateTime'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr>
            <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entries</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>databases</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>backups</QName></VarRef></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>buttons</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
              <Expr><FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'db-create'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Create‚Ä¶'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
              <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'db-optimize-all'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Optimize'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN>
              <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'db-drop'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Drop'</StringLiteral><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
            <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><TOKEN>count</TOKEN> <TOKEN>:=</TOKEN> <AdditiveExpr><FunctionCall><QName>map:size</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>names</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>+</TOKEN> <FunctionCall><TOKEN>count</TOKEN><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>backups</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></AdditiveExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>options</QName> <TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
              <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'link'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'database'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'page'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>page</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'count'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><TOKEN>count</TOKEN></VarRef></MapConstructorEntry>
            <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
            <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:table</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
          <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>form</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Redirects to the specified action.
 : @param  $action  action to perform
 : @param  $names   names of selected databases
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:POST</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/databases'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'action'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$action}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'name'</StringLiteral><TOKEN>,</TOKEN>   <StringLiteral>'{$names}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:databases-redirect</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>action</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>names</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef><TOKEN>,</TOKEN>
    <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef> <TOKEN>=</TOKEN> <StringLiteral>'create-db'</StringLiteral></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor>
    <TOKEN>else</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>names</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'redirect'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></IfExpr>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>