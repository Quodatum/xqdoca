<XQuery>(:~
 : Evaluate query.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-23, BSD License
 :)
<Module><LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName><NCName>dba</NCName></NCName> <TOKEN>=</TOKEN> <URILiteral><StringLiteral>'dba/queries'</StringLiteral></URILiteral><Separator><TOKEN>;</TOKEN></Separator></ModuleDecl>

<Prolog><Import><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName><NCName>util</NCName></NCName> <TOKEN>=</TOKEN> <URILiteral><StringLiteral>'dba/util'</StringLiteral></URILiteral> <TOKEN>at</TOKEN> <URILiteral><StringLiteral>'../lib/util.xqm'</StringLiteral></URILiteral></ModuleImport></Import><Separator><TOKEN>;</TOKEN></Separator>

(:~
 : Evaluates a query and returns the result.
 : @param  $query  query
 : @return result of query
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:POST</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'{$query}'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:path</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'/dba/query-eval'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:single</QName></FunctionName></QName></EQName></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>output:method</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'text'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <EQName><QName><FunctionName><QName>dba:query-eval</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><EQName><QName><FunctionName><QName>query</QName></FunctionName></QName></EQName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><ItemType><AtomicOrUnionType><EQName><QName><FunctionName><QName>xs:string</QName></FunctionName></QName></EQName></AtomicOrUnionType></ItemType><OccurrenceIndicator><TOKEN>?</TOKEN></OccurrenceIndicator></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><ItemType><AtomicOrUnionType><EQName><QName><FunctionName><QName>xs:string</QName></FunctionName></QName></EQName></AtomicOrUnionType></ItemType></SequenceType> <FunctionBody><EnclosedExpr><TOKEN>{</TOKEN>
  <Expr><ExprSingle><OrExpr><AndExpr><ComparisonExpr><FTContainsExpr><StringConcatExpr><RangeExpr><AdditiveExpr><MultiplicativeExpr><UnionExpr><IntersectExceptExpr><InstanceofExpr><TreatExpr><CastableExpr><CastExpr><TransformWithExpr><BasexUpdate1Expr><BasexUpdateExpr><ArrowExpr><UnaryExpr><ValueExpr><SimpleMapExpr><PathExpr><RelativePathExpr><StepExpr><PostfixExpr><PrimaryExpr><FunctionCall><FunctionEQName><FunctionName><QName>util:query</QName></FunctionName></FunctionEQName><ArgumentList><TOKEN>(</TOKEN><Argument><ExprSingle><OrExpr><AndExpr><ComparisonExpr><FTContainsExpr><StringConcatExpr><RangeExpr><AdditiveExpr><MultiplicativeExpr><UnionExpr><IntersectExceptExpr><InstanceofExpr><TreatExpr><CastableExpr><CastExpr><TransformWithExpr><BasexUpdate1Expr><BasexUpdateExpr><ArrowExpr><UnaryExpr><ValueExpr><SimpleMapExpr><PathExpr><RelativePathExpr><StepExpr><PostfixExpr><PrimaryExpr><VarRef><TOKEN>$</TOKEN><VarName><EQName><QName><FunctionName><QName>query</QName></FunctionName></QName></EQName></VarName></VarRef></PrimaryExpr></PostfixExpr></StepExpr></RelativePathExpr></PathExpr></SimpleMapExpr></ValueExpr></UnaryExpr></ArrowExpr></BasexUpdateExpr></BasexUpdate1Expr></TransformWithExpr></CastExpr></CastableExpr></TreatExpr></InstanceofExpr></IntersectExceptExpr></UnionExpr></MultiplicativeExpr></AdditiveExpr></RangeExpr></StringConcatExpr></FTContainsExpr></ComparisonExpr></AndExpr></OrExpr></ExprSingle></Argument><TOKEN>,</TOKEN> <Argument><ExprSingle><OrExpr><AndExpr><ComparisonExpr><FTContainsExpr><StringConcatExpr><RangeExpr><AdditiveExpr><MultiplicativeExpr><UnionExpr><IntersectExceptExpr><InstanceofExpr><TreatExpr><CastableExpr><CastExpr><TransformWithExpr><BasexUpdate1Expr><BasexUpdateExpr><ArrowExpr><UnaryExpr><ValueExpr><SimpleMapExpr><PathExpr><RelativePathExpr><StepExpr><PostfixExpr><PrimaryExpr><ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr></PrimaryExpr></PostfixExpr></StepExpr></RelativePathExpr></PathExpr></SimpleMapExpr></ValueExpr></UnaryExpr></ArrowExpr></BasexUpdateExpr></BasexUpdate1Expr></TransformWithExpr></CastExpr></CastableExpr></TreatExpr></InstanceofExpr></IntersectExceptExpr></UnionExpr></MultiplicativeExpr></AdditiveExpr></RangeExpr></StringConcatExpr></FTContainsExpr></ComparisonExpr></AndExpr></OrExpr></ExprSingle></Argument><TOKEN>)</TOKEN></ArgumentList></FunctionCall></PrimaryExpr></PostfixExpr></StepExpr></RelativePathExpr></PathExpr></SimpleMapExpr></ValueExpr></UnaryExpr></ArrowExpr></BasexUpdateExpr></BasexUpdate1Expr></TransformWithExpr></CastExpr></CastableExpr></TreatExpr></InstanceofExpr></IntersectExceptExpr></UnionExpr></MultiplicativeExpr></AdditiveExpr></RangeExpr></StringConcatExpr></FTContainsExpr></ComparisonExpr></AndExpr></OrExpr></ExprSingle></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionBody></FunctionDecl></AnnotatedDecl><Separator><TOKEN>;</TOKEN></Separator>

(:~
 : Runs an updating query.
 : @param  $query  query
 : @return result of query
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><TOKEN>updating</TOKEN></FunctionName></QName></EQName></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:POST</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'{$query}'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:path</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'/dba/query-update'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>rest:single</QName></FunctionName></QName></EQName></Annotation>
  <Annotation><TOKEN>%</TOKEN><EQName><QName><FunctionName><QName>output:method</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN><Literal><StringLiteral>'text'</StringLiteral></Literal><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <EQName><QName><FunctionName><QName>dba:query-update</QName></FunctionName></QName></EQName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><EQName><QName><FunctionName><QName>query</QName></FunctionName></QName></EQName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><ItemType><AtomicOrUnionType><EQName><QName><FunctionName><QName>xs:string</QName></FunctionName></QName></EQName></AtomicOrUnionType></ItemType><OccurrenceIndicator><TOKEN>?</TOKEN></OccurrenceIndicator></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <SequenceType><TOKEN>empty-sequence</TOKEN><TOKEN>(</TOKEN><TOKEN>)</TOKEN></SequenceType> <FunctionBody><EnclosedExpr><TOKEN>{</TOKEN>
  <Expr><ExprSingle><OrExpr><AndExpr><ComparisonExpr><FTContainsExpr><StringConcatExpr><RangeExpr><AdditiveExpr><MultiplicativeExpr><UnionExpr><IntersectExceptExpr><InstanceofExpr><TreatExpr><CastableExpr><CastExpr><TransformWithExpr><BasexUpdate1Expr><BasexUpdateExpr><ArrowExpr><UnaryExpr><ValueExpr><SimpleMapExpr><PathExpr><RelativePathExpr><StepExpr><PostfixExpr><PrimaryExpr><FunctionCall><FunctionEQName><FunctionName><QName>util:update-query</QName></FunctionName></FunctionEQName><ArgumentList><TOKEN>(</TOKEN><Argument><ExprSingle><OrExpr><AndExpr><ComparisonExpr><FTContainsExpr><StringConcatExpr><RangeExpr><AdditiveExpr><MultiplicativeExpr><UnionExpr><IntersectExceptExpr><InstanceofExpr><TreatExpr><CastableExpr><CastExpr><TransformWithExpr><BasexUpdate1Expr><BasexUpdateExpr><ArrowExpr><UnaryExpr><ValueExpr><SimpleMapExpr><PathExpr><RelativePathExpr><StepExpr><PostfixExpr><PrimaryExpr><VarRef><TOKEN>$</TOKEN><VarName><EQName><QName><FunctionName><QName>query</QName></FunctionName></QName></EQName></VarName></VarRef></PrimaryExpr></PostfixExpr></StepExpr></RelativePathExpr></PathExpr></SimpleMapExpr></ValueExpr></UnaryExpr></ArrowExpr></BasexUpdateExpr></BasexUpdate1Expr></TransformWithExpr></CastExpr></CastableExpr></TreatExpr></InstanceofExpr></IntersectExceptExpr></UnionExpr></MultiplicativeExpr></AdditiveExpr></RangeExpr></StringConcatExpr></FTContainsExpr></ComparisonExpr></AndExpr></OrExpr></ExprSingle></Argument><TOKEN>)</TOKEN></ArgumentList></FunctionCall></PrimaryExpr></PostfixExpr></StepExpr></RelativePathExpr></PathExpr></SimpleMapExpr></ValueExpr></UnaryExpr></ArrowExpr></BasexUpdateExpr></BasexUpdate1Expr></TransformWithExpr></CastExpr></CastableExpr></TreatExpr></InstanceofExpr></IntersectExceptExpr></UnionExpr></MultiplicativeExpr></AdditiveExpr></RangeExpr></StringConcatExpr></FTContainsExpr></ComparisonExpr></AndExpr></OrExpr></ExprSingle></Expr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionBody></FunctionDecl></AnnotatedDecl><Separator><TOKEN>;</TOKEN></Separator></Prolog></LibraryModule></Module>
<EOF/></XQuery>