<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:53:12.962+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>dba/settings</xqdoc:uri><xqdoc:name>dba</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Settings page.&#xD;
&#xD;
</xqdoc:description><xqdoc:author>Christian Grün, BaseX Team 2005-23, BSD License</xqdoc:author></xqdoc:comment><xqdoc:body>(:~
 : Settings page.
 :
 : @author Christian Grün, BaseX Team 2005-23, BSD License
 :)
module namespace dba = 'dba/settings';

import module namespace options = 'dba/options' at '../lib/options.xqm';
import module namespace html = 'dba/html' at '../lib/html.xqm';

(:~ Top category :)
declare variable $dba:CAT := 'settings';

(:~
 : Settings page.
 : @param  $error  error string
 : @param  $info   info string
 : @return page
 :)
declare
  %rest:GET
  %rest:path('/dba/settings')
  %rest:query-param('error', '{$error}')
  %rest:query-param('info',  '{$info}')
  %output:method('html')
function dba:settings(
  $error  as xs:string?,
  $info   as xs:string?
) as element(html) {
  let $system := html:properties(db:system())
  let $table-row := function($label, $items) {
    &lt;tr&gt;&lt;td&gt;{ $label, &lt;br/&gt;, $items }&lt;/td&gt;&lt;/tr&gt;
  }
  let $option := function($key, $values, $label) {
    $table-row($label,
      &lt;select name='{ $key }'&gt;{
        let $selected := options:get($key)
        for $value in $values
        return element option { attribute selected { }[$value = $selected], $value }
      }&lt;/select&gt;
    )
  }
  let $number := function($key, $label) {
    $table-row($label, &lt;input type='number' name='{ $key }' value='{ options:get($key) }'/&gt;)
  }
  let $string := function($key, $label) {
    $table-row($label, &lt;input type='text' name='{ $key }' value='{ options:get($key) }'/&gt;)
  }
  return html:wrap(map { 'header': $dba:CAT, 'info': $info, 'error': $error },
    &lt;tr&gt;
      &lt;td width='33%'&gt;
        &lt;form action='settings' method='post'&gt;
          &lt;h2&gt;Settings » { html:button('save', 'Save') }&lt;/h2&gt;
          &lt;h3&gt;Queries&lt;/h3&gt;
          &lt;table&gt;
            {
              $number($options:TIMEOUT, 'Timeout, in seconds (0 = disabled)'),
              $number($options:MEMORY, 'Memory limit, in MB (0 = disabled)'),
              $number($options:MAXCHARS, 'Maximum output size'),
              $option($options:PERMISSION, $options:PERMISSIONS, 'Permission'),
              $option($options:INDENT, $options:INDENTS, 'Indent results')
            }
          &lt;/table&gt;
          &lt;h3&gt;Tables&lt;/h3&gt;
          &lt;table&gt;{
            $number($options:MAXROWS,  'Displayed table rows')
          }&lt;/table&gt;
          &lt;h3&gt;Logs&lt;/h3&gt;
          &lt;table&gt;{
            $string($options:IGNORE-LOGS, &lt;span&gt;Ignore entries (e.g. &lt;code&gt;/dba&lt;/code&gt;):&lt;/span&gt;)
          }&lt;/table&gt;
        &lt;/form&gt;
      &lt;/td&gt;
      &lt;td class='vertical'/&gt;
      &lt;td width='33%'&gt;
        &lt;form action='settings-gc' method='post'&gt;
          &lt;h2&gt;Global Options » { html:button('gc', 'GC') }&lt;/h2&gt;
          &lt;table&gt;{
            $system/tr[th][3]/preceding-sibling::tr[not(th)]
          }&lt;/table&gt;
        &lt;/form&gt;
      &lt;/td&gt;
      &lt;td class='vertical'/&gt;
      &lt;td width='33%'&gt;
        &lt;h2&gt;Local Options&lt;/h2&gt;
        &lt;table&gt;{
          $system/tr[th][3]/following-sibling::tr
        }&lt;/table&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  )
};

(:~
 : Saves the settings.
 : @return redirection
 :)
declare
  %rest:POST
  %rest:path('/dba/settings')
function dba:settings-save(
) as element(rest:response) {
  options:save(html:parameters()),
  web:redirect($dba:CAT, map { 'info': 'Settings were saved.' })
};
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>dba/options</xqdoc:uri><xqdoc:at>../lib/options.xqm</xqdoc:at></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>dba/html</xqdoc:uri><xqdoc:at>../lib/html.xqm</xqdoc:at></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="dba" uri="dba/settings"/><xqdoc:namespace prefix="options" uri="dba/options"/><xqdoc:namespace prefix="html" uri="dba/html"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/><xqdoc:namespace prefix="db" uri="http://basex.org/modules/db"/><xqdoc:namespace prefix="web" uri="http://basex.org/modules/web"/></xqdoc:namespaces><xqdoc:variables><xqdoc:variable><xqdoc:name>dba:CAT</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
Top category</xqdoc:description></xqdoc:comment><xqdoc:body>variable $dba:CAT := 'settings'</xqdoc:body></xqdoc:variable></xqdoc:variables><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Settings page.&#xD;
</xqdoc:description><xqdoc:param>$error  error string</xqdoc:param><xqdoc:param>$info   info string</xqdoc:param><xqdoc:return>page</xqdoc:return></xqdoc:comment><xqdoc:name>dba:settings</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:GET"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba/settings</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">error</xqdoc:literal><xqdoc:literal type="xs:string">{$error}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">info</xqdoc:literal><xqdoc:literal type="xs:string">{$info}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">html</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:settings ( $error as xs:string?, $info as xs:string? ) as element(html) { let $system := html:properties(db:system()) let $table-row := function($label, $items) { &lt;tr&gt;&lt;td&gt;{ $label, &lt;br/&gt;, $items }&lt;/td&gt;&lt;/tr&gt; } let $option := function($key, $values, $label) { $table-row($label, &lt;select name='{ $key }'&gt;{ let $selected := options:get($key) for $value in $values return element option { attribute selected { }[$value = $selected], $value } }&lt;/select&gt; ) } let $number := function($key, $label) { $table-row($label, &lt;input type='number' name='{ $key }' value='{ options:get($key) }'/&gt;) } let $string := function($key, $label) { $table-row($label, &lt;input type='text' name='{ $key }' value='{ options:get($key) }'/&gt;) } return html:wrap(map { 'header': $dba:CAT, 'info': $info, 'error': $error }, &lt;tr&gt; &lt;td width='33%'&gt; &lt;form action='settings' method='post'&gt; &lt;h2&gt;Settings » { html:button('save', 'Save') }&lt;/h2&gt; &lt;h3&gt;Queries&lt;/h3&gt; &lt;table&gt; { $number($options:TIMEOUT, 'Timeout, in seconds (0 = disabled)'), $number($options:MEMORY, 'Memory limit, in MB (0 = disabled)'), $number($options:MAXCHARS, 'Maximum output size'), $option($options:PERMISSION, $options:PERMISSIONS, 'Permission'), $option($options:INDENT, $options:INDENTS, 'Indent results') } &lt;/table&gt; &lt;h3&gt;Tables&lt;/h3&gt; &lt;table&gt;{ $number($options:MAXROWS, 'Displayed table rows') }&lt;/table&gt; &lt;h3&gt;Logs&lt;/h3&gt; &lt;table&gt;{ $string($options:IGNORE-LOGS, &lt;span&gt;Ignore entries (e.g. &lt;code&gt;/dba&lt;/code&gt;):&lt;/span&gt;) }&lt;/table&gt; &lt;/form&gt; &lt;/td&gt; &lt;td class='vertical'/&gt; &lt;td width='33%'&gt; &lt;form action='settings-gc' method='post'&gt; &lt;h2&gt;Global Options » { html:button('gc', 'GC') }&lt;/h2&gt; &lt;table&gt;{ $system/tr[th][3]/preceding-sibling::tr[not(th)] }&lt;/table&gt; &lt;/form&gt; &lt;/td&gt; &lt;td class='vertical'/&gt; &lt;td width='33%'&gt; &lt;h2&gt;Local Options&lt;/h2&gt; &lt;table&gt;{ $system/tr[th][3]/following-sibling::tr }&lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; ) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>error</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>info</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(html)</xqdoc:type></xqdoc:return><xqdoc:body>function dba:settings(
  $error  as xs:string?,
  $info   as xs:string?
) as element(html) {
  let $system := html:properties(db:system())
  let $table-row := function($label, $items) {
    &lt;tr&gt;&lt;td&gt;{ $label, &lt;br/&gt;, $items }&lt;/td&gt;&lt;/tr&gt;
  }
  let $option := function($key, $values, $label) {
    $table-row($label,
      &lt;select name='{ $key }'&gt;{
        let $selected := options:get($key)
        for $value in $values
        return element option { attribute selected { }[$value = $selected], $value }
      }&lt;/select&gt;
    )
  }
  let $number := function($key, $label) {
    $table-row($label, &lt;input type='number' name='{ $key }' value='{ options:get($key) }'/&gt;)
  }
  let $string := function($key, $label) {
    $table-row($label, &lt;input type='text' name='{ $key }' value='{ options:get($key) }'/&gt;)
  }
  return html:wrap(map { 'header': $dba:CAT, 'info': $info, 'error': $error },
    &lt;tr&gt;
      &lt;td width='33%'&gt;
        &lt;form action='settings' method='post'&gt;
          &lt;h2&gt;Settings » { html:button('save', 'Save') }&lt;/h2&gt;
          &lt;h3&gt;Queries&lt;/h3&gt;
          &lt;table&gt;
            {
              $number($options:TIMEOUT, 'Timeout, in seconds (0 = disabled)'),
              $number($options:MEMORY, 'Memory limit, in MB (0 = disabled)'),
              $number($options:MAXCHARS, 'Maximum output size'),
              $option($options:PERMISSION, $options:PERMISSIONS, 'Permission'),
              $option($options:INDENT, $options:INDENTS, 'Indent results')
            }
          &lt;/table&gt;
          &lt;h3&gt;Tables&lt;/h3&gt;
          &lt;table&gt;{
            $number($options:MAXROWS,  'Displayed table rows')
          }&lt;/table&gt;
          &lt;h3&gt;Logs&lt;/h3&gt;
          &lt;table&gt;{
            $string($options:IGNORE-LOGS, &lt;span&gt;Ignore entries (e.g. &lt;code&gt;/dba&lt;/code&gt;):&lt;/span&gt;)
          }&lt;/table&gt;
        &lt;/form&gt;
      &lt;/td&gt;
      &lt;td class='vertical'/&gt;
      &lt;td width='33%'&gt;
        &lt;form action='settings-gc' method='post'&gt;
          &lt;h2&gt;Global Options » { html:button('gc', 'GC') }&lt;/h2&gt;
          &lt;table&gt;{
            $system/tr[th][3]/preceding-sibling::tr[not(th)]
          }&lt;/table&gt;
        &lt;/form&gt;
      &lt;/td&gt;
      &lt;td class='vertical'/&gt;
      &lt;td width='33%'&gt;
        &lt;h2&gt;Local Options&lt;/h2&gt;
        &lt;table&gt;{
          $system/tr[th][3]/following-sibling::tr
        }&lt;/table&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  )
}</xqdoc:body></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Saves the settings.&#xD;
</xqdoc:description><xqdoc:return>redirection</xqdoc:return></xqdoc:comment><xqdoc:name>dba:settings-save</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:POST"/><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba/settings</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:settings-save ( ) as element(rest:response) { options:save(html:parameters()), web:redirect($dba:CAT, map { 'info': 'Settings were saved.' }) }</xqdoc:signature><xqdoc:return><xqdoc:type>element(rest:response)</xqdoc:type></xqdoc:return><xqdoc:body>function dba:settings-save(
) as element(rest:response) {
  options:save(html:parameters()),
  web:redirect($dba:CAT, map { 'info': 'Settings were saved.' })
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>