<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:53:12.962+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>dba/common</xqdoc:uri><xqdoc:name>dba</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Common RESTXQ access points.&#xD;
&#xD;
</xqdoc:description><xqdoc:author>Christian Grün, BaseX Team 2005-23, BSD License</xqdoc:author></xqdoc:comment><xqdoc:body>(:~
 : Common RESTXQ access points.
 :
 : @author Christian Grün, BaseX Team 2005-23, BSD License
 :)
module namespace dba = 'dba/common';

import module namespace html = 'dba/html' at 'lib/html.xqm';

(:~
 : Redirects to the start page.
 : @return redirection
 :)
declare
  %rest:path('/dba')
function dba:redirect(
) as element(rest:response) {
  web:redirect('/dba/logs')
};

(:~
 : Returns a file.
 : @param  $file  file or unknown path
 : @return rest binary data
 :)
declare
  %rest:path('/dba/static/{$file=.+}')
  %output:method('basex')
  %perm:allow('public')
function dba:file(
  $file  as xs:string
) as item()+ {
  let $path := file:base-dir() || 'static/' || $file
  return (
    web:response-header(
      map { 'media-type': web:content-type($path) },
      map { 'Cache-Control': 'max-age=3600,public', 'Content-Length': file:size($path) }
    ),
    file:read-binary($path)
  )
};

(:~
 : Shows a 'page not found' error.
 : @param  $path  path to unknown page
 : @return page
 :)
declare
  %rest:path('/dba/{$path}')
  %output:method('html')
function dba:unknown(
  $path  as xs:string
) as element(html) {
  html:wrap(
    &lt;tr&gt;
      &lt;td&gt;
        &lt;h2&gt;Page not found:&lt;/h2&gt;
        &lt;ul&gt;
          &lt;li&gt;Page: dba/{ $path }&lt;/li&gt;
          &lt;li&gt;Method: { request:method() }&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  )
};
</xqdoc:body></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>dba/html</xqdoc:uri><xqdoc:at>lib/html.xqm</xqdoc:at></xqdoc:import></xqdoc:imports><xqdoc:namespaces><xqdoc:namespace prefix="dba" uri="dba/common"/><xqdoc:namespace prefix="html" uri="dba/html"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="web" uri="http://basex.org/modules/web"/><xqdoc:namespace prefix="output" uri="http://www.w3.org/2010/xslt-xquery-serialization"/><xqdoc:namespace prefix="perm" uri="http://basex.org/modules/perm"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/><xqdoc:namespace prefix="file" uri="http://expath.org/ns/file"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Redirects to the start page.&#xD;
</xqdoc:description><xqdoc:return>redirection</xqdoc:return></xqdoc:comment><xqdoc:name>dba:redirect</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:redirect ( ) as element(rest:response) { web:redirect('/dba/logs') }</xqdoc:signature><xqdoc:return><xqdoc:type>element(rest:response)</xqdoc:type></xqdoc:return><xqdoc:body>function dba:redirect(
) as element(rest:response) {
  web:redirect('/dba/logs')
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Returns a file.&#xD;
</xqdoc:description><xqdoc:param>$file  file or unknown path</xqdoc:param><xqdoc:return>rest binary data</xqdoc:return></xqdoc:comment><xqdoc:name>dba:file</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba/static/{$file=.+}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">basex</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="perm:allow"><xqdoc:literal type="xs:string">public</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:file ( $file as xs:string ) as item()+ { let $path := file:base-dir() || 'static/' || $file return ( web:response-header( map { 'media-type': web:content-type($path) }, map { 'Cache-Control': 'max-age=3600,public', 'Content-Length': file:size($path) } ), file:read-binary($path) ) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>file</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="+">item()</xqdoc:type></xqdoc:return><xqdoc:body>function dba:file(
  $file  as xs:string
) as item()+ {
  let $path := file:base-dir() || 'static/' || $file
  return (
    web:response-header(
      map { 'media-type': web:content-type($path) },
      map { 'Cache-Control': 'max-age=3600,public', 'Content-Length': file:size($path) }
    ),
    file:read-binary($path)
  )
}</xqdoc:body></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Shows a 'page not found' error.&#xD;
</xqdoc:description><xqdoc:param>$path  path to unknown page</xqdoc:param><xqdoc:return>page</xqdoc:return></xqdoc:comment><xqdoc:name>dba:unknown</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba/{$path}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="output:method"><xqdoc:literal type="xs:string">html</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:unknown ( $path as xs:string ) as element(html) { html:wrap( &lt;tr&gt; &lt;td&gt; &lt;h2&gt;Page not found:&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Page: dba/{ $path }&lt;/li&gt; &lt;li&gt;Method: { request:method() }&lt;/li&gt; &lt;/ul&gt; &lt;/td&gt; &lt;/tr&gt; ) }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>path</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(html)</xqdoc:type></xqdoc:return><xqdoc:body>function dba:unknown(
  $path  as xs:string
) as element(html) {
  html:wrap(
    &lt;tr&gt;
      &lt;td&gt;
        &lt;h2&gt;Page not found:&lt;/h2&gt;
        &lt;ul&gt;
          &lt;li&gt;Page: dba/{ $path }&lt;/li&gt;
          &lt;li&gt;Method: { request:method() }&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  )
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>