<XQuery>(:~
 : Sessions page.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-21, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dba</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/sessions'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>config</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/config'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../lib/config.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>html</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/html'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../lib/html.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>util</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/util'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../lib/util.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(:~ Top category :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dba:CAT</QName> <TOKEN>:=</TOKEN> <StringLiteral>'sessions'</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Sessions page.
 : @param  $sort   table sort key
 : @param  $error  error message
 : @param  $info   info message
 : @return page
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/sessions'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'sort'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$sort}'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'access'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'error'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$error}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'info'</StringLiteral><TOKEN>,</TOKEN>  <StringLiteral>'{$info}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>output:method</QName><TOKEN>(</TOKEN><StringLiteral>'html'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:sessions</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>sort</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>error</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>info</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>?</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>html</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>html:wrap</QName><ArgumentList><TOKEN>(</TOKEN><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'header'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'info'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>info</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>error</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
    <DirElemConstructor><TOKEN>&lt;</TOKEN><QName>tr</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>form</QName><DirAttributeList><S> </S><QName>action</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><EnclosedExpr><TOKEN>{</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef> <TOKEN>}</TOKEN></EnclosedExpr><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>method</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>o</AposAttrContentChar><AposAttrContentChar>s</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>u</AposAttrContentChar><AposAttrContentChar>p</AposAttrContentChar><AposAttrContentChar>d</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h2</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>W</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>b</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>S</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>s</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>h2</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN>
          <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>headers</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
            <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'id'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'ID'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'id'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
            <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'name'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Name'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
            <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'value'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Value'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
            <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'access'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Last Access'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'type'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'dateTime'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'order'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'desc'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
            <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'you'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'You'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr>
          <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entries</QName> <TOKEN>:=</TOKEN>
            <FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>id</QName> <TOKEN>in</TOKEN> <FunctionCall><QName>sessions:ids</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ForBinding></ForClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>access</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>sessions:accessed</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>you</QName> <TOKEN>:=</TOKEN> <IfExpr><TOKEN>if</TOKEN><TOKEN>(</TOKEN><ComparisonExpr><FunctionCall><QName>session:id</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>=</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef></ComparisonExpr><TOKEN>)</TOKEN> <TOKEN>then</TOKEN> <StringLiteral>'‚úì'</StringLiteral> <TOKEN>else</TOKEN> <StringLiteral>'‚Äì'</StringLiteral></IfExpr></LetBinding></LetClause>
            (: supported session ids (application-specific, can be extended) :)
            <ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>name</QName> <TOKEN>in</TOKEN> <PostfixExpr><FunctionCall><QName>sessions:names</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall><Predicate><TOKEN>[</TOKEN><ComparisonExpr><TOKEN>.</TOKEN> <TOKEN>=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><Expr><VarRef><TOKEN>$</TOKEN><QName>config:SESSION-KEY</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'id'</StringLiteral></Expr><TOKEN>)</TOKEN></ParenthesizedExpr></ComparisonExpr><TOKEN>]</TOKEN></Predicate></PostfixExpr></ForBinding></ForClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>value</QName> <TOKEN>:=</TOKEN> <TryCatchExpr><TryClause><TOKEN>try</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
              <FunctionCall><QName>sessions:get</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
            <TOKEN>}</TOKEN></EnclosedExpr></TryClause> <CatchClause><TOKEN>catch</TOKEN> <QName>sessions:get</QName> <EnclosedExpr><TOKEN>{</TOKEN>
              <StringLiteral>'‚Äì'</StringLiteral> (: non-XQuery session value :)
            <TOKEN>}</TOKEN></EnclosedExpr></CatchClause></TryCatchExpr></LetBinding></LetClause>
            <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>string</QName> <TOKEN>:=</TOKEN> <FunctionCall><QName>util:chop</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>serialize</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>value</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'method'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'basex'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <IntegerLiteral>20</IntegerLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></LetBinding></LetClause>
            <OrderByClause><TOKEN>order</TOKEN> <TOKEN>by</TOKEN> <OrderSpec><VarRef><TOKEN>$</TOKEN><QName>access</QName></VarRef> <TOKEN>descending</TOKEN></OrderSpec></OrderByClause>
            <ReturnClause><TOKEN>return</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
              <MapConstructorEntry><StringLiteral>'id'</StringLiteral><TOKEN>:</TOKEN> <StringConcatExpr><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef> <TOKEN>||</TOKEN> <StringLiteral>'|'</StringLiteral> <TOKEN>||</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></StringConcatExpr></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'name'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>name</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'value'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>string</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'access'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>access</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN>
              <MapConstructorEntry><StringLiteral>'you'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>you</QName></VarRef></MapConstructorEntry>
            <TOKEN>}</TOKEN></MapConstructor></ReturnClause></FLWORExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>buttons</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
            <FunctionCall><QName>html:button</QName><ArgumentList><TOKEN>(</TOKEN><StringLiteral>'session-kill'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'Kill'</StringLiteral><TOKEN>,</TOKEN> <FunctionCall><QName>true</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
          <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>options</QName> <TOKEN>:=</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'sort'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>sort</QName></VarRef></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'presort'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'access'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></LetBinding></LetClause>
          <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:table</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>buttons</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>options</QName></VarRef><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
        <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>form</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList><S> </S><QName>class</QName><TOKEN>=</TOKEN><DirAttributeValue><TOKEN>'</TOKEN><AposAttrContentChar>v</AposAttrContentChar><AposAttrContentChar>e</AposAttrContentChar><AposAttrContentChar>r</AposAttrContentChar><AposAttrContentChar>t</AposAttrContentChar><AposAttrContentChar>i</AposAttrContentChar><AposAttrContentChar>c</AposAttrContentChar><AposAttrContentChar>a</AposAttrContentChar><AposAttrContentChar>l</AposAttrContentChar><TOKEN>'</TOKEN></DirAttributeValue></DirAttributeList><TOKEN>/&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>td</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><DirElemConstructor><TOKEN>&lt;</TOKEN><QName>h2</QName><DirAttributeList/><TOKEN>&gt;</TOKEN><ElementContentChar>D</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>t</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>b</ElementContentChar><ElementContentChar>a</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar>S</ElementContentChar><ElementContentChar>e</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>s</ElementContentChar><ElementContentChar>i</ElementContentChar><ElementContentChar>o</ElementContentChar><ElementContentChar>n</ElementContentChar><ElementContentChar>s</ElementContentChar><TOKEN>&lt;/</TOKEN><QName>h2</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><EnclosedExpr><TOKEN>{</TOKEN>
          <FLWORExpr><LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>headers</QName> <TOKEN>:=</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN>
            <Expr><MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'address'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'Address'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN>
            <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'key'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'user'</StringLiteral></MapConstructorEntry><TOKEN>,</TOKEN> <MapConstructorEntry><StringLiteral>'label'</StringLiteral><TOKEN>:</TOKEN> <StringLiteral>'User'</StringLiteral></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor></Expr>
          <TOKEN>)</TOKEN></ParenthesizedExpr></LetBinding></LetClause>
          <LetClause><TOKEN>let</TOKEN> <LetBinding><TOKEN>$</TOKEN><QName>entries</QName> <TOKEN>:=</TOKEN> <RelativePathExpr><FunctionCall><QName>admin:sessions</QName><ArgumentList><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ArgumentList></FunctionCall> <TOKEN>!</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN>
            <MapConstructorEntry><StringLiteral>'address'</StringLiteral><TOKEN>:</TOKEN> <AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>address</QName></AbbrevForwardStep><PredicateList/></AxisStep></MapConstructorEntry><TOKEN>,</TOKEN>
            <MapConstructorEntry><StringLiteral>'user'</StringLiteral><TOKEN>:</TOKEN> <AxisStep><AbbrevForwardStep><TOKEN>@</TOKEN><QName>user</QName></AbbrevForwardStep>
          <PredicateList/></AxisStep></MapConstructorEntry><TOKEN>}</TOKEN></MapConstructor></RelativePathExpr></LetBinding></LetClause>
          <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>html:table</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>headers</QName></VarRef><TOKEN>,</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>entries</QName></VarRef><TOKEN>,</TOKEN> <ParenthesizedExpr><TOKEN>(</TOKEN><TOKEN>)</TOKEN></ParenthesizedExpr><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr>
        <TOKEN>}</TOKEN></EnclosedExpr><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>td</QName><TOKEN>&gt;</TOKEN></DirElemConstructor><ElementContentChar>
</ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><ElementContentChar> </ElementContentChar><TOKEN>&lt;/</TOKEN><QName>tr</QName><TOKEN>&gt;</TOKEN></DirElemConstructor>
  <TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Redirects to the specified action.
 : @param  $action  action to perform
 : @param  $names   names of users
 : @param  $ids     ids
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:POST</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>'/dba/sessions'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'action'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'{$action}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'name'</StringLiteral><TOKEN>,</TOKEN>   <StringLiteral>'{$names}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>'id'</StringLiteral><TOKEN>,</TOKEN>     <StringLiteral>'{$ids}'</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:users-redirect</QName><TOKEN>(</TOKEN>
  <ParamList><Param><TOKEN>$</TOKEN><QName>action</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <QName>xs:string</QName></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>names</QName>   <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param><TOKEN>,</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>ids</QName>     <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param></ParamList>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>action</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'id'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>ids</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>