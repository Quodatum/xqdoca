<XQuery>(:~
 : Kill web sessions.
 :
 : @author Christian Gr√ºn, BaseX Team 2005-19, BSD License
 :)
<LibraryModule><ModuleDecl><TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>dba</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/sessions'</StringLiteral><TOKEN>;</TOKEN></ModuleDecl>

<Prolog><ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>Sessions</NCName> <TOKEN>=</TOKEN> <StringLiteral>'http://basex.org/modules/sessions'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>
<ModuleImport><TOKEN>import</TOKEN> <TOKEN>module</TOKEN> <TOKEN>namespace</TOKEN> <NCName>util</NCName> <TOKEN>=</TOKEN> <StringLiteral>'dba/util'</StringLiteral> <TOKEN>at</TOKEN> <StringLiteral>'../modules/util.xqm'</StringLiteral></ModuleImport><TOKEN>;</TOKEN>

(:~ Top category :)
<AnnotatedDecl><TOKEN>declare</TOKEN> <VarDecl><TOKEN>variable</TOKEN> <TOKEN>$</TOKEN><QName>dba:CAT</QName> <TOKEN>:=</TOKEN> <StringLiteral>'sessions'</StringLiteral></VarDecl></AnnotatedDecl><TOKEN>;</TOKEN>

(:~
 : Kills web sessions.
 : @param  $ids  session ids (including names)
 : @return redirection
 :)
<AnnotatedDecl><TOKEN>declare</TOKEN>
  <Annotation><TOKEN>%</TOKEN><QName>rest:GET</QName></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:path</QName><TOKEN>(</TOKEN><StringLiteral>"/dba/session-kill"</StringLiteral><TOKEN>)</TOKEN></Annotation>
  <Annotation><TOKEN>%</TOKEN><QName>rest:query-param</QName><TOKEN>(</TOKEN><StringLiteral>"id"</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>"{$ids}"</StringLiteral><TOKEN>)</TOKEN></Annotation>
<FunctionDecl><TOKEN>function</TOKEN> <QName>dba:drop</QName><TOKEN>(</TOKEN>
  <Param><TOKEN>$</TOKEN><QName>ids</QName>  <TypeDeclaration><TOKEN>as</TOKEN> <SequenceType><QName>xs:string</QName><TOKEN>*</TOKEN></SequenceType></TypeDeclaration></Param>
<TOKEN>)</TOKEN> <TOKEN>as</TOKEN> <ElementTest><TOKEN>element</TOKEN><TOKEN>(</TOKEN><QName>rest:response</QName><TOKEN>)</TOKEN></ElementTest> <EnclosedExpr><TOKEN>{</TOKEN>
  <TryCatchExpr><TryClause><TOKEN>try</TOKEN> <EnclosedExpr><TOKEN>{</TOKEN>
    <Expr><FLWORExpr><ForClause><TOKEN>for</TOKEN> <ForBinding><TOKEN>$</TOKEN><QName>id</QName> <TOKEN>in</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>ids</QName></VarRef></ForBinding></ForClause>
    <ReturnClause><TOKEN>return</TOKEN> <FunctionCall><QName>Sessions:delete</QName><ArgumentList><TOKEN>(</TOKEN><FunctionCall><QName>substring-before</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'|'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>,</TOKEN> <FunctionCall><QName>substring-after</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>id</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'|'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall><TOKEN>)</TOKEN></ArgumentList></FunctionCall></ReturnClause></FLWORExpr><TOKEN>,</TOKEN>
    <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'info'</StringLiteral><TOKEN>:</TOKEN> <FunctionCall><QName>util:info</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>ids</QName></VarRef><TOKEN>,</TOKEN> <StringLiteral>'session'</StringLiteral><TOKEN>,</TOKEN> <StringLiteral>'killed'</StringLiteral><TOKEN>)</TOKEN></ArgumentList></FunctionCall></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall></Expr>
  <TOKEN>}</TOKEN></EnclosedExpr></TryClause> <CatchClause><TOKEN>catch</TOKEN> <Wildcard>*</Wildcard> <EnclosedExpr><TOKEN>{</TOKEN>
    <FunctionCall><QName>web:redirect</QName><ArgumentList><TOKEN>(</TOKEN><VarRef><TOKEN>$</TOKEN><QName>dba:CAT</QName></VarRef><TOKEN>,</TOKEN> <MapConstructor><TOKEN>map</TOKEN> <TOKEN>{</TOKEN> <MapConstructorEntry><StringLiteral>'error'</StringLiteral><TOKEN>:</TOKEN> <VarRef><TOKEN>$</TOKEN><QName>err:description</QName></VarRef></MapConstructorEntry> <TOKEN>}</TOKEN></MapConstructor><TOKEN>)</TOKEN></ArgumentList></FunctionCall>
  <TOKEN>}</TOKEN></EnclosedExpr></CatchClause></TryCatchExpr>
<TOKEN>}</TOKEN></EnclosedExpr></FunctionDecl></AnnotatedDecl><TOKEN>;</TOKEN></Prolog></LibraryModule>
<EOF/></XQuery>