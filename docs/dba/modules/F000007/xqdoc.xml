<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2025-05-17T18:53:12.962+01:00</xqdoc:date><xqdoc:version>1.1</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>dba/databases</xqdoc:uri><xqdoc:name>dba</xqdoc:name><xqdoc:comment><xqdoc:description>&#xD;
&#xD;
Download resources.&#xD;
&#xD;
</xqdoc:description><xqdoc:author>Christian Grün, BaseX Team 2005-23, BSD License</xqdoc:author></xqdoc:comment><xqdoc:body>(:~
 : Download resources.
 :
 : @author Christian Grün, BaseX Team 2005-23, BSD License
 :)
module namespace dba = 'dba/databases';

(:~
 : Downloads a resource.
 : @param  $name      database
 : @param  $resource  resource
 : @param  $file      file name (ignored)
 : @return rest response and file content
 :)
declare
  %rest:path('/dba/db-download')
  %rest:query-param('name',     '{$name}')
  %rest:query-param('resource', '{$resource}')
function dba:db-download(
  $name      as xs:string,
  $resource  as xs:string
) as item()+ {
  try {
    web:response-header(
      map { 'media-type': db:content-type($name, $resource) },
      map { 'Content-Disposition': 'attachment; filename=' || $resource }
    ),
    let $type := db:type($name, $resource)
    return if($type = 'xml') then (
      db:get($name, $resource)
    ) else if($type = 'binary') then (
      db:get-binary($name, $resource)
    ) else (
      db:get-value($name, $resource)
    )
  } catch * {
    &lt;rest:response&gt;
      &lt;http:response status='400' message='{ $err:description }'/&gt;
    &lt;/rest:response&gt;
  }
};
</xqdoc:body></xqdoc:module><xqdoc:namespaces><xqdoc:namespace prefix="dba" uri="dba/databases"/><xqdoc:namespace prefix="rest" uri="http://exquery.org/ns/restxq"/><xqdoc:namespace prefix="xs" uri="http://www.w3.org/2001/XMLSchema"/><xqdoc:namespace prefix="web" uri="http://basex.org/modules/web"/><xqdoc:namespace prefix="db" uri="http://basex.org/modules/db"/><xqdoc:namespace prefix="http" uri="http://expath.org/ns/http-client"/><xqdoc:namespace prefix="err" uri="http://www.w3.org/2005/xqt-errors"/></xqdoc:namespaces><xqdoc:variables/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:name>dba:db-download</xqdoc:name><xqdoc:annotations><xqdoc:annotation name="rest:path"><xqdoc:literal type="xs:string">/dba/db-download</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">name</xqdoc:literal><xqdoc:literal type="xs:string">{$name}</xqdoc:literal></xqdoc:annotation><xqdoc:annotation name="rest:query-param"><xqdoc:literal type="xs:string">resource</xqdoc:literal><xqdoc:literal type="xs:string">{$resource}</xqdoc:literal></xqdoc:annotation></xqdoc:annotations><xqdoc:signature>function dba:db-download ( $name as xs:string, $resource as xs:string ) as item()+ { try { web:response-header( map { 'media-type': db:content-type($name, $resource) }, map { 'Content-Disposition': 'attachment; filename=' || $resource } ), let $type := db:type($name, $resource) return if($type = 'xml') then ( db:get($name, $resource) ) else if($type = 'binary') then ( db:get-binary($name, $resource) ) else ( db:get-value($name, $resource) ) } catch * { &lt;rest:response&gt; &lt;http:response status='400' message='{ $err:description }'/&gt; &lt;/rest:response&gt; } }</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>resource</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="+">item()</xqdoc:type></xqdoc:return><xqdoc:body>function dba:db-download(
  $name      as xs:string,
  $resource  as xs:string
) as item()+ {
  try {
    web:response-header(
      map { 'media-type': db:content-type($name, $resource) },
      map { 'Content-Disposition': 'attachment; filename=' || $resource }
    ),
    let $type := db:type($name, $resource)
    return if($type = 'xml') then (
      db:get($name, $resource)
    ) else if($type = 'binary') then (
      db:get-binary($name, $resource)
    ) else (
      db:get-value($name, $resource)
    )
  } catch * {
    &lt;rest:response&gt;
      &lt;http:response status='400' message='{ $err:description }'/&gt;
    &lt;/rest:response&gt;
  }
}</xqdoc:body></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>